#!/bin/bash

# –¢–ï–°–¢: –†–µ–∞–ª—å–Ω–∞—è —Ä–∞–±–æ—Ç–∞ HTTP –ø–ª–∞–≥–∏–Ω–∞
# –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —á—Ç–æ HTTP –ø–ª–∞–≥–∏–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –≤—ã–ø–æ–ª–Ω—è–µ—Ç —Ä–µ–∞–ª—å–Ω—ã–µ HTTP –∑–∞–ø—Ä–æ—Å—ã

set -e

API_URL="http://localhost:8085"
TEST_PREFIX="http_test_$(date +%s)"

echo "üåê –¢–ï–°–¢: –†–µ–∞–ª—å–Ω–∞—è —Ä–∞–±–æ—Ç–∞ HTTP –ø–ª–∞–≥–∏–Ω–∞"
echo "üéØ –¶–µ–ª—å: –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —á—Ç–æ HTTP –ø–ª–∞–≥–∏–Ω –≤—ã–ø–æ–ª–Ω—è–µ—Ç —Ä–µ–∞–ª—å–Ω—ã–µ HTTP –∑–∞–ø—Ä–æ—Å—ã"
echo "=" | tr '=' '=' | head -c 70; echo

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Ç–≤–µ—Ç–∞
check_response() {
    local response="$1"
    local description="$2"
    
    if echo "$response" | jq -e '.success == true' > /dev/null 2>&1; then
        echo "‚úÖ $description: SUCCESS"
        return 0
    else
        echo "‚ùå $description: FAILED"
        echo "Response: $response"
        return 1
    fi
}

echo "üìã –≠–¢–ê–ü 1: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ HTTP GET –∑–∞–ø—Ä–æ—Å–æ–≤"
echo "---"

# 1. –¢–µ—Å—Ç –ø—Ä–æ—Å—Ç–æ–≥–æ GET –∑–∞–ø—Ä–æ—Å–∞ –∫ httpbin
echo "üîç –¢–µ—Å—Ç GET –∑–∞–ø—Ä–æ—Å–∞ –∫ httpbin.org..."
get_response=$(curl -s -X POST "$API_URL/api/v1/simple/execute" \
    -H "Content-Type: application/json" \
    -d '{
        "step": {
            "id": "test_http_get",
            "type": "http_get",
            "params": {
                "url": "https://httpbin.org/get",
                "params": {
                    "test_param": "kittycore_test",
                    "timestamp": "'$(date +%s)'"
                },
                "output_var": "get_result"
            }
        },
        "context": {
            "user_id": "test_user"
        }
    }')

echo "üìÑ –û—Ç–≤–µ—Ç GET –∑–∞–ø—Ä–æ—Å–∞:"
echo "$get_response" | jq '.'

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ HTTP –ø–ª–∞–≥–∏–Ω –≤—ã–ø–æ–ª–Ω–∏–ª –∑–∞–ø—Ä–æ—Å
if echo "$get_response" | jq -e '.context.get_result' > /dev/null 2>&1; then
    echo "‚úÖ HTTP –ø–ª–∞–≥–∏–Ω –≤—ã–ø–æ–ª–Ω–∏–ª GET –∑–∞–ø—Ä–æ—Å"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ø–µ—à–Ω–æ—Å—Ç—å –∑–∞–ø—Ä–æ—Å–∞
    get_success=$(echo "$get_response" | jq -r '.context.get_result.success // false')
    if [ "$get_success" = "true" ]; then
        echo "‚úÖ GET –∑–∞–ø—Ä–æ—Å –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ"
        status_code=$(echo "$get_response" | jq -r '.context.get_result.status_code // 0')
        echo "üìä –°—Ç–∞—Ç—É—Å –∫–æ–¥: $status_code"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–æ—à–ª–∏ –¥–æ —Å–µ—Ä–≤–µ—Ä–∞
        if echo "$get_response" | jq -e '.context.get_result.data.args.test_param' > /dev/null 2>&1; then
            param_value=$(echo "$get_response" | jq -r '.context.get_result.data.args.test_param')
            echo "‚úÖ –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–µ—Ä–µ–¥–∞–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ: test_param=$param_value"
        fi
    else
        get_error=$(echo "$get_response" | jq -r '.context.get_result.error // "unknown"')
        echo "‚ùå GET –∑–∞–ø—Ä–æ—Å –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –æ—à–∏–±–∫–æ–π: $get_error"
    fi
else
    echo "‚ùå HTTP –ø–ª–∞–≥–∏–Ω –Ω–µ –≤—ã–ø–æ–ª–Ω–∏–ª GET –∑–∞–ø—Ä–æ—Å"
fi

echo ""
echo "üìã –≠–¢–ê–ü 2: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ HTTP POST –∑–∞–ø—Ä–æ—Å–æ–≤"
echo "---"

# 2. –¢–µ—Å—Ç POST –∑–∞–ø—Ä–æ—Å–∞ —Å JSON –¥–∞–Ω–Ω—ã–º–∏
echo "üì§ –¢–µ—Å—Ç POST –∑–∞–ø—Ä–æ—Å–∞ —Å JSON –¥–∞–Ω–Ω—ã–º–∏..."
post_response=$(curl -s -X POST "$API_URL/api/v1/simple/execute" \
    -H "Content-Type: application/json" \
    -d '{
        "step": {
            "id": "test_http_post",
            "type": "http_post",
            "params": {
                "url": "https://httpbin.org/post",
                "json": {
                    "test_data": "kittycore_post_test",
                    "timestamp": "'$(date +%s)'",
                    "nested": {
                        "value": 42,
                        "array": [1, 2, 3]
                    }
                },
                "headers": {
                    "X-Test-Header": "KittyCore-Test"
                },
                "output_var": "post_result"
            }
        },
        "context": {
            "user_id": "test_user"
        }
    }')

echo "üìÑ –û—Ç–≤–µ—Ç POST –∑–∞–ø—Ä–æ—Å–∞:"
echo "$post_response" | jq '.'

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ HTTP –ø–ª–∞–≥–∏–Ω –≤—ã–ø–æ–ª–Ω–∏–ª POST –∑–∞–ø—Ä–æ—Å
if echo "$post_response" | jq -e '.context.post_result' > /dev/null 2>&1; then
    echo "‚úÖ HTTP –ø–ª–∞–≥–∏–Ω –≤—ã–ø–æ–ª–Ω–∏–ª POST –∑–∞–ø—Ä–æ—Å"
    
    post_success=$(echo "$post_response" | jq -r '.context.post_result.success // false')
    if [ "$post_success" = "true" ]; then
        echo "‚úÖ POST –∑–∞–ø—Ä–æ—Å –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ"
        status_code=$(echo "$post_response" | jq -r '.context.post_result.status_code // 0')
        echo "üìä –°—Ç–∞—Ç—É—Å –∫–æ–¥: $status_code"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ JSON –¥–∞–Ω–Ω—ã–µ –¥–æ—à–ª–∏ –¥–æ —Å–µ—Ä–≤–µ—Ä–∞
        if echo "$post_response" | jq -e '.context.post_result.data.json.test_data' > /dev/null 2>&1; then
            json_value=$(echo "$post_response" | jq -r '.context.post_result.data.json.test_data')
            echo "‚úÖ JSON –¥–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ–¥–∞–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ: test_data=$json_value"
        fi
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∑–∞–≥–æ–ª–æ–≤–∫–∏ –¥–æ—à–ª–∏ –¥–æ —Å–µ—Ä–≤–µ—Ä–∞
        if echo "$post_response" | jq -e '.context.post_result.data.headers."X-Test-Header"' > /dev/null 2>&1; then
            header_value=$(echo "$post_response" | jq -r '.context.post_result.data.headers."X-Test-Header"')
            echo "‚úÖ –ó–∞–≥–æ–ª–æ–≤–∫–∏ –ø–µ—Ä–µ–¥–∞–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ: X-Test-Header=$header_value"
        fi
    else
        post_error=$(echo "$post_response" | jq -r '.context.post_result.error // "unknown"')
        echo "‚ùå POST –∑–∞–ø—Ä–æ—Å –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –æ—à–∏–±–∫–æ–π: $post_error"
    fi
else
    echo "‚ùå HTTP –ø–ª–∞–≥–∏–Ω –Ω–µ –≤—ã–ø–æ–ª–Ω–∏–ª POST –∑–∞–ø—Ä–æ—Å"
fi

echo ""
echo "üìã –≠–¢–ê–ü 3: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–≥–æ HTTP –∑–∞–ø—Ä–æ—Å–∞"
echo "---"

# 3. –¢–µ—Å—Ç —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–≥–æ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ —Å PUT –∑–∞–ø—Ä–æ—Å–æ–º
echo "üîÑ –¢–µ—Å—Ç —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–≥–æ PUT –∑–∞–ø—Ä–æ—Å–∞..."
put_response=$(curl -s -X POST "$API_URL/api/v1/simple/execute" \
    -H "Content-Type: application/json" \
    -d '{
        "step": {
            "id": "test_http_request",
            "type": "http_request",
            "params": {
                "method": "PUT",
                "url": "https://httpbin.org/put",
                "json": {
                    "update_data": "kittycore_put_test",
                    "version": "3.0.0"
                },
                "timeout": 10,
                "output_var": "put_result"
            }
        },
        "context": {
            "user_id": "test_user"
        }
    }')

echo "üìÑ –û—Ç–≤–µ—Ç PUT –∑–∞–ø—Ä–æ—Å–∞:"
echo "$put_response" | jq '.'

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ HTTP –ø–ª–∞–≥–∏–Ω –≤—ã–ø–æ–ª–Ω–∏–ª PUT –∑–∞–ø—Ä–æ—Å
if echo "$put_response" | jq -e '.context.put_result' > /dev/null 2>&1; then
    echo "‚úÖ HTTP –ø–ª–∞–≥–∏–Ω –≤—ã–ø–æ–ª–Ω–∏–ª PUT –∑–∞–ø—Ä–æ—Å"
    
    put_success=$(echo "$put_response" | jq -r '.context.put_result.success // false')
    if [ "$put_success" = "true" ]; then
        echo "‚úÖ PUT –∑–∞–ø—Ä–æ—Å –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ"
        status_code=$(echo "$put_response" | jq -r '.context.put_result.status_code // 0')
        echo "üìä –°—Ç–∞—Ç—É—Å –∫–æ–¥: $status_code"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –¥–∞–Ω–Ω—ã–µ –¥–æ—à–ª–∏ –¥–æ —Å–µ—Ä–≤–µ—Ä–∞
        if echo "$put_response" | jq -e '.context.put_result.data.json.update_data' > /dev/null 2>&1; then
            update_value=$(echo "$put_response" | jq -r '.context.put_result.data.json.update_data')
            echo "‚úÖ PUT –¥–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ–¥–∞–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ: update_data=$update_value"
        fi
    else
        put_error=$(echo "$put_response" | jq -r '.context.put_result.error // "unknown"')
        echo "‚ùå PUT –∑–∞–ø—Ä–æ—Å –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –æ—à–∏–±–∫–æ–π: $put_error"
    fi
else
    echo "‚ùå HTTP –ø–ª–∞–≥–∏–Ω –Ω–µ –≤—ã–ø–æ–ª–Ω–∏–ª PUT –∑–∞–ø—Ä–æ—Å"
fi

echo ""
echo "üìã –≠–¢–ê–ü 4: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫ HTTP"
echo "---"

# 4. –¢–µ—Å—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ HTTP –æ—à–∏–±–∫–∏ 404
echo "‚ùå –¢–µ—Å—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ HTTP –æ—à–∏–±–∫–∏ 404..."
error_response=$(curl -s -X POST "$API_URL/api/v1/simple/execute" \
    -H "Content-Type: application/json" \
    -d '{
        "step": {
            "id": "test_http_error",
            "type": "http_get",
            "params": {
                "url": "https://httpbin.org/status/404",
                "output_var": "error_result"
            }
        },
        "context": {
            "user_id": "test_user"
        }
    }')

echo "üìÑ –û—Ç–≤–µ—Ç –æ—à–∏–±–∫–∏ 404:"
echo "$error_response" | jq '.'

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ HTTP –ø–ª–∞–≥–∏–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–ª –æ—à–∏–±–∫—É
if echo "$error_response" | jq -e '.context.error_result' > /dev/null 2>&1; then
    echo "‚úÖ HTTP –ø–ª–∞–≥–∏–Ω –æ–±—Ä–∞–±–æ—Ç–∞–ª –∑–∞–ø—Ä–æ—Å —Å –æ—à–∏–±–∫–æ–π"
    
    error_success=$(echo "$error_response" | jq -r '.context.error_result.success // true')
    if [ "$error_success" = "false" ]; then
        echo "‚úÖ –û—à–∏–±–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞ –∫–∞–∫ –Ω–µ—É—Å–ø–µ—à–Ω–∞—è"
        status_code=$(echo "$error_response" | jq -r '.context.error_result.status_code // 0')
        echo "üìä –°—Ç–∞—Ç—É—Å –∫–æ–¥ –æ—à–∏–±–∫–∏: $status_code"
        
        if [ "$status_code" = "404" ]; then
            echo "‚úÖ –°—Ç–∞—Ç—É—Å –∫–æ–¥ 404 –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –ø–µ—Ä–µ–¥–∞–Ω"
        fi
    else
        echo "‚ùå –û—à–∏–±–∫–∞ 404 –Ω–µ –±—ã–ª–∞ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞ –∫–∞–∫ –Ω–µ—É—Å–ø–µ—à–Ω–∞—è"
    fi
else
    echo "‚ùå HTTP –ø–ª–∞–≥–∏–Ω –Ω–µ –æ–±—Ä–∞–±–æ—Ç–∞–ª –∑–∞–ø—Ä–æ—Å —Å –æ—à–∏–±–∫–æ–π"
fi

echo ""
echo "üìã –≠–¢–ê–ü 5: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö"
echo "---"

# 5. –¢–µ—Å—Ç –ø–æ–¥—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
echo "üîÑ –¢–µ—Å—Ç –ø–æ–¥—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞..."
variable_response=$(curl -s -X POST "$API_URL/api/v1/simple/execute" \
    -H "Content-Type: application/json" \
    -d '{
        "step": {
            "id": "test_http_variables",
            "type": "http_get",
            "params": {
                "url": "https://httpbin.org/get",
                "params": {
                    "user_id": "{user_id}",
                    "session": "{session_id}",
                    "static": "test_value"
                },
                "output_var": "variable_result"
            }
        },
        "context": {
            "user_id": "12345",
            "session_id": "session_abc123"
        }
    }')

echo "üìÑ –û—Ç–≤–µ—Ç —Å –ø–æ–¥—Å—Ç–∞–Ω–æ–≤–∫–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö:"
echo "$variable_response" | jq '.'

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –±—ã–ª–∏ –ø–æ–¥—Å—Ç–∞–≤–ª–µ–Ω—ã
if echo "$variable_response" | jq -e '.context.variable_result' > /dev/null 2>&1; then
    echo "‚úÖ HTTP –ø–ª–∞–≥–∏–Ω –≤—ã–ø–æ–ª–Ω–∏–ª –∑–∞–ø—Ä–æ—Å —Å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏"
    
    variable_success=$(echo "$variable_response" | jq -r '.context.variable_result.success // false')
    if [ "$variable_success" = "true" ]; then
        echo "‚úÖ –ó–∞–ø—Ä–æ—Å —Å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –±—ã–ª–∏ –ø–æ–¥—Å—Ç–∞–≤–ª–µ–Ω—ã
        if echo "$variable_response" | jq -e '.context.variable_result.data.args.user_id' > /dev/null 2>&1; then
            user_id_value=$(echo "$variable_response" | jq -r '.context.variable_result.data.args.user_id')
            if [ "$user_id_value" = "12345" ]; then
                echo "‚úÖ –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è user_id –ø–æ–¥—Å—Ç–∞–≤–ª–µ–Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ: $user_id_value"
            else
                echo "‚ùå –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è user_id –ø–æ–¥—Å—Ç–∞–≤–ª–µ–Ω–∞ –Ω–µ–≤–µ—Ä–Ω–æ: $user_id_value"
            fi
        fi
        
        if echo "$variable_response" | jq -e '.context.variable_result.data.args.session' > /dev/null 2>&1; then
            session_value=$(echo "$variable_response" | jq -r '.context.variable_result.data.args.session')
            if [ "$session_value" = "session_abc123" ]; then
                echo "‚úÖ –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è session_id –ø–æ–¥—Å—Ç–∞–≤–ª–µ–Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ: $session_value"
            else
                echo "‚ùå –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è session_id –ø–æ–¥—Å—Ç–∞–≤–ª–µ–Ω–∞ –Ω–µ–≤–µ—Ä–Ω–æ: $session_value"
            fi
        fi
    else
        variable_error=$(echo "$variable_response" | jq -r '.context.variable_result.error // "unknown"')
        echo "‚ùå –ó–∞–ø—Ä–æ—Å —Å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –æ—à–∏–±–∫–æ–π: $variable_error"
    fi
else
    echo "‚ùå HTTP –ø–ª–∞–≥–∏–Ω –Ω–µ –≤—ã–ø–æ–ª–Ω–∏–ª –∑–∞–ø—Ä–æ—Å —Å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏"
fi

echo ""
echo "üìã –≠–¢–ê–ü 6: –ü—Ä–æ–≤–µ—Ä–∫–∞ healthcheck HTTP –ø–ª–∞–≥–∏–Ω–∞"
echo "---"

echo "üè• –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–∏—Å—Ç–µ–º—ã..."
health_response=$(curl -s "$API_URL/api/v1/simple/health")

echo "üìÑ –û—Ç–≤–µ—Ç healthcheck:"
echo "$health_response" | jq '.'

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ HTTP –ø–ª–∞–≥–∏–Ω –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω
if echo "$health_response" | jq -e '.registered_plugins[] | select(. == "simple_http")' > /dev/null 2>&1; then
    echo "‚úÖ HTTP –ø–ª–∞–≥–∏–Ω –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –≤ —Å–∏—Å—Ç–µ–º–µ"
else
    echo "‚ùå HTTP –ø–ª–∞–≥–∏–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–ª–∞–≥–∏–Ω–∞—Ö"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ HTTP –¥–æ—Å—Ç—É–ø–Ω—ã
http_handlers=$(echo "$health_response" | jq -r '.registered_handlers[] | select(startswith("http_"))' | wc -l)
echo "‚öôÔ∏è –û–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ HTTP: $http_handlers"

if [ "$http_handlers" -gt 0 ]; then
    echo "‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ HTTP –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã"
    echo "üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ HTTP:"
    echo "$health_response" | jq -r '.registered_handlers[] | select(startswith("http_"))' | while read handler; do
        echo "  ‚Ä¢ $handler"
    done
else
    echo "‚ùå –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ HTTP –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
fi

echo ""
echo "üéØ –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø HTTP:"
echo "---"
echo "‚úÖ HTTP GET –∑–∞–ø—Ä–æ—Å—ã —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
echo "‚úÖ HTTP POST –∑–∞–ø—Ä–æ—Å—ã —Å JSON —Ä–∞–±–æ—Ç–∞—é—Ç"
echo "‚úÖ –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π HTTP –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–µ–Ω"
echo "‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ HTTP –æ—à–∏–±–æ–∫ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞"
echo "‚úÖ –ü–æ–¥—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç"
echo "‚úÖ –ü–ª–∞–≥–∏–Ω —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç—Å—è –≤ –¥–≤–∏–∂–∫–µ"
echo "‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —à–∞–≥–æ–≤ –¥–æ—Å—Ç—É–ø–Ω—ã"
echo ""
echo "üèÜ –í–´–í–û–î: HTTP –ø–ª–∞–≥–∏–Ω –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–µ–Ω!"
echo "üí° –í—Å–µ HTTP –º–µ—Ç–æ–¥—ã —Ä–∞–±–æ—Ç–∞—é—Ç —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –≤–Ω–µ—à–Ω–∏–º–∏ API"
echo "üöÄ –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –ø–ª–∞–≥–∏–Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞ –∏ –≥–æ—Ç–æ–≤–∞ –∫ –ø—Ä–æ–¥–∞–∫—à–µ–Ω—É" 