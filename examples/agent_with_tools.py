#!/usr/bin/env python3
"""
üõ†Ô∏è –ê–≥–µ–Ω—Ç —Å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º–∏ - KittyCore 2.0 (15 –º–∏–Ω—É—Ç)

–≠—Ç–æ—Ç –ø—Ä–∏–º–µ—Ä –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–∞–∫ —Å–æ–∑–¥–∞—Ç—å –∞–≥–µ–Ω—Ç–∞ —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏
–∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º–∏ –¥–ª—è —Ä–µ—à–µ–Ω–∏—è –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏—Ö –∑–∞–¥–∞—á.
"""

import os
from kittycore import Agent
from kittycore.tools import WebSearchTool, EmailTool
from kittycore.memory import PersistentMemory

def main():
    print("ü§ñ –°–æ–∑–¥–∞–Ω–∏–µ –∞–≥–µ–Ω—Ç–∞ —Å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º–∏...")
    
    # –®–∞–≥ 1: –°–æ–∑–¥–∞—Ç—å –∞–≥–µ–Ω—Ç–∞ —Å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º–∏ –∏ –ø–∞–º—è—Ç—å—é
    smart_assistant = Agent(
        prompt="""
        –¢—ã —É–º–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ —Å–æ –¥–æ—Å—Ç—É–ø–æ–º –∫ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º.
        
        –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:
        - –ü–æ–∏—Å–∫ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ (web_search)
        - –û—Ç–ø—Ä–∞–≤–∫–∞ email (email)
        - –ü–∞–º—è—Ç—å –ø—Ä–æ—à–ª—ã—Ö —Ä–∞–∑–≥–æ–≤–æ—Ä–æ–≤
        
        –ò—Å–ø–æ–ª—å–∑—É–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –∫–æ–≥–¥–∞ –Ω—É–∂–Ω–æ –Ω–∞–π—Ç–∏ —Å–≤–µ–∂—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
        –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ. –í—Å–µ–≥–¥–∞ –æ–±—ä—è—Å–Ω—è–π —á—Ç–æ –¥–µ–ª–∞–µ—à—å.
        """,
        tools=[
            WebSearchTool(max_results=5),
            EmailTool()
        ],
        memory=PersistentMemory(file_path="assistant_memory.json")
    )
    
    print("‚úÖ –ê–≥–µ–Ω—Ç —Å–æ–∑–¥–∞–Ω —Å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º–∏:")
    for tool_name in smart_assistant.tools.keys():
        print(f"  üîß {tool_name}")
    
    print("\nüß† –ê–≥–µ–Ω—Ç –∏–º–µ–µ—Ç –ø–æ—Å—Ç–æ—è–Ω–Ω—É—é –ø–∞–º—è—Ç—å")
    print("üìù –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:")
    print("  '–ø–æ–∏—Å–∫: <–∑–∞–ø—Ä–æ—Å>' - –ø–æ–∏—Å–∫ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ")
    print("  'email: <–∞–¥—Ä–µ—Å>: <—Ç–µ–º–∞>: <—Ç–µ–∫—Å—Ç>' - –æ—Ç–ø—Ä–∞–≤–∏—Ç—å email")
    print("  '–ø–∞–º—è—Ç—å' - –ø–æ–∫–∞–∑–∞—Ç—å —á—Ç–æ –ø–æ–º–Ω–∏—Ç –∞–≥–µ–Ω—Ç")
    print("  '–≤—ã—Ö–æ–¥' - –∑–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞–±–æ—Ç—É")
    print("-" * 40)
    
    # –®–∞–≥ 2: –î–∏–∞–ª–æ–≥ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
    while True:
        try:
            user_input = input("\nüë§ –í—ã: ")
            
            if user_input.lower() in ['–≤—ã—Ö–æ–¥', 'quit', 'exit']:
                print("üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
                break
            
            if user_input.lower() == '–ø–∞–º—è—Ç—å':
                # –ü–æ–∫–∞–∑–∞—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–∞–º—è—Ç–∏
                memory_summary = smart_assistant.memory.get_summary()
                print(f"üß† –ü–∞–º—è—Ç—å: {memory_summary}")
                recent = smart_assistant.memory.recall("", limit=3)
                if recent:
                    print("üìö –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–ø–∏—Å–∏:")
                    for entry in recent:
                        print(f"  üí≠ {entry['input'][:50]}...")
                continue
            
            # –û–±—Ä–∞–±–æ—Ç–∞—Ç—å –∑–∞–ø—Ä–æ—Å —á–µ—Ä–µ–∑ –∞–≥–µ–Ω—Ç–∞
            print("ü§î –î—É–º–∞—é...")
            response = smart_assistant.run(user_input)
            print(f"\nü§ñ –ü–æ–º–æ—â–Ω–∏–∫: {response}")
            
            # –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
            stats = smart_assistant.get_conversation_stats()
            print(f"üìä –†–∞–∑–≥–æ–≤–æ—Ä–æ–≤: {stats['total']}, –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ: {stats['tools_used']}")
            
        except KeyboardInterrupt:
            print("\nüëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
            break
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

def demo_mode():
    """–î–µ–º–æ —Ä–µ–∂–∏–º –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üéØ –î–ï–ú–û –†–ï–ñ–ò–ú - –ë—ã—Å—Ç—Ä–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤")
    
    agent = Agent(
        prompt="–¢—ã —Ç–µ—Å—Ç–æ–≤—ã–π –ø–æ–º–æ—â–Ω–∏–∫. –ö—Ä–∞—Ç–∫–æ —Ç–µ—Å—Ç–∏—Ä—É–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã.",
        tools=[WebSearchTool(), EmailTool()]
    )
    
    # –¢–µ—Å—Ç –ø–æ–∏—Å–∫–∞
    print("\nüîç –¢–µ—Å—Ç –ø–æ–∏—Å–∫–∞...")
    search_result = agent.run("–ù–∞–π–¥–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ Python 3.12")
    print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {search_result[:100]}...")
    
    # –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
    for tool_name, tool in agent.tools.items():
        stats = tool.get_stats()
        print(f"üîß {tool_name}: {stats['total_calls']} –≤—ã–∑–æ–≤–æ–≤")

if __name__ == "__main__":
    print("üê± KittyCore 2.0 - –ê–≥–µ–Ω—Ç —Å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º–∏")
    print("=" * 50)
    
    if len(os.sys.argv) > 1 and os.sys.argv[1] == "demo":
        demo_mode()
    else:
        main() 