#!/usr/bin/env python3
"""
üß™ –ü—Ä–æ—Å—Ç–æ–µ –¥–µ–º–æ SmartValidator
============================

–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∫–∞–∫ SmartValidator –æ—Ç–ª–∏—á–∞–µ—Ç –ø–ª–∞–Ω –æ—Ç —Ä–µ–∞–ª—å–Ω–æ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
"""

import asyncio
import os
import tempfile
import time
from agents.smart_validator import SmartValidator


async def demo_current_problem():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ–º —Ç–µ–∫—É—â—É—é –ø—Ä–æ–±–ª–µ–º—É KittyCore - –ø–ª–∞–Ω –≤–º–µ—Å—Ç–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞"""
    
    print("üê± –î–µ–º–æ –ø—Ä–æ–±–ª–µ–º—ã KittyCore 3.0")
    print("=" * 50)
    print("–ü—Ä–æ–±–ª–µ–º–∞: —Å–∏—Å—Ç–µ–º–∞ —Å–æ–∑–¥–∞–µ—Ç –ø–ª–∞–Ω—ã –≤–º–µ—Å—Ç–æ —Ä–µ–∞–ª—å–Ω—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤")
    print("–†–µ—à–µ–Ω–∏–µ: SmartValidator —Å LLM-–æ—Ü–µ–Ω–∫–æ–π –∫–æ–Ω–µ—á–Ω–æ–π –ø–æ–ª—å–∑—ã")
    print()
    
    validator = SmartValidator()
    
    # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –ø–∞–ø–∫—É
    with tempfile.TemporaryDirectory() as temp_dir:
        
        # === –ò–ú–ò–¢–ò–†–£–ï–ú –¢–ï–ö–£–©–£–Æ –ü–†–û–ë–õ–ï–ú–£ ===
        print("üìù –¢–ï–ö–£–©–ê–Ø –ü–†–û–ë–õ–ï–ú–ê: –°–æ–∑–¥–∞–Ω –ø–ª–∞–Ω –≤–º–µ—Å—Ç–æ —Å–∞–π—Ç–∞")
        print("-" * 50)
        
        # –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª –∫–∞–∫ —ç—Ç–æ –¥–µ–ª–∞–µ—Ç —Ç–µ–∫—É—â–∞—è —Å–∏—Å—Ç–µ–º–∞
        plan_file = os.path.join(temp_dir, "kittens-website.html")
        with open(plan_file, 'w', encoding='utf-8') as f:
            f.write("""
# –ü–ª–∞–Ω —Å–æ–∑–¥–∞–Ω–∏—è —Å–∞–π—Ç–∞ —Å –∫–æ—Ç—è—Ç–∞–º–∏

## –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Å–∞–π—Ç–∞
1. –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
2. –ì–∞–ª–µ—Ä–µ—è –∫–æ—Ç—è—Ç  
3. –ö–æ–Ω—Ç–∞–∫—Ç—ã

## –ù–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
- HTML —Ä–∞–∑–º–µ—Ç–∫–∞
- CSS —Å—Ç–∏–ª–∏
- –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–æ—Ç—è—Ç
- JavaScript –¥–ª—è –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏

## –ü—Ä–∏–º–µ—Ä–Ω—ã–π –∫–æ–¥ HTML:
```html
<!DOCTYPE html>
<html>
<head>
    <title>–ö–æ—Ç—è—Ç–∞</title>
</head>
<body>
    <h1>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!</h1>
    <p>–ó–¥–µ—Å—å –±—É–¥—É—Ç –∫–æ—Ç—è—Ç–∞</p>
</body>
</html>
```

–≠—Ç–æ—Ç –ø–ª–∞–Ω –ø–æ–º–æ–∂–µ—Ç —Å–æ–∑–¥–∞—Ç—å –∫—Ä–∞—Å–∏–≤—ã–π —Å–∞–π—Ç —Å –∫–æ—Ç—è—Ç–∞–º–∏.
""")
        
        # –ò–º–∏—Ç–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å–∏—Å—Ç–µ–º—ã
        system_result = {
            "success": True,
            "message": "–°–∞–π—Ç —Å –∫–æ—Ç—è—Ç–∞–º–∏ —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!",
            "created_files": [plan_file],
            "agent_actions": ["–°–æ–∑–¥–∞–Ω HTML —Ñ–∞–π–ª", "–î–æ–±–∞–≤–ª–µ–Ω –∫–æ–Ω—Ç–µ–Ω—Ç –æ –∫–æ—Ç—è—Ç–∞—Ö"]
        }
        
        print(f"‚úÖ –°–∏—Å—Ç–µ–º–∞ –æ—Ç—á–∏—Ç–∞–ª–∞—Å—å: {system_result['message']}")
        print(f"üìÅ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª: {os.path.basename(plan_file)}")
        print(f"üîß –î–µ–π—Å—Ç–≤–∏—è: {', '.join(system_result['agent_actions'])}")
        
        # === –£–ú–ù–ê–Ø –í–ê–õ–ò–î–ê–¶–ò–Ø ===
        print(f"\nüß† –ó–ê–ü–£–°–ö –£–ú–ù–û–ô –í–ê–õ–ò–î–ê–¶–ò–ò...")
        validation_start = time.time()
        
        validation = await validator.validate_result(
            original_task="–°–¥–µ–ª–∞–π —Å–∞–π—Ç —Å –∫–æ—Ç—è—Ç–∞–º–∏",
            result=system_result,
            created_files=[plan_file]
        )
        
        validation_time = time.time() - validation_start
        
        print(f"üîç –í–∞–ª–∏–¥–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –∑–∞ {validation_time:.2f}—Å")
        print()
        
        # === –†–ï–ó–£–õ–¨–¢–ê–¢–´ –í–ê–õ–ò–î–ê–¶–ò–ò ===
        print("üìä –†–ï–ó–£–õ–¨–¢–ê–¢ –£–ú–ù–û–ô –í–ê–õ–ò–î–ê–¶–ò–ò")
        print("-" * 50)
        print(f"üéØ –í–µ—Ä–¥–∏–∫—Ç: {validation.verdict}")
        print(f"üìä –û—Ü–µ–Ω–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞: {validation.score:.1f}/1.0")
        print(f"üí∞ –ü–æ–ª—å–∑–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:")
        print(f"   {validation.user_benefit}")
        
        if validation.issues:
            print(f"\n‚ö†Ô∏è  –ù–∞–π–¥–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã:")
            for issue in validation.issues:
                print(f"   ‚Ä¢ {issue}")
        
        if validation.recommendations:
            print(f"\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
            for rec in validation.recommendations:
                print(f"   ‚Ä¢ {rec}")
        
        # === –ò–¢–û–ì–û–í–´–ô –°–¢–ê–¢–£–° ===
        print(f"\nüéØ –ò–¢–û–ì–û–í–´–ô –°–¢–ê–¢–£–°:")
        if validation.is_valid:
            print("   ‚úÖ –ö–ê–ß–ï–°–¢–í–û –ü–û–î–¢–í–ï–†–ñ–î–ï–ù–û - —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!")
        else:
            print("   ‚ùå –ö–ê–ß–ï–°–¢–í–û –ù–ï –°–û–û–¢–í–ï–¢–°–¢–í–£–ï–¢ - —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ç—Ä–µ–±—É–µ—Ç –¥–æ—Ä–∞–±–æ—Ç–∫–∏!")
            
        print(f"\nüí° –í–´–í–û–î:")
        print(f"   –°–∏—Å—Ç–µ–º–∞ —Å–æ–∑–¥–∞–ª–∞ —Ñ–∞–π–ª –∏ –æ—Ç—á–∏—Ç–∞–ª–∞—Å—å –æ–± —É—Å–ø–µ—Ö–µ,")
        print(f"   –Ω–æ SmartValidator –≤—ã—è–≤–∏–ª —á—Ç–æ —ç—Ç–æ –ø–ª–∞–Ω, –∞ –Ω–µ —Å–∞–π—Ç!")
        print(f"   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ù–ï –ø–æ–ª—É—á–∏–ª —Ç–æ–≥–æ, —á—Ç–æ –ø—Ä–æ—Å–∏–ª.")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞
        print(f"\nüìÑ –°–û–î–ï–†–ñ–ò–ú–û–ï –°–û–ó–î–ê–ù–ù–û–ì–û –§–ê–ô–õ–ê:")
        print("-" * 50)
        with open(plan_file, 'r', encoding='utf-8') as f:
            content = f.read()
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 300 —Å–∏–º–≤–æ–ª–æ–≤
            preview = content[:300] + ("..." if len(content) > 300 else "")
            print(preview)


if __name__ == "__main__":
    asyncio.run(demo_current_problem())