#!/usr/bin/env python3
"""
–¢–µ—Å—Ç AmoCRM –ø–ª–∞–≥–∏–Ω–∞ –≤–Ω—É—Ç—Ä–∏ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
"""

import asyncio
import sys
sys.path.append('/app')

from app.core.simple_engine import create_engine

async def test():
    print('üß™ –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –¥–≤–∏–∂–∫–∞ —Å –ø–ª–∞–≥–∏–Ω–∞–º–∏...')
    
    try:
        engine = await create_engine()
        print(f'üì¶ –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–ª–∞–≥–∏–Ω—ã: {engine.get_registered_plugins()}')
        print(f'üîß –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤: {len(engine.get_registered_handlers())}')
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º AmoCRM –ø–ª–∞–≥–∏–Ω
        if 'simple_amocrm' in engine.plugins:
            amocrm = engine.plugins['simple_amocrm']
            print(f'‚úÖ AmoCRM –ø–ª–∞–≥–∏–Ω –Ω–∞–π–¥–µ–Ω')
            settings = amocrm.get_current_settings()
            print(f'‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏: {settings}')
            health = await amocrm.healthcheck()
            print(f'üè• Healthcheck: {health}')
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
            handlers = amocrm.register_handlers()
            print(f'üîß –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ AmoCRM: {list(handlers.keys())}')
        else:
            print('‚ùå AmoCRM –ø–ª–∞–≥–∏–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω')
            
    except Exception as e:
        print(f'‚ùå –û—à–∏–±–∫–∞: {e}')
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    asyncio.run(test()) 