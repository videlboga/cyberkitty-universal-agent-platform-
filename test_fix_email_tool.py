#!/usr/bin/env python3
"""
üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: EmailTool - –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∏–º–ø–æ—Ä—Ç

–ü–†–û–ë–õ–ï–ú–ê: EmailTool –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ kittycore.tools.email_tool
–†–ï–®–ï–ù–ò–ï: –ò–º–ø–æ—Ä—Ç –∏–∑ communication_tools.py + —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–µ–∑ —Ä–µ–∞–ª—å–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏
"""

import time

def test_email_tool():
    """–¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ EmailTool"""
    print("üìß –¢–ï–°–¢ –ò–°–ü–†–ê–í–õ–ï–ù–ù–û–ì–û: EmailTool")
    
    try:
        from kittycore.tools.communication_tools import EmailTool
        print("‚úÖ –ò–º–ø–æ—Ä—Ç —É—Å–ø–µ—à–µ–Ω –∏–∑ communication_tools")
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç
        tool = EmailTool()
        print("‚úÖ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
        actions = tool.get_available_actions() if hasattr(tool, 'get_available_actions') else []
        print(f"üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è: {actions}")
        
        # –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ (–±–µ–∑ —Ä–µ–∞–ª—å–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏)
        print("\nüìù –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –º–µ—Ç–æ–¥ execute
        if hasattr(tool, 'execute'):
            import inspect
            sig = inspect.signature(tool.execute)
            print(f"üîç –°–∏–≥–Ω–∞—Ç—É—Ä–∞ execute: {sig}")
            
            # –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è—Ö (–¥–æ–ª–∂–Ω–æ —Ä–∞–±–æ—Ç–∞—Ç—å –±–µ–∑ SMTP)
            try:
                if 'get_info' in actions:
                    result1 = tool.execute(action="get_info")
                elif 'status' in actions:
                    result1 = tool.execute(action="status")  
                else:
                    # –ü—Ä–æ–±—É–µ–º –≤–∞–ª–∏–¥–∞—Ü–∏—é email (–Ω–µ —Ç—Ä–µ–±—É–µ—Ç SMTP)
                    result1 = tool.execute(
                        action="validate_email",
                        email="test@example.com"
                    )
                
                print(f"‚úÖ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å: success={getattr(result1, 'success', 'N/A')}")
                if hasattr(result1, 'data'):
                    print(f"üìä –†–∞–∑–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö: {len(str(result1.data))} —Å–∏–º–≤–æ–ª–æ–≤")
                
            except Exception as e:
                print(f"‚ö†Ô∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç: {e}")
                result1 = None
            
            # –¢–µ—Å—Ç 2: –í–∞–ª–∏–¥–∞—Ü–∏—è email –∞–¥—Ä–µ—Å–∞ (–ª–æ–∫–∞–ª—å–Ω–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è)
            print("\nüìù –¢–µ—Å—Ç 2: –í–∞–ª–∏–¥–∞—Ü–∏—è email")
            try:
                result2 = tool.execute(
                    action="validate",
                    email="test@example.com"
                )
                print(f"‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è email: success={getattr(result2, 'success', 'N/A')}")
                
            except Exception as e:
                print(f"‚ö†Ô∏è –í–∞–ª–∏–¥–∞—Ü–∏—è –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç: {e}")
                result2 = None
            
            # –¢–µ—Å—Ç 3: –°–æ–∑–¥–∞–Ω–∏–µ —á–µ—Ä–Ω–æ–≤–∏–∫–∞ (–ª–æ–∫–∞–ª—å–Ω–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è)
            print("\nüìù –¢–µ—Å—Ç 3: –°–æ–∑–¥–∞–Ω–∏–µ —á–µ—Ä–Ω–æ–≤–∏–∫–∞")
            try:
                result3 = tool.execute(
                    action="draft",
                    to="test@example.com",
                    subject="–¢–µ—Å—Ç–æ–≤–æ–µ –ø–∏—Å—å–º–æ",
                    body="–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ –ø–∏—Å—å–º–æ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ EmailTool"
                )
                print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ —á–µ—Ä–Ω–æ–≤–∏–∫–∞: success={getattr(result3, 'success', 'N/A')}")
                
            except Exception as e:
                print(f"‚ö†Ô∏è –°–æ–∑–¥–∞–Ω–∏–µ —á–µ—Ä–Ω–æ–≤–∏–∫–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç: {e}")
                result3 = None
            
            # –ü–æ–¥—Å—á–µ—Ç —É—Å–ø–µ—à–Ω–æ—Å—Ç–∏
            results = [r for r in [result1, result2, result3] if r is not None]
            if results:
                success_count = sum(1 for r in results if hasattr(r, 'success') and r.success)
                success_rate = (success_count / len(results)) * 100
                
                print(f"\nüìä –ò–¢–û–ì–ò: {success_count}/{len(results)} —Ç–µ—Å—Ç–æ–≤ —É—Å–ø–µ—à–Ω–æ ({success_rate:.1f}%)")
                
                if success_rate >= 50:  # –ë–æ–ª–µ–µ –º—è–≥–∫–∏–π –∫—Ä–∏—Ç–µ—Ä–∏–π –¥–ª—è email –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞
                    return f"‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù: {success_rate:.1f}% —É—Å–ø–µ—Ö"
                else:
                    return f"‚ùå –ß–ê–°–¢–ò–ß–ù–û: {success_rate:.1f}% —É—Å–ø–µ—Ö"
            else:
                return "‚ùå –ù–ï–¢ –¢–ï–°–¢–û–í: –≤—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–≤–∞–ª–∏–ª–∏—Å—å"
                
        else:
            return "‚ùå –ù–ï–¢ –ú–ï–¢–û–î–ê execute"
            
    except ImportError as e:
        return f"‚ùå –ò–ú–ü–û–†–¢: {e}"
    except Exception as e:
        print(f"‚ùå –û–®–ò–ë–ö–ê: {e}")
        import traceback
        traceback.print_exc()
        return f"‚ùå –ò–°–ö–õ–Æ–ß–ï–ù–ò–ï: {e}"

if __name__ == "__main__":
    print("üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï EMAILTOOL")
    print("=" * 50)
    
    start_time = time.time()
    result = test_email_tool()
    end_time = time.time()
    
    test_time = (end_time - start_time) * 1000
    print(f"\nüèÅ –†–ï–ó–£–õ–¨–¢–ê–¢: {result} ({test_time:.1f}–º—Å)") 