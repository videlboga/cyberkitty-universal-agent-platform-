#!/usr/bin/env python3
"""
KittyCore - –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç

–≠—Ç–æ—Ç –ø—Ä–∏–º–µ—Ä –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–∞–∫ –∑–∞ 5 –º–∏–Ω—É—Ç —Å–æ–∑–¥–∞—Ç—å AI –∞–≥–µ–Ω—Ç–∞
"""

import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ KittyCore
sys.path.insert(0, os.path.join(os.path.dirname(__file__), '..'))

from kittycore import Agent, quick_agent
from kittycore.tools import WebSearchTool, EmailTool
from kittycore.memory import PersistentMemory


def basic_agent():
    """–°–∞–º—ã–π –ø—Ä–æ—Å—Ç–æ–π –∞–≥–µ–Ω—Ç - –æ–¥–Ω–∞ —Å—Ç—Ä–æ–∫–∞ –∫–æ–¥–∞"""
    print("üöÄ –ü—Ä–æ—Å—Ç–µ–π—à–∏–π –∞–≥–µ–Ω—Ç:")
    
    agent = quick_agent("You are a helpful assistant")
    response = agent.run("–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –¥–µ–ª–∞?")
    print(f"–û—Ç–≤–µ—Ç: {response}")
    print()


def agent_with_tools():
    """–ê–≥–µ–Ω—Ç —Å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º–∏"""
    print("üîß –ê–≥–µ–Ω—Ç —Å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º–∏:")
    
    agent = Agent(
        prompt="You are a research assistant that can search the web and send emails",
        tools=[WebSearchTool(), EmailTool()]
    )
    
    response = agent.run("–ù–∞–π–¥–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ Python –∏ –æ—Ç–ø—Ä–∞–≤—å –∫—Ä–∞—Ç–∫—É—é —Å–≤–æ–¥–∫—É –Ω–∞ test@example.com")
    print(f"–û—Ç–≤–µ—Ç: {response}")
    print()


def persistent_agent():
    """–ê–≥–µ–Ω—Ç —Å –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–π –ø–∞–º—è—Ç—å—é"""
    print("üß† –ê–≥–µ–Ω—Ç —Å –ø–∞–º—è—Ç—å—é:")
    
    agent = Agent(
        prompt="You are a personal assistant who remembers our conversations",
        memory=PersistentMemory("my_agent_memory.db")
    )
    
    # –ü–µ—Ä–≤—ã–π —Ä–∞–∑–≥–æ–≤–æ—Ä
    response1 = agent.run("–ú–µ–Ω—è –∑–æ–≤—É—Ç –ê–ª–µ–∫—Å–µ–π, —è –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç")
    print(f"–û—Ç–≤–µ—Ç 1: {response1}")
    
    # –í—Ç–æ—Ä–æ–π —Ä–∞–∑–≥–æ–≤–æ—Ä - –∞–≥–µ–Ω—Ç –¥–æ–ª–∂–µ–Ω –ø–æ–º–Ω–∏—Ç—å –∏–º—è
    response2 = agent.run("–ö–∞–∫ –º–µ–Ω—è –∑–æ–≤—É—Ç?")
    print(f"–û—Ç–≤–µ—Ç 2: {response2}")
    print()


def streaming_agent():
    """–ê–≥–µ–Ω—Ç —Å–æ —Å—Ç—Ä–∏–º–∏–Ω–≥–æ–º –æ—Ç–≤–µ—Ç–æ–≤"""
    print("üì° –°—Ç—Ä–∏–º–∏–Ω–≥ –∞–≥–µ–Ω—Ç:")
    
    agent = Agent("You are a storyteller")
    
    print("–û—Ç–≤–µ—Ç (—Å—Ç—Ä–∏–º): ", end="", flush=True)
    for chunk in agent.stream("–†–∞—Å—Å–∫–∞–∂–∏ –∫–æ—Ä–æ—Ç–∫—É—é –∏—Å—Ç–æ—Ä–∏—é –ø—Ä–æ –∫–æ—Ç–∞"):
        print(chunk, end="", flush=True)
    print("\n")


def agent_stats():
    """–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∞–≥–µ–Ω—Ç–∞"""
    print("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∞–≥–µ–Ω—Ç–∞:")
    
    agent = Agent("You are a helpful assistant")
    
    # –ù–µ—Å–∫–æ–ª—å–∫–æ –∑–∞–ø—Ä–æ—Å–æ–≤
    agent.run("–ü–µ—Ä–≤—ã–π –≤–æ–ø—Ä–æ—Å")
    agent.run("–í—Ç–æ—Ä–æ–π –≤–æ–ø—Ä–æ—Å")
    agent.run("–¢—Ä–µ—Ç–∏–π –≤–æ–ø—Ä–æ—Å")
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    stats = agent.export_state()
    print(f"–°–æ—Å—Ç–æ—è–Ω–∏–µ –∞–≥–µ–Ω—Ç–∞: {stats}")
    
    memory_summary = agent.get_memory_summary()
    print(f"–ü–∞–º—è—Ç—å: {memory_summary}")
    print()


def main():
    """–ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö –ø—Ä–∏–º–µ—Ä–æ–≤"""
    print("üê± KittyCore - –ü—Ä–∏–º–µ—Ä—ã –±—ã—Å—Ç—Ä–æ–≥–æ —Å—Ç–∞—Ä—Ç–∞\n")
    print("=" * 50)
    
    try:
        basic_agent()
        agent_with_tools()
        persistent_agent()
        streaming_agent()
        agent_stats()
        
        print("‚úÖ –í—Å–µ –ø—Ä–∏–º–µ—Ä—ã –≤—ã–ø–æ–ª–Ω–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        print("\nüí° –¢–µ–ø–µ—Ä—å –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–æ–∑–¥–∞—Ç—å —Å–≤–æ–µ–≥–æ –∞–≥–µ–Ω—Ç–∞!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        print("\nüîß –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã API –∫–ª—é—á–∏ –≤ .env —Ñ–∞–π–ª–µ")


if __name__ == "__main__":
    main() 