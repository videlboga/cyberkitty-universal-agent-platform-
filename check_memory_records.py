#!/usr/bin/env python3
"""
üîç –ü–†–û–í–ï–†–ö–ê –ó–ê–ü–ò–°–ï–ô –ò–ù–°–¢–†–£–ú–ï–ù–¢–û–í –í –ü–ê–ú–Ø–¢–ò KITTYCORE 3.0
"""

import sys
import asyncio
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ KittyCore
sys.path.append(str(Path(__file__).parent / 'kittycore'))

from kittycore.memory.enhanced_memory import EnhancedCollectiveMemory

async def check_tool_records():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø–∏—Å–∞–Ω–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –≤ –ø–∞–º—è—Ç–∏"""
    
    print("üîç –ü–†–û–í–ï–†–ö–ê –ó–ê–ü–ò–°–ï–ô –ò–ù–°–¢–†–£–ú–ï–ù–¢–û–í –í –ü–ê–ú–Ø–¢–ò KITTYCORE 3.0")
    print("=" * 60)
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–∞–º—è—Ç—å
    memory = EnhancedCollectiveMemory(team_id="tool_testing_team")
    
    # –ü–æ–∏—Å–∫ –∑–∞–ø–∏—Å–µ–π –æ–± –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞—Ö
    search_queries = [
        "tool usage",
        "verified successful",
        "enhanced_web_search",
        "media_tool",
        "network_tool"
    ]
    
    for query in search_queries:
        print(f"\nüîç –ü–æ–∏—Å–∫: '{query}'")
        
        try:
            results = await memory.search(query, limit=3)
            
            if results:
                print(f"   ‚úÖ –ù–∞–π–¥–µ–Ω–æ: {len(results)} –∑–∞–ø–∏—Å–µ–π")
                
                for i, result in enumerate(results):
                    content = result.content[:200] if hasattr(result, 'content') else str(result)[:200]
                    author = getattr(result, 'author_agent', 'unknown')
                    importance = getattr(result, 'importance', 'unknown')
                    
                    print(f"   üìù –ó–∞–ø–∏—Å—å {i+1}:")
                    print(f"      üë§ –ê–≤—Ç–æ—Ä: {author}")
                    print(f"      ‚≠ê –í–∞–∂–Ω–æ—Å—Ç—å: {importance}")
                    print(f"      üìÑ –ö–æ–Ω—Ç–µ–Ω—Ç: {content}...")
                    print()
            else:
                print("   ‚ùå –ó–∞–ø–∏—Å–µ–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
                
        except Exception as e:
            print(f"   ‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞: {e}")
    
    print("=" * 60)
    print("‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")

if __name__ == "__main__":
    asyncio.run(check_tool_records()) 