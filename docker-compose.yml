version: '3.8'

networks:  # Добавляем определение сети
  app_network:
    driver: bridge

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: universal_agent_system-app-1
    ports:
      - "8000:8000"
    env_file:
      - .env
    volumes:
      - ./app:/app/app
      - ./logs:/app/logs
      - ./.env:/app/.env
      - ./.env.local:/app/.env.local
    depends_on:
      - mongo
      - redis
    environment:
      - PYTHONUNBUFFERED=1
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - MONGODB_URI=mongodb://mongo:27017/agent_platform
      - MONGODB_DATABASE_NAME=universal_agent_platform
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - DEEPSEEK_API_KEY=${DEEPSEEK_API_KEY}
      - OPENROUTER_API_KEY=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
      - OPENROUTER_URL=https://openrouter.ai/api/v1/chat/completions
      - FASTAPI_APP_URL=http://app:8000
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload --log-level trace
    networks:
      - app_network
#  frontend:  # Временно комментируем сервис frontend
#    build:
#      context: ./frontend
#      dockerfile: Dockerfile
#    ports:
#      - "3000:3000"
#    env_file: # Если фронтенду нужны переменные окружения
#      - .env # или frontend/.env
#    restart: unless-stopped
#    depends_on:
#      - app
#    networks:  # Подключаем сервис к сети
#      - app_network
  mongo:
    image: mongo:6
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    restart: unless-stopped
    networks:  # Подключаем сервис к сети
      - app_network
  redis:
    image: redis:7
    ports:
      - "6380:6379" # Маппинг 6380 хоста на 6379 контейнера
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:  # Подключаем сервис к сети
      - app_network

volumes:
  mongo_data:
  redis_data: 