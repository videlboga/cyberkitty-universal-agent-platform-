#!/usr/bin/env python3
"""
–£–¥–æ–±–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –≤—Å–µ—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤ –≤ –ø—Ä–æ–µ–∫—Ç–µ
"""

import os
import glob
from scenario_validator import ScenarioValidator

def main():
    print("üîç –ü–æ–∏—Å–∫ –≤—Å–µ—Ö YAML —Ñ–∞–π–ª–æ–≤ —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤...")
    
    # –ò—â–µ–º –≤—Å–µ YAML —Ñ–∞–π–ª—ã
    yaml_files = []
    patterns = ["*.yaml", "*.yml", "scenarios/*.yaml", "scenarios/*.yml"]
    
    for pattern in patterns:
        yaml_files.extend(glob.glob(pattern))
    
    # –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ —Ñ–∞–π–ª—ã —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤ (—Å–æ–¥–µ—Ä–∂–∞—â–∏–µ scenario_id)
    scenario_files = []
    for file_path in yaml_files:
        try:
            with open(file_path, 'r', encoding='utf-8') as f:
                content = f.read()
                if 'scenario_id:' in content or 'scenario_id ' in content:
                    scenario_files.append(file_path)
        except:
            continue
    
    if not scenario_files:
        print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ —Ñ–∞–π–ª–æ–≤ —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤")
        return
    
    print(f"üìù –ù–∞–π–¥–µ–Ω–æ —Ñ–∞–π–ª–æ–≤ —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤: {len(scenario_files)}")
    for f in scenario_files:
        print(f"  ‚Ä¢ {f}")
    print()
    
    # –í–∞–ª–∏–¥–∏—Ä—É–µ–º
    validator = ScenarioValidator()
    
    all_valid = True
    total_fixes = 0
    
    for file_path in scenario_files:
        print(f"üìÑ –ü—Ä–æ–≤–µ—Ä–∫–∞: {file_path}")
        
        is_valid, fixes = validator.validate_file(file_path)
        
        if fixes:
            for fix in fixes:
                print(f"  {fix}")
                if fix.startswith("üîß"):
                    total_fixes += 1
        else:
            print("  ‚úÖ –§–∞–π–ª –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω")
        
        if not is_valid:
            all_valid = False
            
        print()
    
    # –ò—Ç–æ–≥–æ–≤–∞—è —Å–≤–æ–¥–∫–∞
    if validator.fixes_applied:
        print("üìä –°–≤–æ–¥–∫–∞ –∞–≤—Ç–æ–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π:")
        for fix in validator.fixes_applied:
            print(f"  ‚Ä¢ {fix['step_id']}: {fix['old_type']} ‚Üí {fix['new_type']} ({fix['confidence']:.2f})")
        print()
    
    print(f"üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
    print(f"  ‚Ä¢ –ü—Ä–æ–≤–µ—Ä–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: {len(scenario_files)}")
    print(f"  ‚Ä¢ –ü—Ä–∏–º–µ–Ω–µ–Ω–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π: {total_fixes}")
    print(f"  ‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö —Ç–∏–ø–æ–≤ —à–∞–≥–æ–≤: {len(validator.supported_handlers)}")
    
    if all_valid:
        print("\nüéâ –í—Å–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏ –ø—Ä–æ—à–ª–∏ –≤–∞–ª–∏–¥–∞—Ü–∏—é!")
        if total_fixes > 0:
            print("‚ú® –§–∞–π–ª—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã –∏ –≥–æ—Ç–æ–≤—ã –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!")
    else:
        print("\n‚ùå –ù–∞–π–¥–µ–Ω—ã –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏ –≤ –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏—è—Ö")

if __name__ == "__main__":
    main() 