# === KITTYCORE 3.0 SPHINX CONFIGURATION ===
# Революционная память для агентной системы

# Основной индекс памяти агентов
index kittycore_memory
{
    # Источник данных - JSON файлы памяти
    type = rt
    path = sphinx_config/memory_index
    
    # Поля для агентной памяти
    rt_field = content        # Основной контент
    rt_field = agent_id       # ID агента  
    rt_field = category       # Категория памяти
    rt_field = tags          # Теги (JSON массив)
    
    # Атрибуты для фильтрации
    rt_attr_uint = timestamp  # Unix timestamp
    rt_attr_string = agent_id # ID агента
    rt_attr_string = category # Категория
    rt_attr_json = metadata   # Метаданные (JSON)
    
    # ВЕКТОРНЫЕ ИНДЕКСЫ (Sphinx 3.8.1+)
    rt_attr_float_vector = embedding[384]  # Вектор эмбеддинга
    
    # Настройки индексирования
    morphology = stem_ru, stem_en
    min_word_len = 2
    charset_table = 0..9, A..Z->a..z, a..z, _, U+410..U+42F->U+430..U+44F, U+430..U+44F
}

# ПЕРКОЛЯЦИОННЫЙ ИНДЕКС для агентных триггеров
index kittycore_memory_percolate
{
    type = percolate
    path = sphinx_config/percolate_index
    
    # Поля для перколяции
    rt_field = trigger_query    # Запрос-триггер
    rt_field = agent_patterns   # Паттерны агента
    
    # Атрибуты
    rt_attr_string = agent_id   # Какой агент реагирует
    rt_attr_string = action     # Какое действие выполнить
    rt_attr_uint = priority     # Приоритет срабатывания
}

# Настройки сервера
searchd
{
    listen = 9312
    log = sphinx_config/searchd.log
    query_log = sphinx_config/query.log
    pid_file = sphinx_config/searchd.pid
    
    # Максимальные лимиты
    max_matches = 10000
    max_packet_size = 32M
    
    # Поддержка JSON и векторов
    workers = threads
    dist_threads = 8
}

# Индексер
indexer
{
    mem_limit = 256M
}