#!/usr/bin/env python3
"""
üîÑ –†–ï–ê–ö–¢–ò–í–ù–´–ô –ë–ï–ù–ß–ú–ê–†–ö –î–õ–Ø –ü–†–û–¶–ï–°–°–ù–´–• –ó–ê–î–ê–ß
–ö–æ–Ω—Ü–µ–ø—Ü–∏—è: –ê–¥–∞–ø—Ç–∏–≤–Ω—ã–π –ö—É–ª–∏–Ω–∞—Ä–Ω—ã–π –ü–æ–º–æ—â–Ω–∏–∫

–ò–î–ï–Ø:
–ê–≥–µ–Ω—Ç –≥–æ—Ç–æ–≤–∏—Ç –±–ª—é–¥–∞ –∏ –ø–æ–ª—É—á–∞–µ—Ç –º–≥–Ω–æ–≤–µ–Ω–Ω—É—é –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å –æ—Ç "–¥–µ–≥—É—Å—Ç–∞—Ç–æ—Ä–æ–≤".
–ù–∞ –æ—Å–Ω–æ–≤–µ —Ä–µ–∞–∫—Ü–∏–π –∞–≥–µ–Ω—Ç –∞–¥–∞–ø—Ç–∏—Ä—É–µ—Ç —Ä–µ—Ü–µ–ø—Ç—ã –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏.

–ü–†–ï–ò–ú–£–©–ï–°–¢–í–ê:
- –ë—ã—Å—Ç—Ä—ã–µ —Ü–∏–∫–ª—ã –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏ (—Å–µ–∫—É–Ω–¥—ã)
- –ò–∑–º–µ—Ä–∏–º—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã (–æ—Ü–µ–Ω–∫–∏ –≤–∫—É—Å–∞)
- –†–µ–∞–ª–∏—Å—Ç–∏—á–Ω–∞—è –∑–∞–¥–∞—á–∞ (–∫–∞–∫ –∞–≥–µ–Ω—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏)
- –ü—Ä–æ—Å—Ç–∞—è –¥–ª—è –ø–æ–Ω–∏–º–∞–Ω–∏—è –ª–æ–≥–∏–∫–∞
"""

from dataclasses import dataclass
from typing import List, Dict, Any
from enum import Enum
import random
import asyncio

class TasteReaction(Enum):
    """–†–µ–∞–∫—Ü–∏–∏ –¥–µ–≥—É—Å—Ç–∞—Ç–æ—Ä–æ–≤"""
    LOVE = "üòç"      # 5 –±–∞–ª–ª–æ–≤
    LIKE = "üòã"      # 4 –±–∞–ª–ª–∞  
    OK = "üòê"        # 3 –±–∞–ª–ª–∞
    DISLIKE = "üòï"   # 2 –±–∞–ª–ª–∞
    HATE = "ü§¢"      # 1 –±–∞–ª–ª

@dataclass
class Recipe:
    """–†–µ—Ü–µ–ø—Ç –±–ª—é–¥–∞"""
    name: str
    ingredients: Dict[str, float]  # –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç -> –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
    cooking_time: int  # –º–∏–Ω—É—Ç—ã
    temperature: int   # –≥—Ä–∞–¥—É—Å—ã
    technique: str     # —Å–ø–æ—Å–æ–± –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è

@dataclass
class TasterFeedback:
    """–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å –æ—Ç –¥–µ–≥—É—Å—Ç–∞—Ç–æ—Ä–∞"""
    taster_id: str
    reaction: TasteReaction
    score: int  # 1-5
    comment: str
    timestamp: float

@dataclass
class CookingAttempt:
    """–ü–æ–ø—ã—Ç–∫–∞ –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è"""
    attempt_id: str
    recipe: Recipe
    feedbacks: List[TasterFeedback]
    avg_score: float
    success: bool  # >= 4.0 —Å—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª

class VirtualTaster:
    """–í–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π –¥–µ–≥—É—Å—Ç–∞—Ç–æ—Ä —Å –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è–º–∏"""
    
    def __init__(self, taster_id: str, preferences: Dict[str, float]):
        self.taster_id = taster_id
        self.preferences = preferences  # –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç -> –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–µ (-1 –¥–æ 1)
        self.mood_factor = random.uniform(0.8, 1.2)  # —Å–ª—É—á–∞–π–Ω–æ—Å—Ç—å
    
    def taste_dish(self, recipe: Recipe) -> TasterFeedback:
        """–î–µ–≥—É—Å—Ç–∏—Ä—É–µ—Ç –±–ª—é–¥–æ –∏ –¥–∞—ë—Ç –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å"""
        
        # –ë–∞–∑–æ–≤–∞—è –æ—Ü–µ–Ω–∫–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π
        score = 3.0  # –Ω–µ–π—Ç—Ä–∞–ª—å–Ω–∞—è –±–∞–∑–∞
        
        # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã
        for ingredient, amount in recipe.ingredients.items():
            if ingredient in self.preferences:
                preference = self.preferences[ingredient]
                # –í–ª–∏—è–Ω–∏–µ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞
                impact = preference * min(amount / 100, 1.0)  # –Ω–æ—Ä–º–∞–ª–∏–∑—É–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
                score += impact
        
        # –í–ª–∏—è–Ω–∏–µ —Ç–µ—Ö–Ω–∏–∫–∏ –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è
        technique_bonus = {
            "–∂–∞—Ä–∫–∞": 0.5,
            "–≤–∞—Ä–∫–∞": 0.2, 
            "–∑–∞–ø–µ–∫–∞–Ω–∏–µ": 0.8,
            "—Ç—É—à–µ–Ω–∏–µ": 0.6,
            "–≥—Ä–∏–ª—å": 0.7
        }.get(recipe.technique, 0.0)
        
        score += technique_bonus
        
        # –ü—Ä–∏–º–µ–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ
        score *= self.mood_factor
        
        # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–∏–∞–ø–∞–∑–æ–Ω 1-5
        score = max(1.0, min(5.0, score))
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–µ–∞–∫—Ü–∏—é
        if score >= 4.5:
            reaction = TasteReaction.LOVE
            comment = "–í–æ—Å—Ö–∏—Ç–∏—Ç–µ–ª—å–Ω–æ! –ò–¥–µ–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å!"
        elif score >= 3.5:
            reaction = TasteReaction.LIKE
            comment = "–í–∫—É—Å–Ω–æ, –Ω–æ –º–æ–∂–Ω–æ —É–ª—É—á—à–∏—Ç—å"
        elif score >= 2.5:
            reaction = TasteReaction.OK
            comment = "–ù–æ—Ä–º–∞–ª—å–Ω–æ, –Ω–∏—á–µ–≥–æ –æ—Å–æ–±–µ–Ω–Ω–æ–≥–æ"
        elif score >= 1.5:
            reaction = TasteReaction.DISLIKE
            comment = "–ù–µ –æ—á–µ–Ω—å, —á—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫"
        else:
            reaction = TasteReaction.HATE
            comment = "–£–∂–∞—Å–Ω–æ! –ù—É–∂–Ω–æ –≤—Å—ë –ø–µ—Ä–µ–¥–µ–ª–∞—Ç—å"
        
        return TasterFeedback(
            taster_id=self.taster_id,
            reaction=reaction,
            score=int(round(score)),
            comment=comment,
            timestamp=asyncio.get_event_loop().time()
        )

# –ü—Ä–∏–º–µ—Ä—ã –¥–µ–≥—É—Å—Ç–∞—Ç–æ—Ä–æ–≤ —Å —Ä–∞–∑–Ω—ã–º–∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è–º–∏
SAMPLE_TASTERS = [
    VirtualTaster("–ú–∞—Ä–∏—è_—Å–ª–∞–¥–∫–æ–µ–∂–∫–∞", {
        "—Å–∞—Ö–∞—Ä": 0.8, "–º—ë–¥": 0.9, "—à–æ–∫–æ–ª–∞–¥": 1.0,
        "—Å–æ–ª—å": -0.5, "–ø–µ—Ä–µ—Ü": -0.3, "–ª—É–∫": -0.2
    }),
    
    VirtualTaster("–ò–≤–∞–Ω_–º—è—Å–æ–µ–¥", {
        "–≥–æ–≤—è–¥–∏–Ω–∞": 1.0, "—Å–≤–∏–Ω–∏–Ω–∞": 0.8, "–∫—É—Ä–∏—Ü–∞": 0.6,
        "–æ–≤–æ—â–∏": -0.3, "—Å–∞–ª–∞—Ç": -0.5, "—Ç–æ—Ñ—É": -0.8
    }),
    
    VirtualTaster("–ê–Ω–Ω–∞_–≤–µ–≥–µ—Ç–∞—Ä–∏–∞–Ω–∫–∞", {
        "–æ–≤–æ—â–∏": 1.0, "–∑–µ–ª–µ–Ω—å": 0.9, "–æ—Ä–µ—Ö–∏": 0.8,
        "–º—è—Å–æ": -1.0, "—Ä—ã–±–∞": -0.7, "—Å—ã—Ä": 0.3
    }),
    
    VirtualTaster("–ü—ë—Ç—Ä_–≥—É—Ä–º–∞–Ω", {
        "—Ç—Ä—é—Ñ–µ–ª–∏": 1.0, "–∏–∫—Ä–∞": 0.9, "–≤–∏–Ω–æ": 0.8,
        "—Ñ–∞—Å—Ç—Ñ—É–¥": -0.8, "–∫–æ–Ω—Å–µ—Ä–≤—ã": -0.6, "–ø–æ–ª—É—Ñ–∞–±—Ä–∏–∫–∞—Ç—ã": -0.9
    })
]

print("üîÑ –ö–û–ù–¶–ï–ü–¶–ò–Ø –†–ï–ê–ö–¢–ò–í–ù–û–ì–û –ë–ï–ù–ß–ú–ê–†–ö–ê –ì–û–¢–û–í–ê!")
print("üìã –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã:")
print("   - Recipe: —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ä–µ—Ü–µ–ø—Ç–∞")
print("   - VirtualTaster: –¥–µ–≥—É—Å—Ç–∞—Ç–æ—Ä—ã —Å –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è–º–∏") 
print("   - TasterFeedback: –º–≥–Ω–æ–≤–µ–Ω–Ω–∞—è –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å")
print("   - CookingAttempt: –ø–æ–ø—ã—Ç–∫–∞ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏")
print("\nüéØ –ì–æ—Ç–æ–≤ –∫ —Å–æ–∑–¥–∞–Ω–∏—é –∞–¥–∞–ø—Ç–∏–≤–Ω–æ–≥–æ –∞–≥–µ–Ω—Ç–∞!") 