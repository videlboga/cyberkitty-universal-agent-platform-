#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö inline –∫–Ω–æ–ø–æ–∫ –≤ —Å—Ü–µ–Ω–∞—Ä–∏–∏ mr_ontobot_diagnostic_ya_relations.
–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç —Ç–æ–ª—å–∫–æ —à–∞–≥–∏ show_ya_relations_options –∏ request_feedback, 
–æ—Å—Ç–∞–≤–ª—è—è request_contact —Å reply –∫–Ω–æ–ø–∫–æ–π.
"""

import requests
import json
from loguru import logger

def fix_scenario_buttons():
    """–í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ –≤ —Å—Ü–µ–Ω–∞—Ä–∏–∏"""
    
    # URL API
    base_url = "http://localhost:8085/api/v1/simple/mongo"
    
    # 1. –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π —Å—Ü–µ–Ω–∞—Ä–∏–π
    logger.info("üì• –ü–æ–ª—É—á–∞—é —Ç–µ–∫—É—â–∏–π —Å—Ü–µ–Ω–∞—Ä–∏–π...")
    response = requests.post(f"{base_url}/find", json={
        "collection": "scenarios",
        "filter": {"scenario_id": "mr_ontobot_diagnostic_ya_relations"}
    })
    
    if not response.json().get("success"):
        logger.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ü–µ–Ω–∞—Ä–∏–π")
        return False
    
    scenario = response.json()["data"][0]
    steps = scenario["steps"]
    
    # 2. –ù–∞–π–¥–µ–º –∏ –∏—Å–ø—Ä–∞–≤–∏–º –Ω—É–∂–Ω—ã–µ —à–∞–≥–∏
    for step in steps:
        if step["id"] == "show_ya_relations_options":
            logger.info("üîß –ò—Å–ø—Ä–∞–≤–ª—è—é —à–∞–≥ show_ya_relations_options...")
            step["params"]["reply_markup"] = {
                "inline_keyboard": [
                    [{"text": "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–∏–º–µ—Ä—ã –º—ã—Å–ª–µ–≤–∏—Ä—É—Å–æ–≤", "callback_data": "view_ya_relations_examples"}],
                    [{"text": "–ù–∞–ø–∏—Å–∞—Ç—å –º—ã—Å–ª–µ–≤–∏—Ä—É—Å—ã ¬´–Ø-–û—Ç–Ω–æ—à–µ–Ω–∏—è¬ª", "callback_data": "write_ya_relations_viruses"}]
                ]
            }
            
        elif step["id"] == "request_feedback":
            logger.info("üîß –ò—Å–ø—Ä–∞–≤–ª—è—é —à–∞–≥ request_feedback...")
            step["params"]["reply_markup"] = {
                "inline_keyboard": [
                    [{"text": "–í—Å–µ –ø—Ä–æ –º–µ–Ω—è", "callback_data": "rating_perfect"}],
                    [{"text": "–ù–æ—Ä–º", "callback_data": "rating_good"}],
                    [{"text": "–ì–æ—Ç–æ–≤ –ø–æ—Å–ø–æ—Ä–∏—Ç—å", "callback_data": "rating_disagree"}],
                    [{"text": "–ù–µ —Å–æ–≤—Å–µ–º —Å–æ–≥–ª–∞—Å–µ–Ω", "callback_data": "rating_partly_disagree"}],
                    [{"text": "–Ø –µ—â–µ –Ω–µ –ø–æ—Å–º–æ—Ç—Ä–µ–ª –¥–æ—Å—å–µ", "callback_data": "rating_not_viewed"}]
                ]
            }
            
        elif step["id"] == "request_contact":
            logger.info("‚úÖ –®–∞–≥ request_contact —É–∂–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ (reply –∫–Ω–æ–ø–∫–∞)")
    
    # 3. –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ü–µ–Ω–∞—Ä–∏–π –≤ –ë–î
    logger.info("üíæ –°–æ—Ö—Ä–∞–Ω—è—é –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Å—Ü–µ–Ω–∞—Ä–∏–π...")
    update_response = requests.post(f"{base_url}/update", json={
        "collection": "scenarios",
        "filter": {"scenario_id": "mr_ontobot_diagnostic_ya_relations"},
        "document": {"steps": steps}
    })
    
    if update_response.json().get("success"):
        logger.success("‚úÖ –°—Ü–µ–Ω–∞—Ä–∏–π —É—Å–ø–µ—à–Ω–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω!")
        logger.info("üìã –ò—Å–ø—Ä–∞–≤–ª–µ–Ω—ã —à–∞–≥–∏:")
        logger.info("  ‚Ä¢ show_ya_relations_options: inline –∫–Ω–æ–ø–∫–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
        logger.info("  ‚Ä¢ request_feedback: inline –∫–Ω–æ–ø–∫–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
        logger.info("  ‚Ä¢ request_contact: –æ—Å—Ç–∞–µ—Ç—Å—è reply –∫–Ω–æ–ø–∫–∞ (–∫–∞–∫ –Ω—É–∂–Ω–æ)")
        return True
    else:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: {update_response.json()}")
        return False

if __name__ == "__main__":
    logger.add("logs/fix_buttons.log", rotation="1 MB")
    logger.info("üöÄ –ó–∞–ø—É—Å–∫ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–Ω–æ–ø–æ–∫ –≤ —Å—Ü–µ–Ω–∞—Ä–∏–∏...")
    
    if fix_scenario_buttons():
        logger.success("üéâ –í—Å–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ!")
    else:
        logger.error("üí• –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫") 