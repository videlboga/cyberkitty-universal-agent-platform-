#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ AmoCRM
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —á—Ç–æ –≤—Å–µ handlers —Ç–µ–ø–µ—Ä—å –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ –∑–∞–≥—Ä—É–∂–∞—é—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
"""

import asyncio
from app.core.simple_engine import create_engine

async def test_settings_reload():
    print("üß™ –¢–ï–°–¢ –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø –ü–†–û–ë–õ–ï–ú–´ –û–ë–ù–û–í–õ–ï–ù–ò–Ø –ù–ê–°–¢–†–û–ï–ö AMOCRM")
    print("="*70)
    
    # –°–æ–∑–¥–∞–µ–º –¥–≤–∏–∂–æ–∫
    print("üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–≤–∏–∂–∫–∞...")
    engine = await create_engine()
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ AmoCRM –ø–ª–∞–≥–∏–Ω—ã
    amocrm_plugins = {
        name: plugin for name, plugin in engine.plugins.items() 
        if name.startswith('simple_amocrm')
    }
    
    print(f"üìã –ù–∞–π–¥–µ–Ω–æ AmoCRM –ø–ª–∞–≥–∏–Ω–æ–≤: {len(amocrm_plugins)}")
    for name in amocrm_plugins.keys():
        print(f"   - {name}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –±–∞–∑–æ–≤—ã–π –ø–ª–∞–≥–∏–Ω
    print(f"\nüîç –¢–ï–°–¢ –ë–ê–ó–û–í–û–ì–û –ü–õ–ê–ì–ò–ù–ê")
    print("-" * 40)
    
    amocrm = engine.plugins.get('simple_amocrm')
    if amocrm:
        print(f"üìã –ù–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ: {amocrm.base_url or '–ù–ï –ù–ê–°–¢–†–û–ï–ù'}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ handlers
        test_handlers = [
            "amocrm_find_contact",
            "amocrm_create_contact", 
            "amocrm_find_lead",
            "amocrm_search"
        ]
        
        for handler_name in test_handlers:
            print(f"\nüß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º {handler_name}...")
            
            context = {"test": True}
            result = await engine.execute_step({
                "type": "action",
                "params": {
                    "action": handler_name, 
                    "query": "test@example.com",
                    "name": "Test Contact"
                }
            }, context)
            
            # –ò—â–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ
            handler_result = None
            for key, value in result.items():
                if isinstance(value, dict) and 'success' in value:
                    handler_result = value
                    break
            
            if handler_result:
                success = handler_result.get('success', False)
                error = handler_result.get('error', '–ù–µ—Ç –æ—à–∏–±–∫–∏')
                
                if success:
                    print(f"   ‚úÖ {handler_name}: –†–ê–ë–û–¢–ê–ï–¢")
                else:
                    if "–Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω" in error:
                        print(f"   ‚ö†Ô∏è {handler_name}: –ù–ï –ù–ê–°–¢–†–û–ï–ù (–æ–∂–∏–¥–∞–µ–º–æ)")
                    else:
                        print(f"   ‚ùå {handler_name}: –û–®–ò–ë–ö–ê - {error}")
            else:
                print(f"   ‚ùì {handler_name}: –ù–ï–¢ –†–ï–ó–£–õ–¨–¢–ê–¢–ê")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ –º–æ–¥—É–ª–∏
    print(f"\nüîç –¢–ï–°–¢ –û–°–¢–ê–õ–¨–ù–´–• –ú–û–î–£–õ–ï–ô")
    print("-" * 40)
    
    other_modules = ['simple_amocrm_companies', 'simple_amocrm_tasks', 'simple_amocrm_advanced', 'simple_amocrm_admin']
    
    for module_name in other_modules:
        plugin = engine.plugins.get(module_name)
        if plugin:
            print(f"\nüì¶ –ú–æ–¥—É–ª—å: {module_name}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –º–µ—Ç–æ–¥–∞ _ensure_fresh_settings
            has_method = hasattr(plugin, '_ensure_fresh_settings')
            print(f"   üîß –ú–µ—Ç–æ–¥ _ensure_fresh_settings: {'‚úÖ –ï–°–¢–¨' if has_method else '‚ùå –ù–ï–¢'}")
            
            if has_method:
                try:
                    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—ã–∑–æ–≤ –º–µ—Ç–æ–¥–∞
                    await plugin._ensure_fresh_settings()
                    print(f"   ‚úÖ –ú–µ—Ç–æ–¥ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
                except Exception as e:
                    print(f"   ‚ö†Ô∏è –û—à–∏–±–∫–∞ –≤—ã–∑–æ–≤–∞ –º–µ—Ç–æ–¥–∞: {e}")
        else:
            print(f"‚ùå –ú–æ–¥—É–ª—å {module_name} –Ω–µ –Ω–∞–π–¥–µ–Ω")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É handlers
    print(f"\nüìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê HANDLERS")
    print("-" * 40)
    
    all_handlers = engine.get_registered_handlers()
    amocrm_handlers = [h for h in all_handlers if h.startswith('amocrm_')]
    
    print(f"üìã –í—Å–µ–≥–æ AmoCRM handlers: {len(amocrm_handlers)}")
    print(f"üìã –í—Å–µ–≥–æ handlers –≤ —Å–∏—Å—Ç–µ–º–µ: {len(all_handlers)}")
    
    # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ –º–æ–¥—É–ª—è–º
    handler_groups = {}
    for handler in amocrm_handlers:
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –º–æ–¥—É–ª—å –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é handler
        if handler in ['amocrm_find_contact', 'amocrm_create_contact', 'amocrm_find_lead', 'amocrm_create_lead', 'amocrm_add_note', 'amocrm_search']:
            group = '–ë–∞–∑–æ–≤—ã–π'
        elif 'companies' in handler or 'company' in handler:
            group = '–ö–æ–º–ø–∞–Ω–∏–∏'
        elif 'task' in handler or 'event' in handler:
            group = '–ó–∞–¥–∞—á–∏'
        elif handler in ['amocrm_list_webhooks', 'amocrm_create_webhook', 'amocrm_list_widgets', 'amocrm_list_catalogs', 'amocrm_create_catalog', 'amocrm_list_calls', 'amocrm_create_call']:
            group = '–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π'
        elif handler in ['amocrm_list_pipelines', 'amocrm_create_pipeline', 'amocrm_list_users', 'amocrm_list_custom_fields', 'amocrm_create_custom_field', 'amocrm_list_tags', 'amocrm_create_tag']:
            group = '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–π'
        else:
            group = '–î—Ä—É–≥–∏–µ'
        
        if group not in handler_groups:
            handler_groups[group] = []
        handler_groups[group].append(handler)
    
    for group, handlers in handler_groups.items():
        print(f"   üì¶ {group}: {len(handlers)} handlers")
    
    print(f"\nüéØ –ó–ê–ö–õ–Æ–ß–ï–ù–ò–ï")
    print("-" * 40)
    print("‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–æ –∫–æ –≤—Å–µ–º –º–æ–¥—É–ª—è–º")
    print("‚úÖ –í—Å–µ handlers —Ç–µ–ø–µ—Ä—å –≤—ã–∑—ã–≤–∞—é—Ç _ensure_fresh_settings()")
    print("üí° –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±—É–¥—É—Ç –æ–±–Ω–æ–≤–ª—è—Ç—å—Å—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ –±–µ–∑ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞")
    print("üîß –î–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–æ–±–∞–≤—å—Ç–µ —Ä–µ–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ AmoCRM –≤ –ë–î")

if __name__ == "__main__":
    asyncio.run(test_settings_reload())
