#!/usr/bin/env python3
"""
üß™ –†—É—á–Ω–æ–π —Ç–µ—Å—Ç CLI —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –∑–∞–¥–∞—á–∞–º–∏
"""

import asyncio
from kittycore_cli import process_request

async def run_tests():
    """–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ CLI"""
    
    test_cases = [
        {
            "name": "üåê –°–æ–∑–¥–∞–Ω–∏–µ —Å–∞–π—Ç–∞ (–æ–∂–∏–¥–∞–µ–º –ø—Ä–æ–±–ª–µ–º—ã)",
            "task": "–°–¥–µ–ª–∞–π —Å–∞–π—Ç —Å –∫–æ—Ç—è—Ç–∞–º–∏",
            "expect_issues": True
        },
        {
            "name": "üìä –ê–Ω–∞–ª–∏–∑ (–º–æ–∂–µ—Ç –±—ã—Ç—å –±—ã—Å—Ç—Ä–æ)",  
            "task": "–ø–æ—Å—á–∏—Ç–∞–π –ø–ª–æ—Ç–Ω–æ—Å—Ç—å —á—ë—Ä–Ω–æ–π –¥—ã—Ä—ã",
            "expect_issues": False  # –≠—Ç–æ –∞–Ω–∞–ª–∏–∑, —Ñ–∞–π–ª—ã –Ω–µ –Ω—É–∂–Ω—ã
        },
        {
            "name": "üìù –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ (–æ–∂–∏–¥–∞–µ–º —Ñ–∞–π–ª—ã)",
            "task": "—Å–æ–∑–¥–∞–π —Ñ–∞–π–ª —Å –ø–ª–∞–Ω–æ–º –Ω–∞ –∑–∞–≤—Ç—Ä–∞", 
            "expect_issues": False  # –î–æ–ª–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å —Ñ–∞–π–ª
        }
    ]
    
    print("üß™ –†–£–ß–ù–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï CLI")
    print("=" * 40)
    print("–°–∏—Å—Ç–µ–º–∞ –∫–∞—á–µ—Å—Ç–≤–∞ –¥–æ–ª–∂–Ω–∞ –æ–±–Ω–∞—Ä—É–∂–∏–≤–∞—Ç—å –ø—Ä–æ–±–ª–µ–º—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏!")
    print()
    
    for i, test_case in enumerate(test_cases, 1):
        print(f"\n{i}. {test_case['name']}")
        print(f"   –ó–∞–¥–∞—á–∞: '{test_case['task']}'")
        print(f"   –û–∂–∏–¥–∞–µ–º –ø—Ä–æ–±–ª–µ–º—ã: {'–î–∞' if test_case['expect_issues'] else '–ù–µ—Ç'}")
        print("   " + "="*50)
        
        try:
            await process_request(test_case['task'])
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
        
        print("   " + "="*50)
        
        # –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –º–µ–∂–¥—É —Ç–µ—Å—Ç–∞–º–∏
        await asyncio.sleep(1)
    
    print(f"\n‚úÖ –í–°–ï –¢–ï–°–¢–´ –ó–ê–í–ï–†–®–ï–ù–´!")
    print(f"–°–∏—Å—Ç–µ–º–∞ –∫–∞—á–µ—Å—Ç–≤–∞ –¥–æ–ª–∂–Ω–∞ –±—ã–ª–∞ –ø–æ–∫–∞–∑–∞—Ç—å –ø—Ä–æ–±–ª–µ–º—ã –¥–ª—è –∑–∞–¥–∞—á —Å–æ–∑–¥–∞–Ω–∏—è —Å–∞–π—Ç–∞")
    print(f"–∏ –Ω–æ—Ä–º–∞–ª—å–Ω—É—é —Ä–∞–±–æ—Ç—É –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∏ —Å–æ–∑–¥–∞–Ω–∏—è —Ñ–∞–π–ª–æ–≤.")

if __name__ == "__main__":
    asyncio.run(run_tests()) 