# === –ü–û–õ–ù–û–¶–ï–ù–ù–´–ô –ë–ò–ó–ù–ï–°-–ü–†–û–¶–ï–°–° ===
# –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–µ–∞–ª—å–Ω–æ–π –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∏ —Å AmoCRM

scenario_id: business_pipeline_full
description: "–ü–æ–ª–Ω—ã–π –±–∏–∑–Ω–µ—Å-–ø—Ä–æ—Ü–µ—Å—Å: –æ—Ç –ª–∏–¥–∞ –¥–æ –∑–∞–∫—Ä—ã—Ç–∏—è —Å–¥–µ–ª–∫–∏"

initial_context:
  version: "2.0"
  process_type: "lead_to_deal"
  
steps:
  # === –°–¢–ê–†–¢ –ü–†–û–¶–ï–°–°–ê ===
  - id: start
    type: start
    next_step: search_existing_contact

  # === –ü–û–ò–°–ö –°–£–©–ï–°–¢–í–£–Æ–©–ï–ì–û –ö–û–ù–¢–ê–ö–¢–ê ===
  - id: search_existing_contact
    type: amocrm_find_contact
    params:
      query: "{phone}"
      output_var: existing_contact
    next_step: check_contact_exists

  # === –ü–†–û–í–ï–†–ö–ê –°–£–©–ï–°–¢–í–û–í–ê–ù–ò–Ø –ö–û–ù–¢–ê–ö–¢–ê ===
  - id: check_contact_exists
    type: branch
    params:
      conditions:
        - condition: "context.get('existing_contact', {}).get('found', False)"
          next_step: use_existing_contact
      default_next_step: create_new_contact

  # === –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–ï –°–£–©–ï–°–¢–í–£–Æ–©–ï–ì–û –ö–û–ù–¢–ê–ö–¢–ê ===
  - id: use_existing_contact
    type: action
    params:
      script: |
        contact_data = context.get('existing_contact', {}).get('contact', {})
        context['main_contact'] = {
          'contact_id': contact_data.get('id'),
          'success': True,
          'name': contact_data.get('name', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'),
          'source': 'existing'
        }
      output_var: main_contact
    next_step: log_contact_found

  # === –°–û–ó–î–ê–ù–ò–ï –ù–û–í–û–ì–û –ö–û–ù–¢–ê–ö–¢–ê ===
  - id: create_new_contact
    type: amocrm_create_contact
    params:
      name: "{client_name}"
      phone: "{phone}"
      email: "{email}"
      output_var: new_contact
    next_step: prepare_main_contact

  # === –ü–û–î–ì–û–¢–û–í–ö–ê –û–°–ù–û–í–ù–û–ì–û –ö–û–ù–¢–ê–ö–¢–ê ===
  - id: prepare_main_contact
    type: action
    params:
      script: |
        new_contact = context.get('new_contact', {})
        context['main_contact'] = {
          'contact_id': new_contact.get('contact_id'),
          'success': new_contact.get('success', False),
          'name': context.get('client_name', '–ù–æ–≤—ã–π –∫–ª–∏–µ–Ω—Ç'),
          'source': 'created'
        }
      output_var: main_contact
    next_step: log_contact_created

  # === –õ–û–ì–ò–†–û–í–ê–ù–ò–ï –ù–ê–ô–î–ï–ù–ù–û–ì–û –ö–û–ù–¢–ê–ö–¢–ê ===
  - id: log_contact_found
    type: log_message
    params:
      message: "–ù–∞–π–¥–µ–Ω —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–æ–Ω—Ç–∞–∫—Ç: {main_contact.name} (ID: {main_contact.contact_id})"
      level: "info"
    next_step: check_company_needed

  # === –õ–û–ì–ò–†–û–í–ê–ù–ò–ï –°–û–ó–î–ê–ù–ù–û–ì–û –ö–û–ù–¢–ê–ö–¢–ê ===
  - id: log_contact_created
    type: log_message
    params:
      message: "–°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π –∫–æ–Ω—Ç–∞–∫—Ç: {main_contact.name} (ID: {main_contact.contact_id})"
      level: "info"
    next_step: check_company_needed

  # === –ü–†–û–í–ï–†–ö–ê –ù–ï–û–ë–•–û–î–ò–ú–û–°–¢–ò –ö–û–ú–ü–ê–ù–ò–ò ===
  - id: check_company_needed
    type: branch
    params:
      conditions:
        - condition: "bool(context.get('company_name', '').strip())"
          next_step: search_existing_company
      default_next_step: create_lead_directly

  # === –ü–û–ò–°–ö –°–£–©–ï–°–¢–í–£–Æ–©–ï–ô –ö–û–ú–ü–ê–ù–ò–ò ===
  - id: search_existing_company
    type: amocrm_search
    params:
      entity_type: "companies"
      query: "{company_name}"
      output_var: existing_company
    next_step: check_company_exists

  # === –ü–†–û–í–ï–†–ö–ê –°–£–©–ï–°–¢–í–û–í–ê–ù–ò–Ø –ö–û–ú–ü–ê–ù–ò–ò ===
  - id: check_company_exists
    type: branch
    params:
      conditions:
        - condition: "context.get('existing_company', {}).get('found', False)"
          next_step: use_existing_company
      default_next_step: create_new_company

  # === –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–ï –°–£–©–ï–°–¢–í–£–Æ–©–ï–ô –ö–û–ú–ü–ê–ù–ò–ò ===
  - id: use_existing_company
    type: action
    params:
      script: |
        company_data = context.get('existing_company', {}).get('companies', [{}])[0]
        context['main_company'] = {
          'company_id': company_data.get('id'),
          'success': True,
          'name': company_data.get('name', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'),
          'source': 'existing'
        }
      output_var: main_company
    next_step: link_contact_to_company

  # === –°–û–ó–î–ê–ù–ò–ï –ù–û–í–û–ô –ö–û–ú–ü–ê–ù–ò–ò ===
  - id: create_new_company
    type: amocrm_create_company
    params:
      name: "{company_name}"
      output_var: new_company
    next_step: prepare_main_company

  # === –ü–û–î–ì–û–¢–û–í–ö–ê –û–°–ù–û–í–ù–û–ô –ö–û–ú–ü–ê–ù–ò–ò ===
  - id: prepare_main_company
    type: action
    params:
      script: |
        new_company = context.get('new_company', {})
        context['main_company'] = {
          'company_id': new_company.get('company_id'),
          'success': new_company.get('success', False),
          'name': context.get('company_name', '–ù–æ–≤–∞—è –∫–æ–º–ø–∞–Ω–∏—è'),
          'source': 'created'
        }
      output_var: main_company
    next_step: link_contact_to_company

  # === –°–í–Ø–ó–´–í–ê–ù–ò–ï –ö–û–ù–¢–ê–ö–¢–ê –° –ö–û–ú–ü–ê–ù–ò–ï–ô ===
  - id: link_contact_to_company
    type: amocrm_link_contact_company
    params:
      contact_id: "{main_contact.contact_id}"
      company_id: "{main_company.company_id}"
      output_var: link_result
    next_step: create_lead_with_company

  # === –°–û–ó–î–ê–ù–ò–ï –°–î–ï–õ–ö–ò –° –ö–û–ú–ü–ê–ù–ò–ï–ô ===
  - id: create_lead_with_company
    type: amocrm_create_lead
    params:
      name: "{deal_name} - {company_name}"
      price: "{deal_amount}"
      contact_id: "{main_contact.contact_id}"
      output_var: main_lead
    next_step: add_initial_note

  # === –°–û–ó–î–ê–ù–ò–ï –°–î–ï–õ–ö–ò –ë–ï–ó –ö–û–ú–ü–ê–ù–ò–ò ===
  - id: create_lead_directly
    type: amocrm_create_lead
    params:
      name: "{deal_name}"
      price: "{deal_amount}"
      contact_id: "{main_contact.contact_id}"
      output_var: main_lead
    next_step: add_initial_note

  # === –î–û–ë–ê–í–õ–ï–ù–ò–ï –ù–ê–ß–ê–õ–¨–ù–û–ô –ó–ê–ú–ï–¢–ö–ò ===
  - id: add_initial_note
    type: amocrm_add_note
    params:
      entity_type: "leads"
      entity_id: "{main_lead.lead_id}"
      note_text: |
        üöÄ –°–¥–µ–ª–∫–∞ —Å–æ–∑–¥–∞–Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
        
        üìã –î–µ—Ç–∞–ª–∏:
        ‚Ä¢ –ö–ª–∏–µ–Ω—Ç: {main_contact.name} (ID: {main_contact.contact_id})
        ‚Ä¢ –°—É–º–º–∞: {deal_amount} —Ä—É–±.
        ‚Ä¢ –ò—Å—Ç–æ—á–Ω–∏–∫ –∫–æ–Ω—Ç–∞–∫—Ç–∞: {main_contact.source}
        
        üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã:
        ‚Ä¢ –¢–µ–ª–µ—Ñ–æ–Ω: {phone}
        ‚Ä¢ Email: {email}
        
        üè¢ –ö–æ–º–ø–∞–Ω–∏—è: {company_name|default('–ù–µ —É–∫–∞–∑–∞–Ω–∞')}
      output_var: initial_note
    next_step: create_follow_up_task

  # === –°–û–ó–î–ê–ù–ò–ï –ó–ê–î–ê–ß–ò –û–¢–°–õ–ï–ñ–ò–í–ê–ù–ò–Ø ===
  - id: create_follow_up_task
    type: amocrm_create_task
    params:
      entity_type: "leads"
      entity_id: "{main_lead.lead_id}"
      task_type: "call"
      text: "–°–≤—è–∑–∞—Ç—å—Å—è —Å –∫–ª–∏–µ–Ω—Ç–æ–º {main_contact.name} –ø–æ —Å–¥–µ–ª–∫–µ '{deal_name}'"
      complete_till: "{follow_up_date}"
      output_var: follow_up_task
    next_step: calculate_final_stats

  # === –†–ê–°–ß–ï–¢ –§–ò–ù–ê–õ–¨–ù–û–ô –°–¢–ê–¢–ò–°–¢–ò–ö–ò ===
  - id: calculate_final_stats
    type: action
    params:
      script: |
        context['process_summary'] = {
          'contact_id': context.get('main_contact', {}).get('contact_id'),
          'contact_source': context.get('main_contact', {}).get('source'),
          'company_id': context.get('main_company', {}).get('company_id', 'none'),
          'company_source': context.get('main_company', {}).get('source', 'none'),
          'lead_id': context.get('main_lead', {}).get('lead_id'),
          'deal_amount': context.get('deal_amount'),
          'task_created': context.get('follow_up_task', {}).get('success', False),
          'note_added': context.get('initial_note', {}).get('success', False),
          'process_completed': True,
          'total_entities_created': sum([
            1 if context.get('main_contact', {}).get('source') == 'created' else 0,
            1 if context.get('main_company', {}).get('source') == 'created' else 0,
            1, # lead always created
            1 if context.get('follow_up_task', {}).get('success') else 0,
            1 if context.get('initial_note', {}).get('success') else 0
          ])
        }
      output_var: process_summary
    next_step: end

  # === –ó–ê–í–ï–†–®–ï–ù–ò–ï ===
  - id: end
    type: end

# === –ü–†–ò–ú–ï–† –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Ø ===
# –ö–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞:
# {
#   "client_name": "–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤",
#   "phone": "+7999555777",
#   "email": "ivan@example.com",
#   "company_name": "–û–û–û –†–æ–≥–∞ –∏ –ö–æ–ø—ã—Ç–∞",
#   "deal_name": "–ü—Ä–æ–¥–∞–∂–∞ —Å–∏—Å—Ç–µ–º—ã CRM",
#   "deal_amount": 150000,
#   "follow_up_date": "2025-01-31T10:00:00Z"
# } 