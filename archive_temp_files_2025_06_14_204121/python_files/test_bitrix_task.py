#!/usr/bin/env python3
"""
üöÄ –¢–ï–°–¢ KITTYCORE 3.0 - –ê–ù–ê–õ–ò–ó –†–´–ù–ö–ê –ë–ò–¢–†–ò–ö–°24
–†–µ–∞–ª—å–Ω–∞—è –∫–æ–º–ø–ª–µ–∫—Å–Ω–∞—è –∑–∞–¥–∞—á–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã –æ–±—É—á–µ–Ω–∏—è –∞–≥–µ–Ω—Ç–æ–≤
"""

import asyncio
import sys
sys.path.append('.')

from kittycore.core.orchestrator import solve_with_orchestrator

async def main():
    task = """
    –ó–ê–î–ê–ß–ê: –ê–Ω–∞–ª–∏–∑ —Ä—ã–Ω–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –ë–∏—Ç—Ä–∏–∫—Å24 –∏ —Å–æ–∑–¥–∞–Ω–∏–µ 3 –ø—Ä–æ—Ç–æ—Ç–∏–ø–æ–≤

    –¢–†–ï–ë–û–í–ê–ù–ò–Ø:
    1. –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—É—â–∏–π —Ä—ã–Ω–æ–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –¥–ª—è –ë–∏—Ç—Ä–∏–∫—Å24
    2. –í—ã—è–≤–∏—Ç—å —Ç–æ–ø-15 —Å–∞–º—ã—Ö –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π
    3. –ù–∞–π—Ç–∏ –ø—Ä–æ–±–ª–µ–º—ã UX –≤ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Ä–µ—à–µ–Ω–∏—è—Ö
    4. –°–æ–∑–¥–∞—Ç—å 3 –ø—Ä–æ—Ç–æ—Ç–∏–ø–∞ –ø—Ä–æ—Å—Ç—ã—Ö –Ω–æ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π:
       - –° —É–ª—É—á—à–µ–Ω–Ω—ã–º UX –ø–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—é —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º–∏
       - –ü—Ä–æ—Å—Ç—ã–µ –≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏
       - –†–µ—à–∞—é—â–∏–µ —Ä–µ–∞–ª—å–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    
    –†–ï–ó–£–õ–¨–¢–ê–¢: 
    - –û—Ç—á—ë—Ç –ø–æ —Ä—ã–Ω–∫—É –≤ markdown
    - 3 –¥–µ—Ç–∞–ª—å–Ω—ã—Ö –æ–ø–∏—Å–∞–Ω–∏—è –ø—Ä–æ—Ç–æ—Ç–∏–ø–æ–≤
    - HTML –º–∞–∫–µ—Ç—ã/wireframes –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø—Ä–æ—Ç–æ—Ç–∏–ø–∞
    """
    
    print("üöÄ –ó–ê–ü–£–°–ö KITTYCORE 3.0 –î–õ–Ø –ê–ù–ê–õ–ò–ó–ê –ë–ò–¢–†–ò–ö–°24")
    print("=" * 60)
    
    result = await solve_with_orchestrator(task)
    
    print("\n" + "=" * 60)
    print("üìä –†–ï–ó–£–õ–¨–¢–ê–¢ –í–´–ü–û–õ–ù–ï–ù–ò–Ø –ó–ê–î–ê–ß–ò")
    print("=" * 60)
    
    print(f"‚úÖ –£—Å–ø–µ—Ö: {result.get('success', False)}")
    print(f"ü§ñ –ê–≥–µ–Ω—Ç–æ–≤ —Å–æ–∑–¥–∞–Ω–æ: {result.get('agents_created', 0)}")
    print(f"üìÅ –§–∞–π–ª–æ–≤ —Å–æ–∑–¥–∞–Ω–æ: {len(result.get('generated_files', []))}")
    print(f"‚è±Ô∏è –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: {result.get('execution_time', 'N/A')}")
    
    if result.get('generated_files'):
        print("\nüìÑ –°–û–ó–î–ê–ù–ù–´–ï –§–ê–ô–õ–´:")
        for file in result.get('generated_files', []):
            print(f"  ‚Ä¢ {file}")
    
    if result.get('agent_learning'):
        print(f"\nüß† –ê–ì–ï–ù–¢–´ –û–ë–£–ß–ò–õ–ò–°–¨: {result.get('agent_learning', 0)} –∑–∞–ø–∏—Å–µ–π")
    
    if result.get('errors'):
        print(f"\n‚ùå –û–®–ò–ë–ö–ò: {len(result.get('errors', []))}")
        for error in result.get('errors', [])[:3]:  # –ü–µ—Ä–≤—ã–µ 3 –æ—à–∏–±–∫–∏
            print(f"  ‚Ä¢ {error}")
    
    print(f"\nüéØ –ò–¢–û–ì–û–í–ê–Ø –û–¶–ï–ù–ö–ê: {result.get('quality_score', 'N/A')}/5.0")

if __name__ == "__main__":
    asyncio.run(main()) 