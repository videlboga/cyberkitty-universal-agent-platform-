{
  "scenario_id": "template_llm_multi_step",
  "name": "Шаблон: Многошаговый LLM процесс",
  "description": "Сложный LLM сценарий с разными моделями, промптами и контекстом на каждом шаге",
  "version": "1.0",
  "initial_context": {
    "process_type": "creative_writing",
    "user_collection": "users",
    "models": {
      "fast": "gpt-3.5-turbo",
      "smart": "gpt-4",
      "creative": "claude-3-sonnet",
      "coding": "deepseek/deepseek-coder"
    },
    "max_tokens": 300,
    "temperature_creative": 0.9,
    "temperature_analytical": 0.3
  },
  "steps": [
    {
      "id": "start",
      "type": "start",
      "params": {},
      "next_step": "get_user_info"
    },
    {
      "id": "get_user_info",
      "type": "input",
      "params": {
        "prompt": "Укажите ваш email для персонализации процесса:",
        "input_type": "text",
        "output_var": "user_email"
      },
      "next_step": "find_user"
    },
    {
      "id": "find_user",
      "type": "mongo_find_one",
      "params": {
        "collection": "{user_collection}",
        "filter": {
          "email": "{user_email}"
        },
        "output_var": "user_data"
      },
      "next_step": "get_topic"
    },
    {
      "id": "get_topic",
      "type": "input",
      "params": {
        "prompt": "Выберите тип процесса:\n1. Творческое писание\n2. Анализ данных\n3. Программирование\n4. Планирование проекта\n\nВведите номер (1-4):",
        "input_type": "text",
        "output_var": "process_choice"
      },
      "next_step": "determine_process"
    },
    {
      "id": "determine_process",
      "type": "branch",
      "params": {
        "conditions": [
          {
            "condition": "context.get('process_choice') == '1'",
            "next_step": "creative_step1_idea"
          },
          {
            "condition": "context.get('process_choice') == '2'",
            "next_step": "analysis_step1_data"
          },
          {
            "condition": "context.get('process_choice') == '3'",
            "next_step": "coding_step1_requirements"
          },
          {
            "condition": "context.get('process_choice') == '4'",
            "next_step": "planning_step1_scope"
          }
        ],
        "default_next_step": "invalid_choice"
      }
    },
    {
      "id": "invalid_choice",
      "type": "message",
      "params": {
        "text": "Некорректный выбор. Пожалуйста, введите число от 1 до 4."
      },
      "next_step": "get_topic"
    },
    {
      "id": "creative_step1_idea",
      "type": "input",
      "params": {
        "prompt": "Опишите тему или идею для творческого текста:",
        "input_type": "text",
        "output_var": "creative_topic"
      },
      "next_step": "creative_step2_generate"
    },
    {
      "id": "creative_step2_generate",
      "type": "llm_request",
      "params": {
        "prompt": "Ты креативный писатель. Пользователь: {user_data.name} из города {user_data.city}.\n\nТема: {creative_topic}\n\nНапиши вдохновляющий и оригинальный текст на эту тему. Учти интересы пользователя и сделай текст персонализированным.",
        "model": "{models.creative}",
        "max_tokens": "{max_tokens}",
        "temperature": "{temperature_creative}",
        "output_var": "creative_draft"
      },
      "next_step": "creative_step3_improve"
    },
    {
      "id": "creative_step3_improve",
      "type": "llm_request",
      "params": {
        "prompt": "Ты редактор-профессионал. Улучши этот текст:\n\n{creative_draft}\n\nСделай его более выразительным, проверь стиль и грамматику. Сохрани основную идею, но сделай текст более полированным.",
        "model": "{models.smart}",
        "max_tokens": "{max_tokens}",
        "temperature": "{temperature_analytical}",
        "output_var": "creative_final"
      },
      "next_step": "show_final_result"
    },
    {
      "id": "analysis_step1_data",
      "type": "input",
      "params": {
        "prompt": "Опишите данные или проблему для анализа:",
        "input_type": "text",
        "output_var": "analysis_data"
      },
      "next_step": "analysis_step2_structure"
    },
    {
      "id": "analysis_step2_structure",
      "type": "llm_request",
      "params": {
        "prompt": "Ты аналитик данных. Пользователь {user_data.name} предоставил данные:\n\n{analysis_data}\n\nСоздай структурированный план анализа:\n1. Определи ключевые вопросы\n2. Предложи методы анализа\n3. Определи необходимые данные\n4. Опиши ожидаемые результаты",
        "model": "{models.smart}",
        "max_tokens": "{max_tokens}",
        "temperature": "{temperature_analytical}",
        "output_var": "analysis_plan"
      },
      "next_step": "analysis_step3_insights"
    },
    {
      "id": "analysis_step3_insights",
      "type": "llm_request",
      "params": {
        "prompt": "Основываясь на плане анализа:\n\n{analysis_plan}\n\nИ исходных данных:\n{analysis_data}\n\nПроведи предварительный анализ и выдели основные инсайты. Предложи конкретные рекомендации.",
        "model": "{models.smart}",
        "max_tokens": "{max_tokens}",
        "temperature": "{temperature_analytical}",
        "output_var": "analysis_insights"
      },
      "next_step": "show_final_result"
    },
    {
      "id": "coding_step1_requirements",
      "type": "input",
      "params": {
        "prompt": "Опишите задачу программирования или функционал, который нужно реализовать:",
        "input_type": "text",
        "output_var": "coding_task"
      },
      "next_step": "coding_step2_architecture"
    },
    {
      "id": "coding_step2_architecture",
      "type": "llm_request",
      "params": {
        "prompt": "Ты senior разработчик. Задача от пользователя {user_data.name}:\n\n{coding_task}\n\nСоздай архитектурное решение:\n1. Выбери технологии\n2. Опиши структуру кода\n3. Определи основные компоненты\n4. Предложи план реализации",
        "model": "{models.coding}",
        "max_tokens": "{max_tokens}",
        "temperature": "{temperature_analytical}",
        "output_var": "coding_architecture"
      },
      "next_step": "coding_step3_implementation"
    },
    {
      "id": "coding_step3_implementation",
      "type": "llm_request",
      "params": {
        "prompt": "Основываясь на архитектуре:\n\n{coding_architecture}\n\nИ требованиях:\n{coding_task}\n\nНапиши рабочий код с комментариями. Включи основные функции и обработку ошибок.",
        "model": "{models.coding}",
        "max_tokens": 500,
        "temperature": 0.1,
        "output_var": "coding_implementation"
      },
      "next_step": "show_final_result"
    },
    {
      "id": "planning_step1_scope",
      "type": "input",
      "params": {
        "prompt": "Опишите проект, который нужно спланировать:",
        "input_type": "text",
        "output_var": "project_description"
      },
      "next_step": "planning_step2_breakdown"
    },
    {
      "id": "planning_step2_breakdown",
      "type": "llm_request",
      "params": {
        "prompt": "Ты project manager. Проект от {user_data.name}:\n\n{project_description}\n\nСоздай детальный план:\n1. Разбей на этапы\n2. Определи ресурсы\n3. Оцени временные рамки\n4. Выяви риски",
        "model": "{models.smart}",
        "max_tokens": "{max_tokens}",
        "temperature": "{temperature_analytical}",
        "output_var": "project_plan"
      },
      "next_step": "planning_step3_timeline"
    },
    {
      "id": "planning_step3_timeline",
      "type": "llm_request",
      "params": {
        "prompt": "На основе плана:\n\n{project_plan}\n\nИ описания проекта:\n{project_description}\n\nСоздай детальный timeline с конкретными датами, милестоунами и зависимостями между задачами.",
        "model": "{models.fast}",
        "max_tokens": "{max_tokens}",
        "temperature": "{temperature_analytical}",
        "output_var": "project_timeline"
      },
      "next_step": "show_final_result"
    },
    {
      "id": "show_final_result",
      "type": "branch",
      "params": {
        "conditions": [
          {
            "condition": "context.get('process_choice') == '1'",
            "next_step": "show_creative_result"
          },
          {
            "condition": "context.get('process_choice') == '2'",
            "next_step": "show_analysis_result"
          },
          {
            "condition": "context.get('process_choice') == '3'",
            "next_step": "show_coding_result"
          },
          {
            "condition": "context.get('process_choice') == '4'",
            "next_step": "show_planning_result"
          }
        ],
        "default_next_step": "end"
      }
    },
    {
      "id": "show_creative_result",
      "type": "message",
      "params": {
        "text": "🎨 **Творческий процесс завершён!**\n\n**Тема:** {creative_topic}\n\n**Финальный текст:**\n{creative_final}\n\n---\n*Процесс включал два этапа: креативную генерацию и профессиональное редактирование*"
      },
      "next_step": "save_result"
    },
    {
      "id": "show_analysis_result",
      "type": "message",
      "params": {
        "text": "📊 **Анализ данных завершён!**\n\n**План анализа:**\n{analysis_plan}\n\n**Основные инсайты:**\n{analysis_insights}\n\n---\n*Анализ проведён в два этапа: структурирование и выявление инсайтов*"
      },
      "next_step": "save_result"
    },
    {
      "id": "show_coding_result",
      "type": "message",
      "params": {
        "text": "💻 **Программирование завершено!**\n\n**Архитектура:**\n{coding_architecture}\n\n**Реализация:**\n{coding_implementation}\n\n---\n*Разработка велась в два этапа: проектирование архитектуры и написание кода*"
      },
      "next_step": "save_result"
    },
    {
      "id": "show_planning_result",
      "type": "message",
      "params": {
        "text": "📋 **Планирование проекта завершено!**\n\n**Детальный план:**\n{project_plan}\n\n**Timeline:**\n{project_timeline}\n\n---\n*Планирование включало разработку плана и создание timeline*"
      },
      "next_step": "save_result"
    },
    {
      "id": "save_result",
      "type": "mongo_insert_one",
      "params": {
        "collection": "multi_step_results",
        "document": {
          "user_email": "{user_email}",
          "user_name": "{user_data.name}",
          "process_type": "{process_choice}",
          "final_result": "{creative_final}{analysis_insights}{coding_implementation}{project_timeline}",
          "all_steps": {
            "creative_draft": "{creative_draft}",
            "creative_final": "{creative_final}",
            "analysis_plan": "{analysis_plan}",
            "analysis_insights": "{analysis_insights}",
            "coding_architecture": "{coding_architecture}",
            "coding_implementation": "{coding_implementation}",
            "project_plan": "{project_plan}",
            "project_timeline": "{project_timeline}"
          },
          "models_used": "{models}",
          "timestamp": "{current_timestamp}"
        },
        "output_var": "save_result"
      },
      "next_step": "final_message"
    },
    {
      "id": "final_message",
      "type": "message",
      "params": {
        "text": "✅ Многошаговый процесс завершён успешно!\n\nВсе результаты сохранены в базу данных.\nID записи: {save_result}\n\nСпасибо за использование нашего сервиса!"
      },
      "next_step": "end"
    },
    {
      "id": "end",
      "type": "end",
      "params": {}
    }
  ]
} 