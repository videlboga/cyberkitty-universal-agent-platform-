#!/usr/bin/env python3
"""
üöÄ –ë–´–°–¢–†–û–ï –î–ï–ú–û –£–ù–ò–í–ï–†–°–ê–õ–¨–ù–û–ô –°–ò–°–¢–ï–ú–´
"""

import asyncio
from universal_task_handler import UniversalTaskHandler

async def quick_demo():
    """–ë—ã—Å—Ç—Ä—ã–µ –¥–µ–º–æ —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ –∑–∞–¥–∞—á"""
    
    handler = UniversalTaskHandler()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–∑–Ω—ã–µ —Ç–∏–ø—ã –∑–∞–¥–∞—á
    test_cases = [
        "–°–æ–∑–¥–∞–π –ª–æ–≥–æ—Ç–∏–ø –¥–ª—è —Å—Ç–∞—Ä—Ç–∞–ø–∞",  # –ü—Ä–æ—Å—Ç–∞—è –∑–∞–¥–∞—á–∞
        "–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤ –∏ —Å–æ–∑–¥–∞–π —Å—Ç—Ä–∞—Ç–µ–≥–∏—é –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏—è",  # –°–ª–æ–∂–Ω–∞—è –∑–∞–¥–∞—á–∞
        "–†–∞—Å—Å—á–∏—Ç–∞–π ROI –¥–ª—è —Ä–µ–∫–ª–∞–º–Ω–æ–π –∫–∞–º–ø–∞–Ω–∏–∏"  # –ü—Ä–æ—Å—Ç–∞—è –∑–∞–¥–∞—á–∞
    ]
    
    for i, task in enumerate(test_cases, 1):
        print(f"\n{'üî•'*20} –¢–ï–°–¢ {i}/3 {'üî•'*20}")
        await handler.process_text_request(task)
        print(f"{'‚úÖ'*20} –ó–ê–í–ï–†–®–ï–ù–û {'‚úÖ'*20}")

if __name__ == "__main__":
    asyncio.run(quick_demo()) 