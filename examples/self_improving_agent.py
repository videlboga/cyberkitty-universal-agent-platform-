#!/usr/bin/env python3
"""
üß† –ü—Ä–∏–º–µ—Ä —Å–∞–º–æ—Ä–∞–∑–≤–∏–≤–∞—é—â–µ–≥–æ—Å—è –∞–≥–µ–Ω—Ç–∞ - KittyCore 2.0

–î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –∫–æ–Ω—Ü–µ–ø—Ü–∏–∏ –∏–∑ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è 2025:
- Self-improving agents
- Autonomous tool creation  
- Performance tracking
- Recursive optimization
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

import time
import json
import logging
from kittycore import Agent
from kittycore.self_improvement import create_self_improving_agent

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)

def main():
    print("üß† –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Å–∞–º–æ—Ä–∞–∑–≤–∏–≤–∞—é—â–µ–≥–æ—Å—è –∞–≥–µ–Ω—Ç–∞")
    print("=" * 50)
    
    # –°–æ–∑–¥–∞—Ç—å –±–∞–∑–æ–≤–æ–≥–æ –∞–≥–µ–Ω—Ç–∞
    base_agent = Agent(
        prompt="""
        –¢—ã —É–º–Ω—ã–π –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏–π –∞–≥–µ–Ω—Ç, –∫–æ—Ç–æ—Ä—ã–π:
        1. –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏ –Ω–∞—Ö–æ–¥–∏—Ç –∑–∞–∫–æ–Ω–æ–º–µ—Ä–Ω–æ—Å—Ç–∏
        2. –°–æ–∑–¥–∞—ë—Ç SQL –∑–∞–ø—Ä–æ—Å—ã –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
        3. –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –æ—Ç—á—ë—Ç—ã –∏ –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏
        4. –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ—Ç —Å–≤–æ—é —Ä–∞–±–æ—Ç—É –Ω–∞ –æ—Å–Ω–æ–≤–µ –æ–ø—ã—Ç–∞
        
        –í—Å–µ–≥–¥–∞ —Å—Ç—Ä–µ–º–∏—Å—å –∫ —É–ª—É—á—à–µ–Ω–∏—é —Å–≤–æ–∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤!
        """,
        model="mock"  # –ò—Å–ø–æ–ª—å–∑—É–µ–º mock –º–æ–¥–µ–ª—å –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
    )
    
    # –û–±–µ—Ä–Ω—É—Ç—å –≤ —Å–∞–º–æ—Ä–∞–∑–≤–∏–≤–∞—é—â–µ–≥–æ—Å—è –∞–≥–µ–Ω—Ç–∞
    smart_agent = create_self_improving_agent("analytics_agent", base_agent)
    
    # –°–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
    tasks = [
        "–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –ø—Ä–æ–¥–∞–∂–∏ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –º–µ—Å—è—Ü",
        "–°–æ–∑–¥–∞–π SQL –∑–∞–ø—Ä–æ—Å –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ç–æ–ø-10 –∫–ª–∏–µ–Ω—Ç–æ–≤",
        "–ù–∞–π–¥–∏ –∞–Ω–æ–º–∞–ª–∏–∏ –≤ –¥–∞–Ω–Ω—ã—Ö –æ –∑–∞–∫–∞–∑–∞—Ö",
        "–ü–æ—Å—Ç—Ä–æ–π –ø—Ä–æ–≥–Ω–æ–∑ –ø—Ä–æ–¥–∞–∂ –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π –∫–≤–∞—Ä—Ç–∞–ª",
        "–û–ø—Ç–∏–º–∏–∑–∏—Ä—É–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö",
        "–°–æ–∑–¥–∞–π –¥–∞—à–±–æ—Ä–¥ –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ KPI",
        "–ê–Ω–∞–ª–∏–∑–∏—Ä—É–π –ø–æ–≤–µ–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–∞ —Å–∞–π—Ç–µ",
        "–ù–∞–π–¥–∏ –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–∏ –º–µ–∂–¥—É –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã–º–∏ –∫–∞–º–ø–∞–Ω–∏—è–º–∏ –∏ –ø—Ä–æ–¥–∞–∂–∞–º–∏",
        "–°–æ–∑–¥–∞–π –æ—Ç—á—ë—Ç –æ —Ä–µ–Ω—Ç–∞–±–µ–ª—å–Ω–æ—Å—Ç–∏ –ø—Ä–æ–¥—É–∫—Ç–æ–≤",
        "–û–ø—Ç–∏–º–∏–∑–∏—Ä—É–π –ø—Ä–æ—Ü–µ—Å—Å –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–∫–∞–∑–æ–≤",
        "–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Ä–µ–∫–ª–∞–º–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤",
        "–°–æ–∑–¥–∞–π –º–æ–¥–µ–ª—å –ø—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç—Ç–æ–∫–∞ –∫–ª–∏–µ–Ω—Ç–æ–≤",
        "–ù–∞–π–¥–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–ª—è —É–≤–µ–ª–∏—á–µ–Ω–∏—è —Å—Ä–µ–¥–Ω–µ–≥–æ —á–µ–∫–∞",
        "–û–ø—Ç–∏–º–∏–∑–∏—Ä—É–π –ª–æ–≥–∏—Å—Ç–∏—á–µ—Å–∫–∏–µ –º–∞—Ä—à—Ä—É—Ç—ã",
        "–°–æ–∑–¥–∞–π —Å–∏—Å—Ç–µ–º—É —Ä–∞–Ω–Ω–µ–≥–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –æ –ø—Ä–æ–±–ª–µ–º–∞—Ö"
    ]
    
    print(f"üìã –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ {len(tasks)} –∑–∞–¥–∞—á —Å —Å–∞–º–æ–æ—Ü–µ–Ω–∫–æ–π...")
    print()
    
    # –í—ã–ø–æ–ª–Ω–∏—Ç—å –∑–∞–¥–∞—á–∏ —Å –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
    for i, task in enumerate(tasks, 1):
        print(f"üîÑ –ó–∞–¥–∞—á–∞ {i}/{len(tasks)}: {task}")
        
        start_time = time.time()
        
        try:
            # –í—ã–ø–æ–ª–Ω–∏—Ç—å –∑–∞–¥–∞—á—É —Å —Å–∞–º–æ–æ—Ü–µ–Ω–∫–æ–π
            result = smart_agent.run_with_self_improvement(
                task,
                context={
                    'task_number': i,
                    'total_tasks': len(tasks),
                    'domain': 'analytics'
                }
            )
            
            execution_time = time.time() - start_time
            print(f"‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–æ –∑–∞ {execution_time:.2f}—Å")
            
            # –ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç (—Å–æ–∫—Ä–∞—â—ë–Ω–Ω–æ)
            result_preview = str(result)[:100] + "..." if len(str(result)) > 100 else str(result)
            print(f"üìÑ –†–µ–∑—É–ª—å—Ç–∞—Ç: {result_preview}")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
            
        print()
        
        # –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –¥–ª—è –Ω–∞–≥–ª—è–¥–Ω–æ—Å—Ç–∏
        time.sleep(0.5)
    
    print("=" * 50)
    print("üìä –û–¢–ß–Å–¢ –û –°–ê–ú–û–û–¶–ï–ù–ö–ï –ê–ì–ï–ù–¢–ê")
    print("=" * 50)
    
    # –ü–æ–ª—É—á–∏—Ç—å –æ—Ç—á—ë—Ç –æ —Å–∞–º–æ–æ—Ü–µ–Ω–∫–µ
    report = smart_agent.get_self_improvement_report()
    
    print(f"üÜî ID –∞–≥–µ–Ω—Ç–∞: {report['agent_id']}")
    print(f"üìà –í—ã–ø–æ–ª–Ω–µ–Ω–æ –∑–∞–¥–∞—á: {report['task_count']}")
    print(f"üõ†Ô∏è –°–æ–∑–¥–∞–Ω–æ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤: {report['created_tools']}")
    print(f"üîß –ü—Ä–∏–º–µ–Ω–µ–Ω–æ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–π: {report['optimizations_applied']}")
    print()
    
    # –ü–æ–∫–∞–∑–∞—Ç—å –º–µ—Ç—Ä–∏–∫–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
    print("üìä –ú–ï–¢–†–ò–ö–ò –ü–†–û–ò–ó–í–û–î–ò–¢–ï–õ–¨–ù–û–°–¢–ò:")
    performance = report['performance_summary']
    
    for metric_name, data in performance.items():
        trend_emoji = {
            'improving': 'üìà',
            'stable': '‚û°Ô∏è', 
            'declining': 'üìâ'
        }.get(data['trend'], '‚ùì')
        
        print(f"{trend_emoji} {metric_name}:")
        print(f"   –ë–∞–∑–æ–≤–∞—è: {data['baseline']:.3f}")
        print(f"   –¢–µ–∫—É—â–∞—è: {data['current']:.3f}")
        print(f"   –£–ª—É—á—à–µ–Ω–∏–µ: {data['improvement_rate']:.1%}")
        print(f"   –¢—Ä–µ–Ω–¥: {data['trend']}")
        print()
    
    # –ü–æ–∫–∞–∑–∞—Ç—å —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã
    if smart_agent.tool_creator.created_tools:
        print("üõ†Ô∏è –°–û–ó–î–ê–ù–ù–´–ï –ò–ù–°–¢–†–£–ú–ï–ù–¢–´:")
        for tool in smart_agent.tool_creator.created_tools:
            print(f"‚Ä¢ {tool['name']}")
            print(f"  –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ: {tool['purpose']}")
            print(f"  –°–æ–∑–¥–∞–Ω: {tool['created_at']}")
            print()
    
    # –ü–æ–∫–∞–∑–∞—Ç—å –∏—Å—Ç–æ—Ä–∏—é –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–π
    if smart_agent.self_optimizer.optimization_history:
        print("üîß –ò–°–¢–û–†–ò–Ø –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–ô:")
        for action in smart_agent.self_optimizer.optimization_history:
            print(f"‚Ä¢ {action.action_type}: {action.description}")
            print(f"  –û–∂–∏–¥–∞–µ–º–æ–µ —É–ª—É—á—à–µ–Ω–∏–µ: {action.expected_improvement:.1%}")
            print(f"  –í—Ä–µ–º—è: {action.timestamp.strftime('%H:%M:%S')}")
            print()
    
    print("=" * 50)
    print("üéØ –í–´–í–û–î–´:")
    
    # –ê–Ω–∞–ª–∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    total_improvement = sum(
        data['improvement_rate'] 
        for data in performance.values()
    ) / len(performance) if performance else 0
    
    if total_improvement > 0.1:
        print("‚úÖ –ê–≥–µ–Ω—Ç –ø–æ–∫–∞–∑–∞–ª –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ–µ —É–ª—É—á—à–µ–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏!")
    elif total_improvement > 0:
        print("üìà –ê–≥–µ–Ω—Ç –ø–æ–∫–∞–∑–∞–ª —É–º–µ—Ä–µ–Ω–Ω–æ–µ —É–ª—É—á—à–µ–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏")
    else:
        print("‚û°Ô∏è –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∞–≥–µ–Ω—Ç–∞ —Å—Ç–∞–±–∏–ª—å–Ω–∞")
    
    print(f"üìä –°—Ä–µ–¥–Ω–µ–µ —É–ª—É—á—à–µ–Ω–∏–µ: {total_improvement:.1%}")
    print(f"üõ†Ô∏è –ê–≤—Ç–æ–Ω–æ–º–Ω–æ —Å–æ–∑–¥–∞–Ω–æ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤: {len(smart_agent.tool_creator.created_tools)}")
    print(f"üîß –ü—Ä–∏–º–µ–Ω–µ–Ω–æ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–π: {len(smart_agent.self_optimizer.optimization_history)}")
    
    print("\nüöÄ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    print("–ê–≥–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ –∫ —Å–∞–º–æ–æ—Ü–µ–Ω–∫–µ –∏ —É–ª—É—á—à–µ–Ω–∏—é!")

if __name__ == "__main__":
    main() 