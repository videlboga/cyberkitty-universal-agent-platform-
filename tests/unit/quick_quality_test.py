#!/usr/bin/env python3
"""
üß™ –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã –∫–æ–Ω—Ç—Ä–æ–ª—è –∫–∞—á–µ—Å—Ç–≤–∞
"""

import asyncio
import kittycore

async def test_quality_system():
    """–¢–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–∞—á–µ—Å—Ç–≤–∞"""
    print("üß™ –¢–ï–°–¢ –°–ò–°–¢–ï–ú–´ –ö–û–ù–¢–†–û–õ–Ø –ö–ê–ß–ï–°–¢–í–ê")
    print("=" * 40)
    
    orchestrator = kittycore.create_orchestrator()
    
    # –¢–µ—Å—Ç 1: –ó–∞–¥–∞—á–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ñ–∞–π–ª–∞ (–¥–æ–ª–∂–Ω–∞ —Å–æ–∑–¥–∞—Ç—å —Ñ–∞–π–ª—ã)
    print("\nüìù –¢–ï–°–¢ 1: –ó–∞–¥–∞—á–∞ —Å–æ–∑–¥–∞–Ω–∏—è")
    print("-" * 30)
    result1 = await orchestrator.solve_task("—Å–æ–∑–¥–∞–π —Ñ–∞–π–ª —Å –ø–ª–∞–Ω–æ–º –Ω–∞ –∑–∞–≤—Ç—Ä–∞")
    
    duration1 = result1['duration']
    files1 = result1.get('execution', {}).get('files_created', [])
    
    print(f"‚è±Ô∏è –í—Ä–µ–º—è: {duration1:.2f}—Å")
    print(f"üìÅ –§–∞–π–ª–æ–≤: {len(files1)}")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞
    if duration1 < 0.5:
        print("üö® –ü–†–û–ë–õ–ï–ú–ê: –ü–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ –±—ã—Å—Ç—Ä–æ!")
    if not files1 and "—Å–æ–∑–¥–∞–π" in "—Å–æ–∑–¥–∞–π —Ñ–∞–π–ª":
        print("üö® –ü–†–û–ë–õ–ï–ú–ê: –ù–µ—Ç —Ñ–∞–π–ª–æ–≤ –¥–ª—è –∑–∞–¥–∞—á–∏ —Å–æ–∑–¥–∞–Ω–∏—è!")
    if duration1 > 1.0 and files1:
        print("‚úÖ –ö–ê–ß–ï–°–¢–í–û: –í—Ä–µ–º—è —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω–æ, —Ñ–∞–π–ª—ã —Å–æ–∑–¥–∞–Ω—ã")
    
    # –¢–µ—Å—Ç 2: –ê–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∞—è –∑–∞–¥–∞—á–∞ (–Ω–µ –¥–æ–ª–∂–Ω–∞ —Å–æ–∑–¥–∞–≤–∞—Ç—å —Ñ–∞–π–ª—ã)
    print("\nüßÆ –¢–ï–°–¢ 2: –ê–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∞—è –∑–∞–¥–∞—á–∞")
    print("-" * 30)
    result2 = await orchestrator.solve_task("–ø–æ—Å—á–∏—Ç–∞–π –ø–ª–æ—Ç–Ω–æ—Å—Ç—å —á—ë—Ä–Ω–æ–π –¥—ã—Ä—ã")
    
    duration2 = result2['duration']
    files2 = result2.get('execution', {}).get('files_created', [])
    
    print(f"‚è±Ô∏è –í—Ä–µ–º—è: {duration2:.2f}—Å")
    print(f"üìÅ –§–∞–π–ª–æ–≤: {len(files2)}")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞
    if duration2 < 0.5:
        print("üö® –ü–†–û–ë–õ–ï–ú–ê: –ü–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ –±—ã—Å—Ç—Ä–æ –¥–ª—è LLM –∞–Ω–∞–ª–∏–∑–∞!")
    if duration2 > 1.0:
        print("‚úÖ –ö–ê–ß–ï–°–¢–í–û: –í—Ä–µ–º—è —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π LLM –∞–Ω–∞–ª–∏–∑")
    
    # –°–≤–æ–¥–∫–∞
    print("\nüìä –°–í–û–î–ö–ê –ö–ê–ß–ï–°–¢–í–ê:")
    print("-" * 30)
    print(f"–¢–µ—Å—Ç 1 (—Å–æ–∑–¥–∞–Ω–∏–µ): {duration1:.2f}—Å, —Ñ–∞–π–ª–æ–≤: {len(files1)}")
    print(f"–¢–µ—Å—Ç 2 (–∞–Ω–∞–ª–∏–∑): {duration2:.2f}—Å, —Ñ–∞–π–ª–æ–≤: {len(files2)}")
    
    if duration1 > 1.0 and files1 and duration2 > 1.0:
        print("üéâ –í–°–ï –¢–ï–°–¢–´ –ö–ê–ß–ï–°–¢–í–ê –ü–†–û–®–õ–ò!")
        print("üí™ –°–∏—Å—Ç–µ–º–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –†–ï–ê–õ–¨–ù–´–ï –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã!")
    else:
        print("‚ö†Ô∏è –û–ë–ù–ê–†–£–ñ–ï–ù–´ –ü–†–û–ë–õ–ï–ú–´ –ö–ê–ß–ï–°–¢–í–ê!")
        print("üîß –¢—Ä–µ–±—É–µ—Ç—Å—è –∞–∫—Ç–∏–≤–∞—Ü–∏—è —Ä–µ–∞–ª—å–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤!")

if __name__ == "__main__":
    asyncio.run(test_quality_system()) 