#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç–æ–≤—ã–π –≤–µ–±-—Å–µ—Ä–≤–µ—Ä –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
"""

import sys
import os
import traceback

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ kittycore –≤ PYTHONPATH
sys.path.insert(0, os.path.abspath("."))

def test_imports():
    """–¢–µ—Å—Ç –∏–º–ø–æ—Ä—Ç–æ–≤"""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–æ–≤...")
    
    try:
        import fastapi
        print("‚úÖ FastAPI –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
    except Exception as e:
        print(f"‚ùå FastAPI: {e}")
        return False
    
    try:
        import uvicorn
        print("‚úÖ Uvicorn –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
    except Exception as e:
        print(f"‚ùå Uvicorn: {e}")
        return False
    
    try:
        from kittycore.web.websocket_manager import WebSocketManager
        print("‚úÖ WebSocketManager –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
    except Exception as e:
        print(f"‚ùå WebSocketManager: {e}")
        print(f"–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏: {traceback.format_exc()}")
        return False
    
    try:
        from kittycore.web.server import WebServer, create_app
        print("‚úÖ WebServer –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
    except Exception as e:
        print(f"‚ùå WebServer: {e}")
        print(f"–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏: {traceback.format_exc()}")
        return False
    
    return True

def create_simple_server():
    """–°–æ–∑–¥–∞—Ç—å –ø—Ä–æ—Å—Ç–æ–π —Å–µ—Ä–≤–µ—Ä"""
    from fastapi import FastAPI
    import uvicorn
    
    app = FastAPI(title="KittyCore Test")
    
    @app.get("/")
    async def root():
        return {"message": "KittyCore 3.0 Test Server —Ä–∞–±–æ—Ç–∞–µ—Ç!"}
    
    @app.get("/test")
    async def test():
        return {"status": "ok", "test": "passed"}
    
    print("üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–æ—Å—Ç–æ–≥–æ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ –ø–æ—Ä—Ç—É 8002...")
    uvicorn.run(app, host="0.0.0.0", port=8002, log_level="info")

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üß™ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ KittyCore 3.0 Web Interface")
    print("=" * 50)
    
    # –¢–µ—Å—Ç –∏–º–ø–æ—Ä—Ç–æ–≤
    if not test_imports():
        print("‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å –∏–º–ø–æ—Ä—Ç–∞–º–∏!")
        sys.exit(1)
    
    print("\n‚úÖ –í—Å–µ –∏–º–ø–æ—Ä—Ç—ã —É—Å–ø–µ—à–Ω—ã!")
    
    # –ó–∞–ø—É—Å–∫ –ø—Ä–æ—Å—Ç–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞
    try:
        create_simple_server()
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: {e}")
        print(f"–î–µ—Ç–∞–ª–∏: {traceback.format_exc()}")
        sys.exit(1)

if __name__ == "__main__":
    main() 