#!/bin/bash

# –ö–û–ú–ü–õ–ï–ö–°–ù–´–ô –¢–ï–°–¢: –ù–æ–≤—ã–µ –ø–ª–∞–≥–∏–Ω—ã KittyCore
# –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–µ–∞–ª—å–Ω—É—é —Ä–∞–±–æ—Ç—É AmoCRM –∏ HTTP –ø–ª–∞–≥–∏–Ω–æ–≤

set -e

API_URL="http://localhost:8085"
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

echo "üöÄ –ö–û–ú–ü–õ–ï–ö–°–ù–´–ô –¢–ï–°–¢: –ù–æ–≤—ã–µ –ø–ª–∞–≥–∏–Ω—ã KittyCore"
echo "üéØ –¶–µ–ª—å: –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–µ–∞–ª—å–Ω—É—é —Ä–∞–±–æ—Ç—É AmoCRM –∏ HTTP –ø–ª–∞–≥–∏–Ω–æ–≤"
echo "üìÖ –î–∞—Ç–∞: $(date)"
echo "=" | tr '=' '=' | head -c 70; echo

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ API
check_api_availability() {
    echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ API..."
    
    if curl -s "$API_URL/health" > /dev/null 2>&1; then
        echo "‚úÖ API –¥–æ—Å—Ç—É–ø–µ–Ω: $API_URL"
        return 0
    else
        echo "‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: $API_URL"
        echo "üí° –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ KittyCore –∑–∞–ø—É—â–µ–Ω: docker-compose up -d"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Ç–µ—Å—Ç–∞ —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
run_test() {
    local test_name="$1"
    local test_script="$2"
    
    echo ""
    echo "üß™ –ó–ê–ü–£–°–ö –¢–ï–°–¢–ê: $test_name"
    echo "üìÑ –°–∫—Ä–∏–ø—Ç: $test_script"
    echo "-" | tr '-' '-' | head -c 50; echo
    
    if [ -f "$test_script" ]; then
        if bash "$test_script"; then
            echo "‚úÖ –¢–ï–°–¢ –ü–†–û–ô–î–ï–ù: $test_name"
            return 0
        else
            echo "‚ùå –¢–ï–°–¢ –ü–†–û–í–ê–õ–ï–ù: $test_name"
            return 1
        fi
    else
        echo "‚ùå –¢–ï–°–¢ –ù–ï –ù–ê–ô–î–ï–ù: $test_script"
        return 1
    fi
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å API
if ! check_api_availability; then
    exit 1
fi

echo ""
echo "üìã –ü–õ–ê–ù –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:"
echo "---"
echo "1. üîß AmoCRM –ø–ª–∞–≥–∏–Ω - –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∏ –æ–ø–µ—Ä–∞—Ü–∏–∏"
echo "2. üåê HTTP –ø–ª–∞–≥–∏–Ω - –≤–Ω–µ—à–Ω–∏–µ –∑–∞–ø—Ä–æ—Å—ã"
echo "3. üìä –û–±—â–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–∏—Å—Ç–µ–º—ã"

# –°—á–µ—Ç—á–∏–∫–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
total_tests=0
passed_tests=0
failed_tests=0

echo ""
echo "üé¨ –ù–ê–ß–ê–õ–û –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø"
echo "=" | tr '=' '=' | head -c 70; echo

# –¢–µ—Å—Ç 1: AmoCRM –ø–ª–∞–≥–∏–Ω
total_tests=$((total_tests + 1))
if run_test "AmoCRM –ø–ª–∞–≥–∏–Ω" "$SCRIPT_DIR/test_amocrm_real_integration.sh"; then
    passed_tests=$((passed_tests + 1))
else
    failed_tests=$((failed_tests + 1))
fi

# –¢–µ—Å—Ç 2: HTTP –ø–ª–∞–≥–∏–Ω
total_tests=$((total_tests + 1))
if run_test "HTTP –ø–ª–∞–≥–∏–Ω" "$SCRIPT_DIR/test_http_real_integration.sh"; then
    passed_tests=$((passed_tests + 1))
else
    failed_tests=$((failed_tests + 1))
fi

echo ""
echo "üè• –§–ò–ù–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê –ó–î–û–†–û–í–¨–Ø –°–ò–°–¢–ï–ú–´"
echo "---"

# –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è
health_response=$(curl -s "$API_URL/api/v1/simple/health")

if echo "$health_response" | jq -e '.status == "healthy"' > /dev/null 2>&1; then
    echo "‚úÖ –°–∏—Å—Ç–µ–º–∞ –∑–¥–æ—Ä–æ–≤–∞ –ø–æ—Å–ª–µ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤"
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–ª–∞–≥–∏–Ω–æ–≤
    plugins_count=$(echo "$health_response" | jq '.registered_plugins | length')
    handlers_count=$(echo "$health_response" | jq '.registered_handlers | length')
    
    echo "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã:"
    echo "  ‚Ä¢ –ü–ª–∞–≥–∏–Ω–æ–≤ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–æ: $plugins_count"
    echo "  ‚Ä¢ –û–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –¥–æ—Å—Ç—É–ø–Ω–æ: $handlers_count"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–æ–≤—ã—Ö –ø–ª–∞–≥–∏–Ω–æ–≤
    echo ""
    echo "üîå –ù–æ–≤—ã–µ –ø–ª–∞–≥–∏–Ω—ã –≤ —Å–∏—Å—Ç–µ–º–µ:"
    
    if echo "$health_response" | jq -e '.registered_plugins[] | select(. == "simple_amocrm")' > /dev/null 2>&1; then
        echo "  ‚úÖ AmoCRM –ø–ª–∞–≥–∏–Ω –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω"
        amocrm_handlers=$(echo "$health_response" | jq -r '.registered_handlers[] | select(startswith("amocrm_"))' | wc -l)
        echo "    üìã –û–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ AmoCRM: $amocrm_handlers"
    else
        echo "  ‚ùå AmoCRM –ø–ª–∞–≥–∏–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
    
    if echo "$health_response" | jq -e '.registered_plugins[] | select(. == "simple_http")' > /dev/null 2>&1; then
        echo "  ‚úÖ HTTP –ø–ª–∞–≥–∏–Ω –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω"
        http_handlers=$(echo "$health_response" | jq -r '.registered_handlers[] | select(startswith("http_"))' | wc -l)
        echo "    üìã –û–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ HTTP: $http_handlers"
    else
        echo "  ‚ùå HTTP –ø–ª–∞–≥–∏–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
    
else
    echo "‚ùå –°–∏—Å—Ç–µ–º–∞ –Ω–µ–∑–¥–æ—Ä–æ–≤–∞ –ø–æ—Å–ª–µ —Ç–µ—Å—Ç–æ–≤"
    echo "üìÑ –û—Ç–≤–µ—Ç healthcheck:"
    echo "$health_response" | jq '.'
    failed_tests=$((failed_tests + 1))
fi

echo ""
echo "üéØ –ò–¢–û–ì–û–í–´–ï –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø"
echo "=" | tr '=' '=' | head -c 70; echo

echo "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:"
echo "  ‚Ä¢ –í—Å–µ–≥–æ —Ç–µ—Å—Ç–æ–≤: $total_tests"
echo "  ‚Ä¢ –ü—Ä–æ–π–¥–µ–Ω–æ: $passed_tests"
echo "  ‚Ä¢ –ü—Ä–æ–≤–∞–ª–µ–Ω–æ: $failed_tests"

if [ $failed_tests -eq 0 ]; then
    echo ""
    echo "üèÜ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!"
    echo "‚úÖ –ù–æ–≤—ã–µ –ø–ª–∞–≥–∏–Ω—ã KittyCore –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã"
    echo "üöÄ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é"
    
    echo ""
    echo "üí° –ß—Ç–æ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–æ:"
    echo "  ‚úÖ AmoCRM –ø–ª–∞–≥–∏–Ω - –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —á–µ—Ä–µ–∑ MongoDB API"
    echo "  ‚úÖ AmoCRM –ø–ª–∞–≥–∏–Ω - –ø–æ–∏—Å–∫, —Å–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ –∏ —Å–¥–µ–ª–æ–∫"
    echo "  ‚úÖ HTTP –ø–ª–∞–≥–∏–Ω - GET, POST, PUT –∑–∞–ø—Ä–æ—Å—ã"
    echo "  ‚úÖ HTTP –ø–ª–∞–≥–∏–Ω - –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö"
    echo "  ‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–ª–∞–≥–∏–Ω–æ–≤ –≤ –¥–≤–∏–∂–∫–µ"
    echo "  ‚úÖ –î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —à–∞–≥–æ–≤"
    echo "  ‚úÖ –û–±—â–µ–µ –∑–¥–æ—Ä–æ–≤—å–µ —Å–∏—Å—Ç–µ–º—ã"
    
    echo ""
    echo "üéâ –ù–û–í–´–ï –ü–õ–ê–ì–ò–ù–´ –ì–û–¢–û–í–´ –ö –ü–†–û–î–ê–ö–®–ï–ù–£!"
    
    exit 0
else
    echo ""
    echo "‚ùå –ï–°–¢–¨ –ü–†–û–í–ê–õ–ï–ù–ù–´–ï –¢–ï–°–¢–´!"
    echo "‚ö†Ô∏è –¢—Ä–µ–±—É–µ—Ç—Å—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—à–∏–±–æ–∫"
    echo "üìã –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤—ã—à–µ –¥–ª—è –¥–µ—Ç–∞–ª–µ–π"
    
    exit 1
fi 