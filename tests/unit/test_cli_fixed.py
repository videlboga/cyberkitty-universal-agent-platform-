#!/usr/bin/env python3
"""
üß™ –§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π CLI —Å–∏—Å—Ç–µ–º—ã –∫–∞—á–µ—Å—Ç–≤–∞
"""

import asyncio
import kittycore

async def test_fixed_cli_quality():
    """–¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π CLI –ª–æ–≥–∏–∫–∏"""
    print("üß™ –¢–ï–°–¢ –ò–°–ü–†–ê–í–õ–ï–ù–ù–û–ô CLI –°–ò–°–¢–ï–ú–´ –ö–ê–ß–ï–°–¢–í–ê")
    print("=" * 45)
    
    orchestrator = kittycore.create_orchestrator()
    result = await orchestrator.solve_task('–°–¥–µ–ª–∞–π —Å–∞–π—Ç —Å –∫–æ—Ç—è—Ç–∞–º–∏')
    
    # –ö–æ–ø–∏—è –ò–°–ü–†–ê–í–õ–ï–ù–ù–û–ô —Ñ—É–Ω–∫—Ü–∏–∏ quality_check –∏–∑ CLI
    execution = result.get('execution', {})
    files_created = execution.get('files_created', [])
    step_results = execution.get('step_results', {})
    duration = result.get('duration', 0)
    user_input = '–°–¥–µ–ª–∞–π —Å–∞–π—Ç —Å –∫–æ—Ç—è—Ç–∞–º–∏'
    
    issues = []
    warnings = []
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ –±—ã—Å—Ç—Ä–æ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
    if duration < 0.5:
        issues.append(f"‚ö†Ô∏è –ü–û–î–û–ó–†–ò–¢–ï–õ–¨–ù–û –ë–´–°–¢–†–û–ï –í–´–ü–û–õ–ù–ï–ù–ò–ï: {duration:.2f}—Å")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è —Ñ–∞–π–ª–æ–≤ –¥–ª—è –∑–∞–¥–∞—á —Å–æ–∑–¥–∞–Ω–∏—è
    creation_keywords = ['—Å–æ–∑–¥–∞–π', '—Å–æ–∑–¥–∞—Ç—å', '—Å–¥–µ–ª–∞–π', '—Å–¥–µ–ª–∞—Ç—å', '–Ω–∞–ø–∏—à–∏', '–Ω–∞–ø–∏—Å–∞—Ç—å', '—Å–≥–µ–Ω–µ—Ä–∏—Ä—É–π', '—Ñ–∞–π–ª', '—Å–∞–π—Ç', 'html', '–≤–µ–±']
    if any(keyword in user_input.lower() for keyword in creation_keywords):
        if not files_created:
            issues.append("üö® –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –ü–†–û–ë–õ–ï–ú–ê: –ó–ê–î–ê–ß–ê –°–û–ó–î–ê–ù–ò–Ø –ë–ï–ó –§–ê–ô–õ–û–í")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ–∞–¥–µ–∫–≤–∞—Ç–Ω—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ - –ò–°–ü–†–ê–í–õ–ï–ù–û
    if step_results:
        all_results = " ".join([str(step_result.get('result', '')) for step_result in step_results.values()])
        if "httpbin.org" in all_results:
            if any(word in user_input.lower() for word in ['—Å–∞–π—Ç', '–≤–µ–±', 'html']):
                issues.append("üö® –ù–ï–ê–î–ï–ö–í–ê–¢–ù–´–ô –†–ï–ó–£–õ–¨–¢–ê–¢: –õ–ï–í–´–ï –î–ï–ô–°–¢–í–ò–Ø")
    
    print(f"üìä –†–ï–ó–£–õ–¨–¢–ê–¢ –ó–ê–î–ê–ß–ò:")
    print(f"   –í—Ä–µ–º—è: {duration:.2f}—Å")
    print(f"   –§–∞–π–ª–æ–≤: {len(files_created)}")
    print(f"   –®–∞–≥–æ–≤: {len(step_results)}")
    
    print(f"\nüîç –ü–†–û–í–ï–†–ö–ê –ö–ê–ß–ï–°–¢–í–ê:")
    if issues:
        print(f"üö® –û–ë–ù–ê–†–£–ñ–ï–ù–´ –ü–†–û–ë–õ–ï–ú–´ ({len(issues)}):")
        for issue in issues:
            print(f"   {issue}")
        print(f"\n‚úÖ CLI –°–ò–°–¢–ï–ú–ê –ö–ê–ß–ï–°–¢–í–ê –†–ê–ë–û–¢–ê–ï–¢!")
    elif warnings:
        print(f"‚ö†Ô∏è –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–Ø ({len(warnings)}):")
        for warning in warnings:
            print(f"   {warning}")
    else:
        print(f"‚ùå –ü–†–û–ë–õ–ï–ú –ù–ï –û–ë–ù–ê–†–£–ñ–ï–ù–û - –°–ò–°–¢–ï–ú–ê –ù–ï –†–ê–ë–û–¢–ê–ï–¢!")
    
    # –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å –æ–∂–∏–¥–∞–µ–º—ã–º –ø–æ–≤–µ–¥–µ–Ω–∏–µ–º
    expected_issues = 2  # –ù–µ—Ç —Ñ–∞–π–ª–æ–≤ + –ª–µ–≤—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
    
    print(f"\nüéØ –°–†–ê–í–ù–ï–ù–ò–ï –° –û–ñ–ò–î–ê–ù–ò–ï–ú:")
    print(f"   –û–∂–∏–¥–∞–µ–º–æ –ø—Ä–æ–±–ª–µ–º: {expected_issues}")
    print(f"   –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –ø—Ä–æ–±–ª–µ–º: {len(issues)}")
    
    if len(issues) >= expected_issues:
        print(f"   üéâ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –£–°–ü–ï–®–ù–û!")
        print(f"   ‚úÖ CLI —Ç–µ–ø–µ—Ä—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ–±–Ω–∞—Ä—É–∂–∏–≤–∞–µ—Ç –ø—Ä–æ–±–ª–µ–º—ã")
    else:
        print(f"   ‚ùå –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ù–ï –ü–û–ú–û–ì–õ–û")
        print(f"   üîß –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –æ—Ç–ª–∞–¥–∫–∞")

if __name__ == "__main__":
    asyncio.run(test_fixed_cli_quality()) 