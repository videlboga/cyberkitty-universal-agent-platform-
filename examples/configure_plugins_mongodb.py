#!/usr/bin/env python3
"""
–ü—Ä–∏–º–µ—Ä –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–ª–∞–≥–∏–Ω–æ–≤ KittyCore —á–µ—Ä–µ–∑ MongoDB API

–î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –∫–∞–∫ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –≤—Å–µ –ø–ª–∞–≥–∏–Ω—ã –∏—Å–ø–æ–ª—å–∑—É—è —Ç–æ–ª—å–∫–æ MongoDB API
–±–µ–∑ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –≤ Admin API.

–ü—Ä–∏–Ω—Ü–∏–ø: –ü–†–û–°–¢–û–¢–ê –ü–†–ï–í–´–®–ï –í–°–ï–ì–û!
"""

import requests
import json
from datetime import datetime
from typing import Dict, Any

API_URL = "http://localhost:8085/api/v1/simple"

def mongo_request(endpoint: str, data: Dict[str, Any]) -> Dict[str, Any]:
    """–í—ã–ø–æ–ª–Ω—è–µ—Ç –∑–∞–ø—Ä–æ—Å –∫ MongoDB API"""
    url = f"{API_URL}/mongo/{endpoint}"
    response = requests.post(url, json=data, headers={"Content-Type": "application/json"})
    return response.json()

def configure_amocrm(base_url: str, access_token: str) -> bool:
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ AmoCRM –ø–ª–∞–≥–∏–Ω–∞ —á–µ—Ä–µ–∑ MongoDB API"""
    print("üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ AmoCRM –ø–ª–∞–≥–∏–Ω–∞...")
    
    settings = {
        "plugin_name": "amocrm",
        "base_url": base_url,
        "access_token": access_token,
        "updated_at": datetime.now().isoformat()
    }
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º upsert –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–ª–∏ —Å–æ–∑–¥–∞–Ω–∏—è
    result = mongo_request("insert", {
        "collection": "plugin_settings",
        "document": settings
    })
    
    if result.get("success"):
        print(f"‚úÖ AmoCRM –Ω–∞—Å—Ç—Ä–æ–µ–Ω: {base_url}")
        return True
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ AmoCRM: {result.get('error')}")
        return False

def configure_telegram(bot_token: str, webhook_url: str = None, webhook_secret: str = None) -> bool:
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Telegram –ø–ª–∞–≥–∏–Ω–∞ —á–µ—Ä–µ–∑ MongoDB API"""
    print("üì± –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Telegram –ø–ª–∞–≥–∏–Ω–∞...")
    
    settings = {
        "plugin_name": "telegram",
        "bot_token": bot_token,
        "webhook_url": webhook_url,
        "webhook_secret": webhook_secret,
        "updated_at": datetime.now().isoformat()
    }
    
    result = mongo_request("insert", {
        "collection": "plugin_settings",
        "document": settings
    })
    
    if result.get("success"):
        print(f"‚úÖ Telegram –Ω–∞—Å—Ç—Ä–æ–µ–Ω: {bot_token[:10]}...")
        return True
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram: {result.get('error')}")
        return False

def configure_llm(openrouter_api_key: str = None, openai_api_key: str = None, 
                 anthropic_api_key: str = None, default_model: str = None) -> bool:
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ LLM –ø–ª–∞–≥–∏–Ω–∞ —á–µ—Ä–µ–∑ MongoDB API"""
    print("ü§ñ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ LLM –ø–ª–∞–≥–∏–Ω–∞...")
    
    settings = {
        "plugin_name": "llm",
        "openrouter_api_key": openrouter_api_key,
        "openai_api_key": openai_api_key,
        "anthropic_api_key": anthropic_api_key,
        "default_model": default_model or "anthropic/claude-3-sonnet",
        "updated_at": datetime.now().isoformat()
    }
    
    result = mongo_request("insert", {
        "collection": "plugin_settings",
        "document": settings
    })
    
    if result.get("success"):
        print(f"‚úÖ LLM –Ω–∞—Å—Ç—Ä–æ–µ–Ω: –º–æ–¥–µ–ª—å {settings['default_model']}")
        return True
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ LLM: {result.get('error')}")
        return False

def get_plugin_settings(plugin_name: str) -> Dict[str, Any]:
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–ª–∞–≥–∏–Ω–∞ —á–µ—Ä–µ–∑ MongoDB API"""
    result = mongo_request("find", {
        "collection": "plugin_settings",
        "filter": {"plugin_name": plugin_name}
    })
    
    if result.get("success") and result.get("data"):
        return result["data"][0]
    return {}

def update_plugin_settings(plugin_name: str, updates: Dict[str, Any]) -> bool:
    """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–ª–∞–≥–∏–Ω–∞ —á–µ—Ä–µ–∑ MongoDB API"""
    updates["updated_at"] = datetime.now().isoformat()
    
    result = mongo_request("update", {
        "collection": "plugin_settings",
        "filter": {"plugin_name": plugin_name},
        "document": updates
    })
    
    return result.get("success", False)

def list_all_plugin_settings() -> None:
    """–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–ª–∞–≥–∏–Ω–æ–≤"""
    print("\nüìã –¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–ª–∞–≥–∏–Ω–æ–≤:")
    print("-" * 50)
    
    result = mongo_request("find", {
        "collection": "plugin_settings",
        "filter": {}
    })
    
    if result.get("success"):
        for settings in result.get("data", []):
            plugin_name = settings.get("plugin_name", "unknown")
            updated_at = settings.get("updated_at", "unknown")
            
            print(f"üîß {plugin_name.upper()}:")
            for key, value in settings.items():
                if key not in ["plugin_name", "updated_at", "id"]:
                    # –ú–∞—Å–∫–∏—Ä—É–µ–º —Ç–æ–∫–µ–Ω—ã –∏ –∫–ª—é—á–∏
                    if "token" in key.lower() or "key" in key.lower():
                        value = f"{str(value)[:10]}..." if value else "–Ω–µ –∑–∞–¥–∞–Ω"
                    print(f"   {key}: {value}")
            print(f"   –æ–±–Ω–æ–≤–ª–µ–Ω: {updated_at}")
            print()
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏"""
    print("üöÄ –ù–ê–°–¢–†–û–ô–ö–ê –ü–õ–ê–ì–ò–ù–û–í KITTYCORE –ß–ï–†–ï–ó MONGODB API")
    print("=" * 60)
    print("üí° –ü—Ä–∏–Ω—Ü–∏–ø: –ü–†–û–°–¢–û–¢–ê –ü–†–ï–í–´–®–ï –í–°–ï–ì–û!")
    print("üîó –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ–ª—å–∫–æ MongoDB API, –±–µ–∑ Admin API")
    print()
    
    # –ü—Ä–∏–º–µ—Ä –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤—Å–µ—Ö –ø–ª–∞–≥–∏–Ω–æ–≤
    success_count = 0
    
    # AmoCRM
    if configure_amocrm(
        base_url="https://example.amocrm.ru",
        access_token="your_amocrm_token_here"
    ):
        success_count += 1
    
    # Telegram
    if configure_telegram(
        bot_token="123456:ABC-DEF1234ghIkl-zyx57W2v1u123ew11",
        webhook_url="https://your-domain.com/webhook",
        webhook_secret="your_webhook_secret"
    ):
        success_count += 1
    
    # LLM
    if configure_llm(
        openrouter_api_key="sk-or-your-key-here",
        openai_api_key="sk-your-openai-key",
        default_model="anthropic/claude-3-sonnet"
    ):
        success_count += 1
    
    print(f"\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç: {success_count}/3 –ø–ª–∞–≥–∏–Ω–æ–≤ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    list_all_plugin_settings()
    
    # –ü—Ä–∏–º–µ—Ä –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫
    print("üîÑ –ü—Ä–∏–º–µ—Ä –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ AmoCRM...")
    if update_plugin_settings("amocrm", {
        "base_url": "https://updated.amocrm.ru",
        "access_token": "updated_token_123"
    }):
        print("‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ AmoCRM –æ–±–Ω–æ–≤–ª–µ–Ω—ã")
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ AmoCRM")
    
    print("\nüéØ –í–´–í–û–î–´:")
    print("‚úÖ MongoDB API –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–º–µ–Ω—è–µ—Ç Admin API")
    print("‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–ª–∞–≥–∏–Ω–æ–≤ —Å—Ç–∞–ª–∞ –ø—Ä–æ—â–µ –∏ –µ–¥–∏–Ω–æ–æ–±—Ä–∞–∑–Ω–µ–µ")
    print("‚úÖ –ú–µ–Ω—å—à–µ –∫–æ–¥–∞, –±–æ–ª—å—à–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏")
    print("üöÄ Admin API –±–æ–ª—å—à–µ –Ω–µ –Ω—É–∂–µ–Ω!")

if __name__ == "__main__":
    main() 