#!/usr/bin/env python3
"""
üéØ –ü–†–Ø–ú–û–ô –¢–ï–°–¢ OBSIDIAN –ò–ù–°–¢–†–£–ú–ï–ù–¢–û–í
–¢–µ—Å—Ç–∏—Ä—É–µ–º —á—Ç–æ ObsidianAware –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã —Å–æ–∑–¥–∞—é—Ç –∏–º–µ–Ω–Ω–æ —Ç–æ —á—Ç–æ –Ω—É–∂–Ω–æ
"""

import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ kittycore
sys.path.insert(0, str(Path(__file__).parent))

from kittycore.tools.obsidian_tools import create_obsidian_tools
from kittycore.core.obsidian_db import ObsidianDB


def test_direct_obsidian_tools():
    """–ü—Ä—è–º–æ–π —Ç–µ—Å—Ç ObsidianAware –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤"""
    print("üéØ –ü–†–Ø–ú–û–ô –¢–ï–°–¢ OBSIDIAN –ò–ù–°–¢–†–£–ú–ï–ù–¢–û–í")
    print("=" * 50)
    
    # 1. –°–æ–∑–¥–∞—ë–º ObsidianDB –∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã
    print("1Ô∏è‚É£ –°–æ–∑–¥–∞—ë–º –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã...")
    obsidian_db = ObsidianDB()
    agent_id = "direct_test_agent"
    tools = create_obsidian_tools(obsidian_db, agent_id)
    
    code_gen = tools["code_generator"]
    print(f"   ‚úÖ CodeGenerator –≥–æ—Ç–æ–≤: {code_gen.name}")
    
    # 2. –°–æ–∑–¥–∞—ë–º Python —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Ä–∞—Å—á—ë—Ç–∞ –ø–ª–æ—â–∞–¥–∏ –∫—Ä—É–≥–∞
    print("2Ô∏è‚É£ –°–æ–∑–¥–∞—ë–º Python —Å–∫—Ä–∏–ø—Ç...")
    
    circle_code = '''import math

def calculate_circle_area(radius):
    """–†–∞—Å—á—ë—Ç –ø–ª–æ—â–∞–¥–∏ –∫—Ä—É–≥–∞ –ø–æ —Ñ–æ—Ä–º—É–ª–µ A = œÄ * r¬≤"""
    area = math.pi * radius ** 2
    return area

def main():
    print("üîµ –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –ø–ª–æ—â–∞–¥–∏ –∫—Ä—É–≥–∞")
    print("–§–æ—Ä–º—É–ª–∞: A = œÄ * r¬≤")
    
    try:
        radius = float(input("–í–≤–µ–¥–∏—Ç–µ —Ä–∞–¥–∏—É—Å –∫—Ä—É–≥–∞: "))
        if radius <= 0:
            print("‚ùå –†–∞–¥–∏—É—Å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º")
            return
        
        area = calculate_circle_area(radius)
        print(f"üìä –ü–ª–æ—â–∞–¥—å –∫—Ä—É–≥–∞ —Å —Ä–∞–¥–∏—É—Å–æ–º {radius} = {area:.2f}")
        print(f"üìê œÄ ‚âà {math.pi:.6f}")
        
    except ValueError:
        print("‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ")

if __name__ == "__main__":
    main()
'''
    
    result = code_gen.execute(
        filename="circle_area_calculator.py",
        content=circle_code,
        language="python",
        title="–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –ø–ª–æ—â–∞–¥–∏ –∫—Ä—É–≥–∞"
    )
    
    print(f"   –†–µ–∑—É–ª—å—Ç–∞—Ç: {result.success}")
    if result.success:
        print(f"   üìÑ –§–∞–π–ª: {result.data['file_path']}")
        print(f"   üìè –†–∞–∑–º–µ—Ä: {result.data['content_size']} —Å–∏–º–≤–æ–ª–æ–≤")
        print(f"   üóÑÔ∏è –°–æ—Ö—Ä–∞–Ω—ë–Ω –≤ Obsidian: {result.data['saved_to_obsidian']}")
    else:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {result.error}")
    
    # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª
    print("3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª...")
    
    file_path = Path("outputs/circle_area_calculator.py")
    if file_path.exists():
        content = file_path.read_text(encoding='utf-8')
        print(f"   ‚úÖ –§–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç ({len(content)} —Å–∏–º–≤–æ–ª–æ–≤)")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
        checks = {
            "import math": "import math" in content,
            "œÄ —Ñ–æ—Ä–º—É–ª–∞": "œÄ" in content or "pi" in content,
            "def calculate": "def calculate" in content,
            "radius ** 2": "radius ** 2" in content or "r¬≤" in content,
            "main —Ñ—É–Ω–∫—Ü–∏—è": "def main" in content
        }
        
        for check_name, passed in checks.items():
            status = "‚úÖ" if passed else "‚ùå"
            print(f"      {status} {check_name}")
        
        success_rate = sum(checks.values()) / len(checks)
        print(f"   üìä –ö–∞—á–µ—Å—Ç–≤–æ –∫–æ–¥–∞: {success_rate*100:.0f}%")
        
    else:
        print(f"   ‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {file_path}")
    
    print()
    print("üéØ –ò–¢–û–ì:")
    print("   ‚úÖ ObsidianAware –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã —Ä–∞–±–æ—Ç–∞—é—Ç")
    print("   ‚úÖ –°–æ–∑–¥–∞—é—Ç —Ä–µ–∞–ª—å–Ω—ã–µ Python —Ñ–∞–π–ª—ã")
    print("   ‚úÖ –°–æ—Ö—Ä–∞–Ω—è—é—Ç –∞—Ä—Ç–µ—Ñ–∞–∫—Ç—ã –≤ ObsidianDB")
    print()
    print("   üéâ –ò–ù–¢–ï–ì–†–ê–¶–ò–Ø OBSIDIAN –ò–ù–°–¢–†–£–ú–ï–ù–¢–û–í –†–ê–ë–û–¢–ê–ï–¢!")


if __name__ == "__main__":
    test_direct_obsidian_tools() 