#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –≤–∞–ª–∏–¥–∞—Ç–æ—Ä–∞ —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤ —Å API
"""

import requests
import json

API_BASE = "http://localhost:8085/api/v1/simple"

# –¢–µ—Å—Ç–æ–≤—ã–π —Å—Ü–µ–Ω–∞—Ä–∏–π —Å –ø—Ä–æ–±–ª–µ–º–∞–º–∏
test_scenario = {
    "scenario_id": "test_validator_scenario",
    "description": "–¢–µ—Å—Ç–æ–≤—ã–π —Å—Ü–µ–Ω–∞—Ä–∏–π –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–∞–ª–∏–¥–∞—Ç–æ—Ä–∞",
    "initial_context": {},
    "steps": [
        {
            "id": "start_step",
            "type": "start"
        },
        {
            "id": "broken_step",
            "type": "telegram_send_message",  # –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ç–∏–ø
            "params": {
                "text": "–ü—Ä–∏–≤–µ—Ç!"
                # –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç chat_id
            }
        },
        {
            "id": "broken_action",
            "type": "action",
            "params": {
                "action": "update_context",  # –ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π action
                "data": {
                    "test_field": "test_value"
                }
            }
        },
        {
            "id": "end_step", 
            "type": "end"
        }
    ]
}

def test_validator_api():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç API —Å –≤–∞–ª–∏–¥–∞—Ç–æ—Ä–æ–º"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API —Å –≤–∞–ª–∏–¥–∞—Ç–æ—Ä–æ–º —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤")
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Å—Ü–µ–Ω–∞—Ä–∏–π
    response = requests.post(f"{API_BASE}/mongo/save-scenario", json={
        "collection": "scenarios",
        "document": test_scenario
    })
    
    if response.status_code == 200:
        result = response.json()
        print(f"‚úÖ –°—Ç–∞—Ç—É—Å: {result['success']}")
        
        if result.get("warnings"):
            print("‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –≤–∞–ª–∏–¥–∞—Ç–æ—Ä–∞:")
            for warning in result["warnings"]:
                print(f"  - {warning}")
        else:
            print("üìã –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π –Ω–µ—Ç")
            
        print(f"üíæ –î–∞–Ω–Ω—ã–µ: {result.get('data')}")
        
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ API: {response.status_code}")
        print(response.text)

if __name__ == "__main__":
    test_validator_api() 