#!/usr/bin/env python3
"""
–¶–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è Universal Agent Platform.
–ü—Ä–∏–Ω—Ü–∏–ø: –û–¥–Ω–∞ —Ç–æ—á–∫–∞ –∏—Å—Ç–∏–Ω—ã –¥–ª—è –≤—Å–µ—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ë–î.
"""

import os
from typing import Optional
from dataclasses import dataclass
from loguru import logger


@dataclass
class DatabaseConfig:
    """–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö."""
    uri: str
    database_name: str
    connection_timeout: int = 30
    retry_attempts: int = 3
    retry_delay: int = 5
    
    @classmethod
    def from_env(cls) -> 'DatabaseConfig':
        """–°–æ–∑–¥–∞—ë—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è."""
        
        # –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
        uri = (
            os.getenv("MONGODB_URI") or 
            os.getenv("MONGO_URI") or 
            os.getenv("MONGODB_URL") or 
            "mongodb://mongo:27017/"
        )
        
        database_name = (
            os.getenv("MONGODB_DATABASE_NAME") or
            os.getenv("MONGODB_DATABASE") or
            os.getenv("MONGO_DATABASE") or
            "universal_agent_platform"
        )
        
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
        connection_timeout = int(os.getenv("MONGODB_TIMEOUT", "30"))
        retry_attempts = int(os.getenv("MONGODB_RETRY_ATTEMPTS", "3"))
        retry_delay = int(os.getenv("MONGODB_RETRY_DELAY", "5"))
        
        config = cls(
            uri=uri,
            database_name=database_name,
            connection_timeout=connection_timeout,
            retry_attempts=retry_attempts,
            retry_delay=retry_delay
        )
        
        logger.info(f"üìä Database config: {config.uri} -> {config.database_name}")
        return config
    
    def get_connection_string(self) -> str:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª–Ω—É—é —Å—Ç—Ä–æ–∫—É –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è."""
        if "?" in self.uri:
            return f"{self.uri}&connectTimeoutMS={self.connection_timeout * 1000}"
        else:
            return f"{self.uri}?connectTimeoutMS={self.connection_timeout * 1000}"


# –ì–ª–æ–±–∞–ª—å–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
DB_CONFIG = DatabaseConfig.from_env() 