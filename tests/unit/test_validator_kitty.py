#!/usr/bin/env python3
"""
üß™ –î–µ–º–æ ValidatorKitty
"""

import asyncio
from core.validator_kitty import ValidatorKitty
# from core.memory_management import MemoryManager

async def demo_validator():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã ValidatorKitty"""
    
    print("üß™ –î–ï–ú–û ValidatorKitty")
    print("=" * 30)
    
    # –°–æ–∑–¥–∞–µ–º –≤–∞–ª–∏–¥–∞—Ç–æ—Ä
    validator = ValidatorKitty()
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã
    test_requests = [
        "–°–¥–µ–ª–∞–π —Å–∞–π—Ç —Å –∫–æ—Ç—è—Ç–∞–º–∏",
        "—Å–æ–∑–¥–∞–π —Ñ–∞–π–ª —Å –ø–ª–∞–Ω–æ–º –Ω–∞ –∑–∞–≤—Ç—Ä–∞", 
        "–ø–æ—Å—á–∏—Ç–∞–π –ø–ª–æ—Ç–Ω–æ—Å—Ç—å —á—ë—Ä–Ω–æ–π –¥—ã—Ä—ã"
    ]
    
    for i, request in enumerate(test_requests, 1):
        print(f"\n{i}. üîç –ê–ù–ê–õ–ò–ó –ó–ê–ü–†–û–°–ê: '{request}'")
        print("-" * 40)
        
        # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å
        expectation = await validator.analyze_request(request)
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±—Ä–∞–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
        expectation_text = validator.format_expectation_for_user(expectation)
        print(expectation_text)
        
        print("-" * 40)
    
    print("\n‚úÖ –î–ï–ú–û –ó–ê–í–ï–†–®–ï–ù–û!")
    print("ValidatorKitty –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")

if __name__ == "__main__":
    asyncio.run(demo_validator()) 