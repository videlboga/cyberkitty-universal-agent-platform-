#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —É–¥–∞–ª–µ–Ω–∏—è HARDCODED –ª–æ–≥–∏–∫–∏ –∏–∑ KittyCore 3.0
"""

import asyncio
import sys
import os
sys.path.append(os.path.join(os.path.dirname(__file__), 'kittycore'))

from kittycore.agents.intellectual_agent import IntellectualAgent

async def test_hardcode_removed():
    """–¢–µ—Å—Ç —á—Ç–æ hardcoded –ø–ª–∞–Ω—ã —É–¥–∞–ª–µ–Ω—ã"""
    
    print("üß™ –¢–ï–°–¢: –ü—Ä–æ–≤–µ—Ä–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è hardcoded –ª–æ–≥–∏–∫–∏")
    print("=" * 60)
    
    # –°–æ–∑–¥–∞–µ–º –∞–≥–µ–Ω—Ç–∞
    subtask = {
        "description": "–°–æ–∑–¥–∞—Ç—å Python —Å–∫—Ä–∏–ø—Ç –¥–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è —Ñ–∞–∫—Ç–æ—Ä–∏–∞–ª–∞",
        "priority": "high"
    }
    
    agent = IntellectualAgent("TestAgent", subtask)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —á—Ç–æ _create_simple_plan —Ç–µ–ø–µ—Ä—å –ø–∞–¥–∞–µ—Ç
    try:
        print("üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º _create_simple_plan...")
        result = agent._create_simple_plan("–°–æ–∑–¥–∞—Ç—å Python —Å–∫—Ä–∏–ø—Ç –¥–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è —Ñ–∞–∫—Ç–æ—Ä–∏–∞–ª–∞", {})
        print("‚ùå –û–®–ò–ë–ö–ê: _create_simple_plan –ù–ï –î–û–õ–ñ–ï–ù —Ä–∞–±–æ—Ç–∞—Ç—å!")
        print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {result}")
        return False
        
    except Exception as e:
        if "HARDCODED –ü–õ–ê–ù–´ –£–î–ê–õ–ï–ù–´" in str(e):
            print("‚úÖ –û–¢–õ–ò–ß–ù–û: _create_simple_plan –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ø–∞–¥–∞–µ—Ç!")
            print(f"–°–æ–æ–±—â–µ–Ω–∏–µ: {e}")
        else:
            print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
            return False
    
    print("\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢ –¢–ï–°–¢–ê:")
    print("‚úÖ Hardcoded –ø–ª–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω—ã!")
    print("‚úÖ –°–∏—Å—Ç–µ–º–∞ —Ç–µ–ø–µ—Ä—å —Ç—Ä–µ–±—É–µ—Ç —Ä–µ–∞–ª—å–Ω—ã–π LLM –¥–ª—è –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è!")
    print("‚úÖ –ü—Ä–∏–Ω—Ü–∏–ø '–º–æ–∫ –æ—Ç–≤–µ—Ç = –ª—É—á—à–µ —Å–º–µ—Ä—Ç—å' —Å–æ–±–ª—é–¥—ë–Ω!")
    
    return True

if __name__ == "__main__":
    success = asyncio.run(test_hardcode_removed())
    if success:
        print("\nüéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´!")
    else:
        print("\nüí• –¢–ï–°–¢–´ –ü–†–û–í–ê–õ–ï–ù–´!")
        sys.exit(1) 