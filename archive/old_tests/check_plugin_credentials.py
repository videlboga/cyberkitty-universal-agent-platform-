#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫—Ä–µ–¥–æ–≤ –ø–ª–∞–≥–∏–Ω–∞–º–∏ –∏–∑ MongoDB
"""

import asyncio
import sys
sys.path.append('/app')

from app.plugins.mongo_plugin import MongoPlugin
from app.core.simple_engine import create_engine

async def check_plugin_settings():
    print('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–ª–∞–≥–∏–Ω–æ–≤ –≤ MongoDB...')
    
    mongo = MongoPlugin()
    await mongo.initialize()
    
    print('\n' + '='*60)
    print('–ù–ê–°–¢–†–û–ô–ö–ò –í MONGODB')
    print('='*60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ AmoCRM
    amocrm_settings = await mongo._find_one('plugin_settings', {'plugin_name': 'amocrm'})
    print(f'üìã AmoCRM –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:')
    if amocrm_settings.get('success') and amocrm_settings.get('document'):
        doc = amocrm_settings['document']
        print(f'   - base_url: {doc.get("base_url", "–ù–ï–¢")}')
        print(f'   - access_token: {"–ï–°–¢–¨" if doc.get("access_token") else "–ù–ï–¢"}')
        print(f'   - updated_at: {doc.get("updated_at", "–ù–ï–¢")}')
    else:
        print('   ‚ùå –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã')
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª–µ–π AmoCRM
    amocrm_fields = await mongo._find_one('plugin_settings', {'plugin_name': 'amocrm_fields'})
    print(f'\nüìã AmoCRM –ø–æ–ª—è:')
    if amocrm_fields.get('success') and amocrm_fields.get('document'):
        doc = amocrm_fields['document']
        fields_map = doc.get('fields_map', {})
        print(f'   - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª–µ–π: {len(fields_map)}')
        for field_name, field_data in fields_map.items():
            print(f'   - {field_name}: ID={field_data.get("id", "?")}')
    else:
        print('   ‚ùå –ü–æ–ª—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã')
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram
    telegram_settings = await mongo._find_one('plugin_settings', {'plugin_name': 'telegram'})
    print(f'\nüìã Telegram –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:')
    if telegram_settings.get('success') and telegram_settings.get('document'):
        doc = telegram_settings['document']
        print(f'   - bot_token: {"–ï–°–¢–¨" if doc.get("bot_token") else "–ù–ï–¢"}')
        print(f'   - webhook_url: {doc.get("webhook_url", "–ù–ï–¢")}')
    else:
        print('   ‚ùå –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã')
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ LLM
    llm_settings = await mongo._find_one('plugin_settings', {'plugin_name': 'llm'})
    print(f'\nüìã LLM –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:')
    if llm_settings.get('success') and llm_settings.get('document'):
        doc = llm_settings['document']
        print(f'   - api_key: {"–ï–°–¢–¨" if doc.get("api_key") else "–ù–ï–¢"}')
        print(f'   - model: {doc.get("model", "–ù–ï–¢")}')
        print(f'   - base_url: {doc.get("base_url", "–ù–ï–¢")}')
    else:
        print('   ‚ùå –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã')
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–ª–∞–≥–∏–Ω–æ–≤
    all_settings = await mongo._find('plugin_settings', {})
    print(f'\nüì¶ –í—Å–µ–≥–æ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–ª–∞–≥–∏–Ω–æ–≤ –≤ –ë–î: {len(all_settings.get("documents", []))}')
    if all_settings.get('success'):
        for setting in all_settings.get('documents', []):
            plugin_name = setting.get('plugin_name', 'unknown')
            has_sensitive = any(key in str(setting) for key in ['token', 'key', 'password'])
            print(f'  - {plugin_name}: {"üîê –µ—Å—Ç—å —Å–µ–∫—Ä–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ" if has_sensitive else "‚öôÔ∏è —Ç–æ–ª—å–∫–æ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è"}')

async def check_plugin_loading():
    print('\n' + '='*60)
    print('–ó–ê–ì–†–£–ó–ö–ê –ù–ê–°–¢–†–û–ï–ö –ü–õ–ê–ì–ò–ù–ê–ú–ò')
    print('='*60)
    
    # –°–æ–∑–¥–∞–µ–º –¥–≤–∏–∂–æ–∫ —Å –ø–ª–∞–≥–∏–Ω–∞–º–∏
    engine = await create_engine()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º AmoCRM –ø–ª–∞–≥–∏–Ω
    if 'simple_amocrm' in engine.plugins:
        amocrm = engine.plugins['simple_amocrm']
        print(f'\nüîß AmoCRM –ø–ª–∞–≥–∏–Ω:')
        print(f'   - base_url: {amocrm.base_url}')
        print(f'   - access_token: {"–ï–°–¢–¨" if amocrm.access_token else "–ù–ï–¢"}')
        print(f'   - fields_map: {len(amocrm.fields_map)} –ø–æ–ª–µ–π')
        print(f'   - configured: {bool(amocrm.base_url and amocrm.access_token)}')
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º Telegram –ø–ª–∞–≥–∏–Ω
    if 'simple_telegram' in engine.plugins:
        telegram = engine.plugins['simple_telegram']
        print(f'\nüì± Telegram –ø–ª–∞–≥–∏–Ω:')
        print(f'   - bot_token: {"–ï–°–¢–¨" if hasattr(telegram, "bot_token") and telegram.bot_token else "–ù–ï–¢"}')
        print(f'   - bot –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω: {hasattr(telegram, "bot") and telegram.bot is not None}')
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º LLM –ø–ª–∞–≥–∏–Ω
    if 'simple_llm' in engine.plugins:
        llm = engine.plugins['simple_llm']
        print(f'\nü§ñ LLM –ø–ª–∞–≥–∏–Ω:')
        print(f'   - api_key: {"–ï–°–¢–¨" if hasattr(llm, "api_key") and llm.api_key else "–ù–ï–¢"}')
        print(f'   - model: {getattr(llm, "model", "–ù–ï–¢")}')
        print(f'   - base_url: {getattr(llm, "base_url", "–ù–ï–¢")}')

async def test_credential_reload():
    print('\n' + '='*60)
    print('–¢–ï–°–¢ –ü–ï–†–ï–ó–ê–ì–†–£–ó–ö–ò –ö–†–ï–î–û–í')
    print('='*60)
    
    # –°–æ–∑–¥–∞–µ–º –¥–≤–∏–∂–æ–∫
    engine = await create_engine()
    amocrm = engine.plugins.get('simple_amocrm')
    
    if not amocrm:
        print('‚ùå AmoCRM –ø–ª–∞–≥–∏–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω')
        return
    
    print(f'üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –î–û –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏:')
    print(f'   - base_url: {amocrm.base_url}')
    print(f'   - access_token: {"–ï–°–¢–¨" if amocrm.access_token else "–ù–ï–¢"}')
    
    # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    print(f'\nüîÑ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ –ë–î...')
    await amocrm._load_settings_from_db()
    await amocrm._load_fields_from_db()
    
    print(f'üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ü–û–°–õ–ï –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏:')
    print(f'   - base_url: {amocrm.base_url}')
    print(f'   - access_token: {"–ï–°–¢–¨" if amocrm.access_token else "–ù–ï–¢"}')
    print(f'   - fields_map: {len(amocrm.fields_map)} –ø–æ–ª–µ–π')

async def main():
    print('üöÄ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫—Ä–µ–¥–æ–≤ –ø–ª–∞–≥–∏–Ω–∞–º–∏ –∏–∑ –ë–î')
    
    try:
        await check_plugin_settings()
        await check_plugin_loading()
        await test_credential_reload()
        
        print('\n' + '='*60)
        print('‚úÖ –ò–¢–û–ì: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞')
        print('='*60)
        
    except Exception as e:
        print(f'‚ùå –û—à–∏–±–∫–∞: {e}')
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    asyncio.run(main()) 