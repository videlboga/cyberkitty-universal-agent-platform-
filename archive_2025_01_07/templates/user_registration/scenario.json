{
  "scenario_id": "template_user_registration",
  "name": "–®–∞–±–ª–æ–Ω: –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
  "description": "–®–∞–±–ª–æ–Ω –¥–ª—è —Å–±–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ MongoDB —Å –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º—ã–º –Ω–∞–±–æ—Ä–æ–º –ø–æ–ª–µ–π",
  "version": "1.0",
  "initial_context": {
    "greeting": "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –î–∞–≤–∞–π—Ç–µ —Å–æ–∑–¥–∞–¥–∏–º –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å.",
    "collection_name": "users",
    "required_fields": ["name", "email"],
    "optional_fields": ["phone", "age", "city"]
  },
  "steps": [
    {
      "id": "start",
      "type": "start",
      "params": {},
      "next_step": "welcome_message"
    },
    {
      "id": "welcome_message",
      "type": "message",
      "params": {
        "text": "{greeting}"
      },
      "next_step": "get_name"
    },
    {
      "id": "get_name",
      "type": "input",
      "params": {
        "prompt": "–ö–∞–∫ –≤–∞—Å –∑–æ–≤—É—Ç? (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ)",
        "input_type": "text",
        "output_var": "user_name"
      },
      "next_step": "validate_name"
    },
    {
      "id": "validate_name",
      "type": "branch",
      "params": {
        "conditions": [
          {
            "condition": "len(context.get('user_name', '').strip()) >= 2",
            "next_step": "get_email"
          }
        ],
        "default_next_step": "name_error"
      }
    },
    {
      "id": "name_error",
      "type": "message",
      "params": {
        "text": "–ò–º—è –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 2 —Å–∏–º–≤–æ–ª–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑."
      },
      "next_step": "get_name"
    },
    {
      "id": "get_email",
      "type": "input",
      "params": {
        "prompt": "–£–∫–∞–∂–∏—Ç–µ –≤–∞—à email (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ)",
        "input_type": "text",
        "output_var": "user_email"
      },
      "next_step": "validate_email"
    },
    {
      "id": "validate_email",
      "type": "branch",
      "params": {
        "conditions": [
          {
            "condition": "'@' in context.get('user_email', '') and '.' in context.get('user_email', '')",
            "next_step": "get_phone"
          }
        ],
        "default_next_step": "email_error"
      }
    },
    {
      "id": "email_error",
      "type": "message",
      "params": {
        "text": "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email –∞–¥—Ä–µ—Å."
      },
      "next_step": "get_email"
    },
    {
      "id": "get_phone",
      "type": "input",
      "params": {
        "prompt": "–£–∫–∞–∂–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ, –º–æ–∂–µ—Ç–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –Ω–∞–ø–∏—Å–∞–≤ '–ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å')",
        "input_type": "text",
        "output_var": "user_phone_raw"
      },
      "next_step": "process_phone"
    },
    {
      "id": "process_phone",
      "type": "branch",
      "params": {
        "conditions": [
          {
            "condition": "context.get('user_phone_raw', '').lower().strip() in ['–ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å', 'skip', '-', '']",
            "next_step": "get_age"
          }
        ],
        "default_next_step": "save_phone"
      }
    },
    {
      "id": "save_phone",
      "type": "log",
      "params": {
        "message": "User provided phone: {user_phone_raw}",
        "level": "INFO"
      },
      "next_step": "get_age"
    },
    {
      "id": "get_age",
      "type": "input",
      "params": {
        "prompt": "–°–∫–æ–ª—å–∫–æ –≤–∞–º –ª–µ—Ç? (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ, –º–æ–∂–µ—Ç–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å)",
        "input_type": "text",
        "output_var": "user_age_raw"
      },
      "next_step": "process_age"
    },
    {
      "id": "process_age",
      "type": "branch",
      "params": {
        "conditions": [
          {
            "condition": "context.get('user_age_raw', '').lower().strip() in ['–ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å', 'skip', '-', '']",
            "next_step": "get_city"
          },
          {
            "condition": "context.get('user_age_raw', '').isdigit() and 1 <= int(context.get('user_age_raw', '0')) <= 120",
            "next_step": "save_age"
          }
        ],
        "default_next_step": "age_error"
      }
    },
    {
      "id": "age_error",
      "type": "message",
      "params": {
        "text": "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç (—á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 120) –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ '–ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å'."
      },
      "next_step": "get_age"
    },
    {
      "id": "save_age",
      "type": "log",
      "params": {
        "message": "User age saved: {user_age_raw}",
        "level": "INFO"
      },
      "next_step": "get_city"
    },
    {
      "id": "get_city",
      "type": "input",
      "params": {
        "prompt": "–í –∫–∞–∫–æ–º –≥–æ—Ä–æ–¥–µ –≤—ã –∂–∏–≤—ë—Ç–µ? (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ, –º–æ–∂–µ—Ç–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å)",
        "input_type": "text",
        "output_var": "user_city_raw"
      },
      "next_step": "process_city"
    },
    {
      "id": "process_city",
      "type": "branch",
      "params": {
        "conditions": [
          {
            "condition": "context.get('user_city_raw', '').lower().strip() in ['–ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å', 'skip', '-', '']",
            "next_step": "prepare_user_data"
          }
        ],
        "default_next_step": "save_city"
      }
    },
    {
      "id": "save_city",
      "type": "log",
      "params": {
        "message": "User city saved: {user_city_raw}",
        "level": "INFO"
      },
      "next_step": "prepare_user_data"
    },
    {
      "id": "prepare_user_data",
      "type": "log",
      "params": {
        "message": "Preparing to save user data for: {user_name} ({user_email})",
        "level": "INFO"
      },
      "next_step": "save_user"
    },
    {
      "id": "save_user",
      "type": "mongo_insert_one",
      "params": {
        "collection": "{collection_name}",
        "document": {
          "name": "{user_name}",
          "email": "{user_email}",
          "phone": "{user_phone_raw}",
          "age": "{user_age_raw}",
          "city": "{user_city_raw}",
          "registration_date": "{current_timestamp}",
          "status": "active"
        },
        "output_var": "save_result"
      },
      "next_step": "confirm_registration"
    },
    {
      "id": "confirm_registration",
      "type": "message",
      "params": {
        "text": "–û—Ç–ª–∏—á–Ω–æ, {user_name}! –í–∞—à–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞.\n\nüìß Email: {user_email}\nüì± –¢–µ–ª–µ—Ñ–æ–Ω: {user_phone_raw}\nüéÇ –í–æ–∑—Ä–∞—Å—Ç: {user_age_raw}\nüèôÔ∏è –ì–æ—Ä–æ–¥: {user_city_raw}\n\n–î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ —Å–∏—Å—Ç–µ–º–µ."
      },
      "next_step": "log_success"
    },
    {
      "id": "log_success",
      "type": "log",
      "params": {
        "message": "User registration completed successfully. ID: {save_result}",
        "level": "INFO"
      },
      "next_step": "end"
    },
    {
      "id": "end",
      "type": "end",
      "params": {}
    }
  ]
} 