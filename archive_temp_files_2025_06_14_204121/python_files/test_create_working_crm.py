#!/usr/bin/env python3
"""
–°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç: –°–æ–∑–¥–∞–Ω–∏–µ –†–ê–ë–û–ß–ï–ì–û CRM –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
–¶–µ–ª—å: –ø–æ–ª—É—á–∏—Ç—å –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ–µ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å JavaScript, —Ñ–æ—Ä–º–∞–º–∏, –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å—é
"""

import asyncio
import sys
import os
sys.path.append(os.path.join(os.path.dirname(__file__), 'kittycore'))

from kittycore.core.orchestrator import OrchestratorAgent

async def test_create_working_crm():
    """–¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ–≥–æ —Ä–∞–±–æ—á–µ–≥–æ CRM –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    
    print("üöÄ –¢–ï–°–¢: –°–æ–∑–¥–∞–Ω–∏–µ –†–ê–ë–û–ß–ï–ì–û CRM –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è")
    print("=" * 60)
    
    # –û—á–µ–Ω—å –¥–µ—Ç–∞–ª—å–Ω–∞—è –∑–∞–¥–∞—á–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ä–∞–±–æ—á–µ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    task = """
–°–æ–∑–¥–∞—Ç—å –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ–µ —Ä–∞–±–æ—á–µ–µ CRM –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è —Ä–µ—à–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º AmoCRM –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –∏–∑ –∞–Ω–∞–ª–∏–∑–∞ –ë–∏—Ç—Ä–∏–∫—Å24.

–¢–†–ï–ë–û–í–ê–ù–ò–Ø –ö –ü–†–ò–õ–û–ñ–ï–ù–ò–Æ:
1. HTML —Ñ–∞–π–ª —Å –ø–æ–ª–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π (DOCTYPE, head, body)
2. CSS —Å—Ç–∏–ª–∏ –¥–ª—è —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –¥–∏–∑–∞–π–Ω–∞
3. JavaScript –¥–ª—è –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏
4. –§–æ—Ä–º—ã –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–æ–≤
5. –¢–∞–±–ª–∏—Ü–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∫–ª–∏–µ–Ω—Ç–æ–≤
6. –ö–Ω–æ–ø–∫–∏ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏ —É–¥–∞–ª–µ–Ω–∏—è
7. –ü–æ–∏—Å–∫ –∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–æ–≤
8. –î–µ–º–æ-–¥–∞–Ω–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç–æ–≤ —É–∂–µ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏
9. –õ–æ–∫–∞–ª—å–Ω–æ–µ —Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö (localStorage)
10. –ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –∫ –∑–∞–ø—É—Å–∫—É –≤ –±—Ä–∞—É–∑–µ—Ä–µ

–§–£–ù–ö–¶–ò–û–ù–ê–õ–¨–ù–û–°–¢–¨:
- –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞ (–∏–º—è, email, —Ç–µ–ª–µ—Ñ–æ–Ω, —Å—Ç–∞—Ç—É—Å)
- –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤
- –£–¥–∞–ª–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–æ–≤ —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º
- –ü–æ–∏—Å–∫ –∫–ª–∏–µ–Ω—Ç–æ–≤ –ø–æ –∏–º–µ–Ω–∏/email
- –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ —Å—Ç–∞—Ç—É—Å—É (–Ω–æ–≤—ã–π, –≤ —Ä–∞–±–æ—Ç–µ, –∑–∞–∫—Ä—ã—Ç)
- –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ –¥–∞—Ç–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
- –°—á–µ—Ç—á–∏–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ (–≤—Å–µ–≥–æ –∫–ª–∏–µ–Ω—Ç–æ–≤, –∞–∫—Ç–∏–≤–Ω—ã—Ö, –∑–∞–∫—Ä—ã—Ç—ã—Ö)

–¢–ï–•–ù–ò–ß–ï–°–ö–ò–ï –¢–†–ï–ë–û–í–ê–ù–ò–Ø:
- –û–¥–∏–Ω HTML —Ñ–∞–π–ª —Å–æ –≤—Å–µ–º –∫–æ–¥–æ–º
- –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π responsive –¥–∏–∑–∞–π–Ω
- –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ JavaScript (ES6+)
- –í–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–æ—Ä–º
- –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± —É—Å–ø–µ—à–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏—è—Ö
- –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫

–ù–ê–ó–í–ê–ù–ò–ï –§–ê–ô–õ–ê: working_crm_dashboard.html

–°–æ–∑–¥–∞–π –†–ï–ê–õ–¨–ù–û –†–ê–ë–û–¢–ê–Æ–©–ï–ï –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –º–æ–∂–Ω–æ –æ—Ç–∫—Ä—ã—Ç—å –≤ –±—Ä–∞—É–∑–µ—Ä–µ –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å!
"""
    
    print("üìã –ó–∞–¥–∞—á–∞: –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ–≥–æ CRM –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è")
    print("üéØ –û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: working_crm_dashboard.html —Å –ø–æ–ª–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å—é")
    print()
    
    orchestrator = OrchestratorAgent()
    
    try:
        print("üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Ä–∞–±–æ—á–µ–≥–æ CRM...")
        result = await orchestrator.execute_task(task)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        if isinstance(result, str):
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: {result}")
            return False
        
        print(f"‚úÖ –ó–∞–¥–∞—á–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞!")
        print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç: {result}")
        
        # –ò—â–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–π —Ñ–∞–π–ª
        target_file = "working_crm_dashboard.html"
        
        if os.path.exists(target_file):
            size = os.path.getsize(target_file)
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω —Ñ–∞–π–ª: {target_file} ({size} –±–∞–π—Ç)")
            
            # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
            with open(target_file, 'r', encoding='utf-8') as f:
                content = f.read()
            
            # –î–µ—Ç–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏
            checks = {
                "HTML —Å—Ç—Ä—É–∫—Ç—É—Ä–∞": "<!DOCTYPE html>" in content and "<html" in content and "</html>" in content,
                "CSS —Å—Ç–∏–ª–∏": "<style>" in content and "body" in content and "font-family" in content,
                "JavaScript –∫–æ–¥": "<script>" in content and "function" in content,
                "–§–æ—Ä–º—ã": "<form>" in content or "<input" in content,
                "–¢–∞–±–ª–∏—Ü—ã": "<table>" in content or "tbody" in content,
                "–ö–Ω–æ–ø–∫–∏": "<button>" in content and "onclick" in content,
                "Event listeners": "addEventListener" in content or "onclick" in content,
                "LocalStorage": "localStorage" in content,
                "–§—É–Ω–∫—Ü–∏–∏ CRUD": "add" in content.lower() and "delete" in content.lower(),
                "–ü–æ–∏—Å–∫/—Ñ–∏–ª—å—Ç—Ä": "search" in content.lower() or "filter" in content.lower(),
                "–î–µ–º–æ –¥–∞–Ω–Ω—ã–µ": "demo" in content.lower() or "example" in content.lower() or "–∫–ª–∏–µ–Ω—Ç" in content.lower(),
                "Responsive –¥–∏–∑–∞–π–Ω": "responsive" in content or "@media" in content or "viewport" in content,
                "–í–∞–ª–∏–¥–∞—Ü–∏—è": "required" in content or "validate" in content.lower(),
                "–ë–æ–ª—å—à–æ–π —Ä–∞–∑–º–µ—Ä": len(content) > 5000  # –ú–∏–Ω–∏–º—É–º 5KB –¥–ª—è –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
            }
            
            passed_checks = sum(checks.values())
            total_checks = len(checks)
            
            print(f"\nüìä –ê–ù–ê–õ–ò–ó –§–£–ù–ö–¶–ò–û–ù–ê–õ–¨–ù–û–°–¢–ò:")
            print(f"–ü—Ä–æ–≤–µ—Ä–æ–∫ –ø—Ä–æ–π–¥–µ–Ω–æ: {passed_checks}/{total_checks} ({passed_checks/total_checks*100:.1f}%)")
            print()
            
            for check_name, passed in checks.items():
                status = "‚úÖ" if passed else "‚ùå"
                print(f"  {status} {check_name}")
            
            # –û—Ü–µ–Ω–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞
            if passed_checks >= 12:
                print(f"\nüéâ –û–¢–õ–ò–ß–ù–û! –ü–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ–µ —Ä–∞–±–æ—á–µ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ!")
                quality = "–û–¢–õ–ò–ß–ù–û–ï"
            elif passed_checks >= 9:
                print(f"\n‚úÖ –•–û–†–û–®–û! –†–∞–±–æ—á–µ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å—é")
                quality = "–•–û–†–û–®–ï–ï"
            elif passed_checks >= 6:
                print(f"\n‚ö†Ô∏è –£–î–û–í–õ–ï–¢–í–û–†–ò–¢–ï–õ–¨–ù–û. –ë–∞–∑–æ–≤–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ")
                quality = "–ë–ê–ó–û–í–û–ï"
            else:
                print(f"\n‚ùå –ü–õ–û–•–û. –ù–µ —Ä–∞–±–æ—á–µ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ")
                quality = "–ù–ï –†–ê–ë–û–ß–ï–ï"
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–µ–≤—å—é –∫–æ–¥–∞
            print(f"\nüìÑ –ü–†–ï–í–¨–Æ –ö–û–î–ê ({len(content)} —Å–∏–º–≤–æ–ª–æ–≤):")
            print("-" * 50)
            preview = content[:500] + "..." if len(content) > 500 else content
            print(preview)
            
            # –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –∑–∞–ø—É—Å–∫—É
            print(f"\nüåê –ò–ù–°–¢–†–£–ö–¶–ò–ò –ü–û –ó–ê–ü–£–°–ö–£:")
            print(f"1. –û—Ç–∫—Ä–æ–π—Ç–µ —Ñ–∞–π–ª –≤ –±—Ä–∞—É–∑–µ—Ä–µ: chromium {target_file}")
            print(f"2. –ò–ª–∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ –ª–æ–∫–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä: python -m http.server 8000")
            print(f"3. –ó–∞—Ç–µ–º –æ—Ç–∫—Ä–æ–π—Ç–µ: http://localhost:8000/{target_file}")
            
            return quality in ["–û–¢–õ–ò–ß–ù–û–ï", "–•–û–†–û–®–ï–ï"]
            
        else:
            print(f"‚ùå –§–∞–π–ª {target_file} –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            
            # –ò—â–µ–º –ª—é–±—ã–µ –Ω–æ–≤—ã–µ HTML —Ñ–∞–π–ª—ã
            html_files = [f for f in os.listdir('.') if f.endswith('.html')]
            recent_files = []
            
            import time
            current_time = time.time()
            
            for html_file in html_files:
                file_time = os.path.getmtime(html_file)
                if current_time - file_time < 120:  # –§–∞–π–ª—ã —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 2 –º–∏–Ω—É—Ç—ã
                    size = os.path.getsize(html_file)
                    recent_files.append((html_file, size))
            
            if recent_files:
                print(f"üìÑ –ù–∞–π–¥–µ–Ω—ã –Ω–µ–¥–∞–≤–Ω–æ —Å–æ–∑–¥–∞–Ω–Ω—ã–µ HTML —Ñ–∞–π–ª—ã:")
                for filename, size in recent_files:
                    print(f"  - {filename} ({size} –±–∞–π—Ç)")
                    
                # –ü—Ä–æ–≤–µ—Ä–∏–º —Å–∞–º—ã–π –±–æ–ª—å—à–æ–π —Ñ–∞–π–ª
                largest_file = max(recent_files, key=lambda x: x[1])
                print(f"\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∞–º—ã–π –±–æ–ª—å—à–æ–π —Ñ–∞–π–ª: {largest_file[0]}")
                
                with open(largest_file[0], 'r', encoding='utf-8') as f:
                    content = f.read()
                
                if "crm" in content.lower() or "–∫–ª–∏–µ–Ω—Ç" in content.lower():
                    print(f"‚úÖ –í–æ–∑–º–æ–∂–Ω–æ —ç—Ç–æ –Ω–∞—à–µ CRM –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ!")
                    return True
            
            return False
            
    except Exception as e:
        print(f"üí• –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: {e}")
        return False

if __name__ == "__main__":
    print("üöÄ –ó–ê–ü–£–°–ö –¢–ï–°–¢–ê: –°–û–ó–î–ê–ù–ò–ï –†–ê–ë–û–ß–ï–ì–û CRM")
    print("=" * 60)
    
    success = asyncio.run(test_create_working_crm())
    
    if success:
        print("\nüéâ –£–°–ü–ï–•! –†–∞–±–æ—á–µ–µ CRM –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ!")
        print("üåü KittyCore 3.0 –º–æ–∂–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è!")
    else:
        print("\nüí• –ü–†–û–í–ê–õ! CRM –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ —Å–æ–∑–¥–∞–Ω–æ –∏–ª–∏ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
        print("üîß –ù—É–∂–Ω–æ —É–ª—É—á—à–∏—Ç—å —Å–∏—Å—Ç–µ–º—É —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π") 