"""
üê± KittyCore 3.0 - –°–∞–º–æ—Ä–µ–¥—É–ø–ª–∏—Ü–∏—Ä—É—é—â–∞—è—Å—è –ê–≥–µ–Ω—Ç–Ω–∞—è –°–∏—Å—Ç–µ–º–∞

‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
    –ü–†–ò–ù–¶–ò–ü: "–ê–≥–µ–Ω—Ç—ã —Å–æ–∑–¥–∞—é—Ç –∞–≥–µ–Ω—Ç–æ–≤, –∫–æ–ª–ª–µ–∫—Ç–∏–≤–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç –ø—Ä–µ–≤—ã—à–µ –≤—Å–µ–≥–æ"
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

üîÑ –°–ê–ú–û–ü–û–†–û–ñ–î–ï–ù–ò–ï: –ê–≥–µ–Ω—Ç—ã —Å–æ–∑–¥–∞—é—Ç –¥—Ä—É–≥–∏—Ö –∞–≥–µ–Ω—Ç–æ–≤ –ø–æ–¥ –∑–∞–¥–∞—á–∏
üß† –ö–û–õ–õ–ï–ö–¢–ò–í–ù–ê–Ø –ü–ê–ú–Ø–¢–¨: –û–±—â–∞—è –ø–∞–º—è—Ç—å –∏ –∑–Ω–∞–Ω–∏—è –¥–ª—è –≤—Å–µ–π –∫–æ–º–∞–Ω–¥—ã –∞–≥–µ–Ω—Ç–æ–≤  
üìä –ì–†–ê–§-–û–†–ö–ï–°–¢–†–ê–¶–ò–Ø: –í–∏–∑—É–∞–ª—å–Ω–æ–µ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Å–ª–æ–∂–Ω—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
üéØ –ê–î–ê–ü–¢–ò–í–ù–û–°–¢–¨: –°–∏—Å—Ç–µ–º–∞ –∞–¥–∞–ø—Ç–∏—Ä—É–µ—Ç—Å—è –ø–æ–¥ —Å–ª–æ–∂–Ω–æ—Å—Ç—å –∏ —Ç–∏–ø –∑–∞–¥–∞—á
üë§ HUMAN-AI –°–ò–ù–ï–†–ì–ò–Ø: –£–º–Ω–æ–µ –≤–º–µ—à–∞—Ç–µ–ª—å—Å—Ç–≤–æ —á–µ–ª–æ–≤–µ–∫–∞ –≤ –Ω—É–∂–Ω—ã–µ –º–æ–º–µ–Ω—Ç—ã
üöÄ –°–ê–ú–û–û–ë–£–ß–ï–ù–ò–ï: –°–∏—Å—Ç–µ–º–∞ —É–ª—É—á—à–∞–µ—Ç—Å—è –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤

‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
‚ïë                    –ê–†–•–ò–¢–ï–ö–¢–£–†–ê KITTYCORE 3.0                        ‚ïë
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù

üß≠ OrchestratorAgent - –ì–ª–∞–≤–Ω—ã–π –¥–∏—Ä–∏–∂—ë—Ä —Å–∏—Å—Ç–µ–º—ã
üè≠ AgentFactory 2.0 - –§–∞–±—Ä–∏–∫–∞ –∞–≥–µ–Ω—Ç–æ–≤ –Ω–æ–≤–æ–≥–æ –ø–æ–∫–æ–ª–µ–Ω–∏—è
üß† CollectiveMemory - –ö–æ–ª–ª–µ–∫—Ç–∏–≤–Ω–∞—è –ø–∞–º—è—Ç—å —Å–∏—Å—Ç–µ–º—ã
üìä WorkflowGraph - –ì—Ä–∞—Ñ —Ä–∞–±–æ—á–∏—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤  
üîÄ ConditionalLogic - –£–º–Ω–∞—è –ª–æ–≥–∏–∫–∞ –ø—Ä–∏–Ω—è—Ç–∏—è —Ä–µ—à–µ–Ω–∏–π
üë§ HumanCollaboration - –°–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ —Å —á–µ–ª–æ–≤–µ–∫–æ–º
üîÑ SelfImprovement - –°–∞–º–æ—Å–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã

‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
"""

__version__ = "3.0.0"
__author__ = "CyberKitty Team"
__description__ = "–°–∞–º–æ—Ä–µ–¥—É–ø–ª–∏—Ü–∏—Ä—É—é—â–∞—è—Å—è –∞–≥–µ–Ω—Ç–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ —Å –∫–æ–ª–ª–µ–∫—Ç–∏–≤–Ω—ã–º –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–æ–º"

# ====== –û–°–ù–û–í–ù–´–ï –ö–û–ú–ü–û–ù–ï–ù–¢–´ –°–ò–°–¢–ï–ú–´ ======

# –ì–ª–∞–≤–Ω—ã–π –æ—Ä–∫–µ—Å—Ç—Ä–∞—Ç–æ—Ä (–≠—Ç–∞–ø 2 - –∞–∫—Ç–∏–≤–µ–Ω)
from .core.orchestrator import (
    OrchestratorAgent, OrchestratorConfig, UnifiedKittyCoreEngine, UnifiedConfig,
    create_orchestrator, solve_with_orchestrator
)

# TODO: –û—Å—Ç–∞–ª—å–Ω—ã–µ core –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –±—É–¥—É—Ç –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω—ã –≤ —Å–ª–µ–¥—É—é—â–∏—Ö —ç—Ç–∞–ø–∞—Ö
# from .core.memory_management import MemoryManagementEngine  
# from .core.conditional_logic import AdvancedConditionalEngine
# from .core.human_collaboration import HumanInterventionEngine
# from .core.graph_workflow import GraphVisualizationEngine
# from .core.self_improvement import SelfImprovementEngine

# –°–∏—Å—Ç–µ–º–∞ –∞–≥–µ–Ω—Ç–æ–≤ (–º–∏–≥—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ –Ω–æ–≤—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É)
from .agents import Agent, AgentConfig, AgentFactory, AgentSpecification

# –°–∏—Å—Ç–µ–º–∞ –ø–∞–º—è—Ç–∏ (–º–∏–≥—Ä–∏—Ä–æ–≤–∞–Ω—ã)
from .memory import Memory, SimpleMemory, PersistentMemory

# –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã (–º–∏–≥—Ä–∏—Ä–æ–≤–∞–Ω—ã)
from .tools import Tool, ToolResult

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è (–º–∏–≥—Ä–∏—Ä–æ–≤–∞–Ω—ã)
from .config import Config, get_config

# ====== –û–ë–†–ê–¢–ù–ê–Ø –°–û–í–ú–ï–°–¢–ò–ú–û–°–¢–¨ ======
# TODO: –£–¥–∞–ª–∏—Ç—å –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–∏

# –ü–æ–∫–∞ –æ—Å—Ç–∞–≤–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –∏–º–ø–æ—Ä—Ç—ã –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
# from .agent import Agent as LegacyAgent
# from .agent_factory import AgentFactory as LegacyAgentFactory
# from .master_agent import MasterAgent, create_master_agent

# ====== –≠–ö–°–ü–û–†–¢ –ö–û–ú–ü–û–ù–ï–ù–¢–û–í ======

__all__ = [
    # –í–µ—Ä—Å–∏—è –∏ –º–µ—Ç–∞–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    "__version__", "__author__", "__description__",
    
    # –û—Å–Ω–æ–≤–Ω—ã–µ –¥–≤–∏–∂–∫–∏ KittyCore 3.0
    "UnifiedKittyCoreEngine",
    "OrchestratorAgent", "OrchestratorConfig", "UnifiedConfig",
    "create_orchestrator", "solve_with_orchestrator",
    
    # –°–∏—Å—Ç–µ–º–∞ –∞–≥–µ–Ω—Ç–æ–≤
    "Agent", "AgentConfig", "AgentFactory", "AgentSpecification",
    
    # –°–∏—Å—Ç–µ–º–∞ –ø–∞–º—è—Ç–∏
    "Memory", "SimpleMemory", "PersistentMemory",
    
    # –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã
    "Tool", "ToolResult",
    
    # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
    "Config", "get_config",
    
    # –û–±—Ä–∞—Ç–Ω–∞—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å (–≤—Ä–µ–º–µ–Ω–Ω–æ)
    # "MasterAgent", "create_master_agent"
]

# ====== –ë–´–°–¢–†–´–ô –°–¢–ê–†–¢ ======

def create_agent(prompt: str, **kwargs) -> Agent:
    """
    üöÄ –ë—ã—Å—Ç—Ä–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –∞–≥–µ–Ω—Ç–∞
    
    Args:
        prompt: –°–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç –∞–≥–µ–Ω—Ç–∞
        **kwargs: –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã (model, tools, memory)
    
    Returns:
        –ì–æ—Ç–æ–≤—ã–π –∫ —Ä–∞–±–æ—Ç–µ –∞–≥–µ–Ω—Ç
    
    Example:
        >>> agent = kittycore.create_agent("You are a helpful assistant")
        >>> result = agent.run("Hello, world!")
    """
    return Agent(prompt, **kwargs)

def create_agent_team(project_description: str) -> list:
    """
    ü§ñ –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã –∞–≥–µ–Ω—Ç–æ–≤ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞
    
    Args:
        project_description: –û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞
        
    Returns:
        –°–ø–∏—Å–æ–∫ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∞–≥–µ–Ω—Ç–æ–≤
    
    Example:
        >>> team = kittycore.create_agent_team("Create a web scraper")
        >>> # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞—Å—Ç –∞–≥–µ–Ω—Ç–æ–≤: –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫, —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫, —Ç–µ—Å—Ç–µ—Ä
    """
    factory = AgentFactory()
    return factory.create_collaborative_team(project_description)

# –î–æ–±–∞–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –≤ —ç–∫—Å–ø–æ—Ä—Ç
__all__.extend(["create_agent", "create_agent_team"])

# ====== –°–ò–°–¢–ï–ú–ê –õ–û–ì–ò–†–û–í–ê–ù–ò–Ø ======

import logging
from pathlib import Path

# –°–æ–∑–¥–∞—ë–º –ø–∞–ø–∫—É –¥–ª—è –ª–æ–≥–æ–≤
logs_dir = Path("logs")
logs_dir.mkdir(exist_ok=True)

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è KittyCore
logger = logging.getLogger("kittycore")
if not logger.handlers:
    handler = logging.FileHandler(logs_dir / "kittycore.log")
    handler.setFormatter(
        logging.Formatter('%(asctime)s - %(name)s - %(levelname)s - %(message)s')
    )
    logger.addHandler(handler)
    logger.setLevel(logging.INFO)

logger.info(f"üê± KittyCore {__version__} –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
logger.info("üîÑ –°–∞–º–æ—Ä–µ–¥—É–ø–ª–∏—Ü–∏—Ä—É—é—â–∞—è—Å—è –∞–≥–µ–Ω—Ç–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ")

# ====== –ü–†–ò–ù–¶–ò–ü–´ KITTYCORE 3.0 ======

PRINCIPLES = {
    "self_replication": "–ê–≥–µ–Ω—Ç—ã —Å–æ–∑–¥–∞—é—Ç –¥—Ä—É–≥–∏—Ö –∞–≥–µ–Ω—Ç–æ–≤ –ø–æ–¥ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –∑–∞–¥–∞—á–∏",
    "collective_memory": "–û–±—â–∞—è –ø–∞–º—è—Ç—å –∏ –∑–Ω–∞–Ω–∏—è –¥–ª—è –≤—Å–µ–π –∫–æ–º–∞–Ω–¥—ã –∞–≥–µ–Ω—Ç–æ–≤", 
    "graph_orchestration": "–í–∏–∑—É–∞–ª—å–Ω–æ–µ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤",
    "adaptivity": "–°–∏—Å—Ç–µ–º–∞ –∞–¥–∞–ø—Ç–∏—Ä—É–µ—Ç—Å—è –ø–æ–¥ —Å–ª–æ–∂–Ω–æ—Å—Ç—å –∏ —Ç–∏–ø –∑–∞–¥–∞—á",
    "human_ai_synergy": "–£–º–Ω–æ–µ –≤–º–µ—à–∞—Ç–µ–ª—å—Å—Ç–≤–æ —á–µ–ª–æ–≤–µ–∫–∞ –≤ –Ω—É–∂–Ω—ã–µ –º–æ–º–µ–Ω—Ç—ã",
    "self_learning": "–°–∏—Å—Ç–µ–º–∞ —É–ª—É—á—à–∞–µ—Ç—Å—è –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤"
}

ARCHITECTURE_COMPONENTS = {
    "orchestrator": "OrchestratorAgent - –≥–ª–∞–≤–Ω—ã–π –¥–∏—Ä–∏–∂—ë—Ä —Å–∏—Å—Ç–µ–º—ã",
    "agent_factory": "AgentFactory 2.0 - —Ñ–∞–±—Ä–∏–∫–∞ –∞–≥–µ–Ω—Ç–æ–≤ –Ω–æ–≤–æ–≥–æ –ø–æ–∫–æ–ª–µ–Ω–∏—è", 
    "collective_memory": "CollectiveMemory - –∫–æ–ª–ª–µ–∫—Ç–∏–≤–Ω–∞—è –ø–∞–º—è—Ç—å —Å–∏—Å—Ç–µ–º—ã",
    "workflow_graph": "WorkflowGraph - –≥—Ä–∞—Ñ —Ä–∞–±–æ—á–∏—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤",
    "conditional_logic": "ConditionalLogic - —É–º–Ω–∞—è –ª–æ–≥–∏–∫–∞ –ø—Ä–∏–Ω—è—Ç–∏—è —Ä–µ—à–µ–Ω–∏–π",
    "human_collaboration": "HumanCollaboration - —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ —Å —á–µ–ª–æ–≤–µ–∫–æ–º",
    "self_improvement": "SelfImprovement - —Å–∞–º–æ—Å–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã"
}

logger.info("üöÄ KittyCore 3.0 - –≥–æ—Ç–æ–≤ –ø—Ä–µ–≤–æ—Å—Ö–æ–¥–∏—Ç—å CrewAI, LangGraph, AutoGen –∏ Swarm!") 