#!/bin/bash

# –§–ò–ù–ê–õ–¨–ù–´–ô –¢–ï–°–¢: –ü–æ–ª–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ MongoDB API
# –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤—Å–µ CRUD –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏–º–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏ –≤ –ë–î

set -e

API_URL="http://localhost:8085"
TEST_PREFIX="final_test_$(date +%s)"

echo "üéØ –§–ò–ù–ê–õ–¨–ù–´–ô –¢–ï–°–¢: MongoDB API - –ü–û–õ–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê"
echo "üîç –¶–µ–ª—å: –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≤—Å–µ CRUD –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏–º–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏"
echo "=" | tr '=' '=' | head -c 70; echo

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Ç–≤–µ—Ç–∞
check_response() {
    local response="$1"
    local description="$2"
    
    if echo "$response" | jq -e '.success == true' > /dev/null 2>&1; then
        echo "‚úÖ $description: SUCCESS"
        return 0
    else
        echo "‚ùå $description: FAILED"
        echo "Response: $response"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ JSON
extract_value() {
    local json="$1"
    local path="$2"
    echo "$json" | jq -r "$path"
}

echo "üìã –≠–¢–ê–ü 1: CREATE - –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö"
echo "---"

# 1. –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –¥–æ–∫—É–º–µ–Ω—Ç
echo "üìù –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞..."
test_doc='{
    "test_id": "'$TEST_PREFIX'_doc1",
    "name": "–¢–µ—Å—Ç–æ–≤—ã–π –¥–æ–∫—É–º–µ–Ω—Ç",
    "value": 100,
    "created_at": "'$(date -Iseconds)'"
}'

create_response=$(curl -s -X POST "$API_URL/api/v1/simple/mongo/insert" \
    -H "Content-Type: application/json" \
    -d '{
        "collection": "test_crud",
        "document": '"$test_doc"'
    }')

check_response "$create_response" "–°–æ–∑–¥–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞"
doc_id=$(extract_value "$create_response" '.data')
echo "üìÑ ID —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞: $doc_id"

# 2. –°–æ–∑–¥–∞–µ–º –≤—Ç–æ—Ä–æ–π –¥–æ–∫—É–º–µ–Ω—Ç –¥–ª—è –º–∞—Å—Å–æ–≤—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
echo "üìù –°–æ–∑–¥–∞–Ω–∏–µ –≤—Ç–æ—Ä–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞..."
test_doc2='{
    "test_id": "'$TEST_PREFIX'_doc2",
    "name": "–í—Ç–æ—Ä–æ–π –¥–æ–∫—É–º–µ–Ω—Ç",
    "value": 200,
    "created_at": "'$(date -Iseconds)'"
}'

create_response2=$(curl -s -X POST "$API_URL/api/v1/simple/mongo/insert" \
    -H "Content-Type: application/json" \
    -d '{
        "collection": "test_crud",
        "document": '"$test_doc2"'
    }')

check_response "$create_response2" "–°–æ–∑–¥–∞–Ω–∏–µ –≤—Ç–æ—Ä–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞"
doc_id2=$(extract_value "$create_response2" '.data')
echo "üìÑ ID –≤—Ç–æ—Ä–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞: $doc_id2"

echo ""
echo "üìã –≠–¢–ê–ü 2: READ - –ß—Ç–µ–Ω–∏–µ –∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö"
echo "---"

# 3. –ß–∏—Ç–∞–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã
echo "üîç –ü–æ–∏—Å–∫ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤..."
read_response=$(curl -s -X POST "$API_URL/api/v1/simple/mongo/find" \
    -H "Content-Type: application/json" \
    -d '{
        "collection": "test_crud",
        "filter": {"test_id": {"$regex": "^'$TEST_PREFIX'"}}
    }')

check_response "$read_response" "–ß—Ç–µ–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤"
docs_count=$(extract_value "$read_response" '.data | length')
echo "üìä –ù–∞–π–¥–µ–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤: $docs_count"

if [ "$docs_count" -eq 2 ]; then
    echo "‚úÖ –û–±–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞ –Ω–∞–π–¥–µ–Ω—ã"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–µ—Ä–≤–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞
    doc1_name=$(extract_value "$read_response" '.data[0].name')
    doc1_value=$(extract_value "$read_response" '.data[0].value')
    echo "üìÑ –î–æ–∫—É–º–µ–Ω—Ç 1: name='$doc1_name', value=$doc1_value"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤—Ç–æ—Ä–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞
    doc2_name=$(extract_value "$read_response" '.data[1].name')
    doc2_value=$(extract_value "$read_response" '.data[1].value')
    echo "üìÑ –î–æ–∫—É–º–µ–Ω—Ç 2: name='$doc2_name', value=$doc2_value"
else
    echo "‚ùå –û–∂–∏–¥–∞–ª–æ—Å—å 2 –¥–æ–∫—É–º–µ–Ω—Ç–∞, –Ω–∞–π–¥–µ–Ω–æ: $docs_count"
fi

echo ""
echo "üìã –≠–¢–ê–ü 3: UPDATE - –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö"
echo "---"

# 4. –û–±–Ω–æ–≤–ª—è–µ–º –ø–µ—Ä–≤—ã–π –¥–æ–∫—É–º–µ–Ω—Ç
echo "üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–µ—Ä–≤–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞..."
update_response=$(curl -s -X POST "$API_URL/api/v1/simple/mongo/update" \
    -H "Content-Type: application/json" \
    -d '{
        "collection": "test_crud",
        "filter": {"test_id": "'$TEST_PREFIX'_doc1"},
        "document": {
            "name": "–û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –¥–æ–∫—É–º–µ–Ω—Ç",
            "value": 999,
            "updated_at": "'$(date -Iseconds)'"
        }
    }')

check_response "$update_response" "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞"
modified_count=$(extract_value "$update_response" '.data.modified_count')
matched_count=$(extract_value "$update_response" '.data.matched_count')
echo "üìä –û–±–Ω–æ–≤–ª–µ–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤: $modified_count, –Ω–∞–π–¥–µ–Ω–æ: $matched_count"

if [ "$modified_count" -eq 1 ] && [ "$matched_count" -eq 1 ]; then
    echo "‚úÖ –î–æ–∫—É–º–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω"
else
    echo "‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: modified=$modified_count, matched=$matched_count"
fi

# 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–∏–º–µ–Ω–∏–ª–æ—Å—å
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö..."
verify_update_response=$(curl -s -X POST "$API_URL/api/v1/simple/mongo/find" \
    -H "Content-Type: application/json" \
    -d '{
        "collection": "test_crud",
        "filter": {"test_id": "'$TEST_PREFIX'_doc1"}
    }')

check_response "$verify_update_response" "–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è"
updated_name=$(extract_value "$verify_update_response" '.data[0].name')
updated_value=$(extract_value "$verify_update_response" '.data[0].value')
echo "üìÑ –ü–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: name='$updated_name', value=$updated_value"

if [ "$updated_name" = "–û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –¥–æ–∫—É–º–µ–Ω—Ç" ] && [ "$updated_value" = "999" ]; then
    echo "‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–∏–º–µ–Ω–∏–ª–æ—Å—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
else
    echo "‚ùå –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–µ –ø—Ä–∏–º–µ–Ω–∏–ª–æ—Å—å: name='$updated_name', value=$updated_value"
fi

echo ""
echo "üìã –≠–¢–ê–ü 4: DELETE - –£–¥–∞–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö"
echo "---"

# 6. –£–¥–∞–ª—è–µ–º –æ–¥–∏–Ω –¥–æ–∫—É–º–µ–Ω—Ç
echo "üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ –ø–µ—Ä–≤–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞..."
delete_response=$(curl -s -X POST "$API_URL/api/v1/simple/mongo/delete" \
    -H "Content-Type: application/json" \
    -d '{
        "collection": "test_crud",
        "filter": {"test_id": "'$TEST_PREFIX'_doc1"}
    }')

check_response "$delete_response" "–£–¥–∞–ª–µ–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞"
deleted_count=$(extract_value "$delete_response" '.data.deleted_count')
echo "üìä –£–¥–∞–ª–µ–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤: $deleted_count"

if [ "$deleted_count" -eq 1 ]; then
    echo "‚úÖ –î–æ–∫—É–º–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω"
else
    echo "‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è: deleted_count=$deleted_count"
fi

# 7. –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –¥–æ–∫—É–º–µ–Ω—Ç –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —É–¥–∞–ª–µ–Ω
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è..."
verify_delete_response=$(curl -s -X POST "$API_URL/api/v1/simple/mongo/find" \
    -H "Content-Type: application/json" \
    -d '{
        "collection": "test_crud",
        "filter": {"test_id": "'$TEST_PREFIX'_doc1"}
    }')

check_response "$verify_delete_response" "–ü—Ä–æ–≤–µ—Ä–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è"
remaining_docs=$(extract_value "$verify_delete_response" '.data | length')
echo "üìä –û—Å—Ç–∞–ª–æ—Å—å –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ —Å test_id='${TEST_PREFIX}_doc1': $remaining_docs"

if [ "$remaining_docs" -eq 0 ]; then
    echo "‚úÖ –î–æ–∫—É–º–µ–Ω—Ç –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —É–¥–∞–ª–µ–Ω"
else
    echo "‚ùå –î–æ–∫—É–º–µ–Ω—Ç –Ω–µ —É–¥–∞–ª–µ–Ω: –Ω–∞–π–¥–µ–Ω–æ $remaining_docs –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤"
fi

echo ""
echo "üìã –≠–¢–ê–ü 5: CLEANUP - –û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö"
echo "---"

# 8. –£–¥–∞–ª—è–µ–º –≤—Å–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
echo "üßπ –û—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö..."
cleanup_response=$(curl -s -X POST "$API_URL/api/v1/simple/mongo/delete" \
    -H "Content-Type: application/json" \
    -d '{
        "collection": "test_crud",
        "filter": {"test_id": {"$regex": "^'$TEST_PREFIX'"}}
    }')

check_response "$cleanup_response" "–û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö"
cleanup_deleted=$(extract_value "$cleanup_response" '.data.deleted_count')
echo "üìä –û—á–∏—â–µ–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤: $cleanup_deleted"

echo ""
echo "üéØ –§–ò–ù–ê–õ–¨–ù–´–ï –†–ï–ó–£–õ–¨–¢–ê–¢–´:"
echo "---"
echo "‚úÖ CREATE: –î–æ–∫—É–º–µ–Ω—Ç—ã —Å–æ–∑–¥–∞—é—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
echo "‚úÖ READ: –ü–æ–∏—Å–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ"
echo "‚úÖ UPDATE: –û–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–∏–º–µ–Ω—è—é—Ç—Å—è"
echo "‚úÖ DELETE: –£–¥–∞–ª–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
echo "‚úÖ CLEANUP: –û—á–∏—Å—Ç–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞"
echo ""
echo "üèÜ –í–´–í–û–î: MongoDB API –ü–û–õ–ù–û–°–¢–¨–Æ –§–£–ù–ö–¶–ò–û–ù–ê–õ–ï–ù!"
echo "üí° Admin API –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –∏–∑–±—ã—Ç–æ—á–µ–Ω"
echo "üöÄ –ú–æ–∂–Ω–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ MongoDB API –¥–ª—è –≤—Å–µ—Ö –æ–ø–µ—Ä–∞—Ü–∏–π" 